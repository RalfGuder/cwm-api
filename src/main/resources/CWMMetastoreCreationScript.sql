-- Create database [CWM 1.0]

-- File created: 10/25/2002 4:09:24 PM

USE master
GO

IF EXISTS (SELECT * FROM sysdatabases WHERE name = 'CWM 1.0')
   DROP DATABASE [CWM 1.0]
GO

CREATE DATABASE [CWM 1.0]
GO

USE [CWM 1.0]
GO

SET NOCOUNT ON
GO

--
-- Globals
--

PRINT 'Global structures and procedures'
GO

CREATE TABLE [CWM_1.0_ClassMap]
   (_ID INT PRIMARY KEY
   ,_Name VARCHAR(128)
   )
GO

CREATE INDEX [CWM_1.0_ClassMap_Name_Index]
   ON [CWM_1.0_ClassMap](_Name)
GO

--
-- Utility Procedures
--

CREATE PROCEDURE [CWM 1.0_Error_Message]
    @_ID INT
   ,@_Description NVARCHAR(255) OUTPUT
AS
   SELECT @_Description = description FROM master..sysmessages WHERE error = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE [CWM 1.0_Error_Severity]
    @_ID INT
   ,@_Severity INT OUTPUT
AS
   SELECT @_Severity = severity FROM master..sysmessages WHERE error = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE [CWM 1.0_DeleteLinks]
    @GetCursorProc VARCHAR(128)
   ,@DeleteProc VARCHAR(128)
   ,@_ID INT
AS
   DECLARE @LinkedID INT
   DECLARE @Links CURSOR
   DECLARE @Error INT
   EXECUTE @Error = @GetCursorProc @_ID, @Links OUTPUT
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @Links INTO @LinkedID
      SELECT @Error = @@Error
      WHILE @@FETCH_STATUS = 0 AND @Error = 0
      BEGIN
         EXECUTE @Error = @DeleteProc @_ID, @LinkedID
         FETCH NEXT FROM @Links INTO @LinkedID
      END
      CLOSE @Links
      DEALLOCATE @Links
   END
   RETURN @Error
GO

CREATE PROCEDURE [CWM 1.0_DeleteSubtypes]
    @_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @TypeID INT
   DECLARE @ProcName VARCHAR(128)
   DECLARE @Error INT
   OPEN @_Cursor
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @TypeID
      SELECT @Error = @@Error
      WHILE @@FETCH_STATUS = 0 AND @Error = 0
      BEGIN
         SELECT @ProcName = _Name FROM [CWM 1.0_ClassMap] WHERE _ID = @TypeID
         SELECT @Error = @@Error
         IF @Error = 0
         BEGIN
            SET @ProcName = 'Delete_' + REPLACE(@ProcName, '::', '_')
            EXECUTE @Error = @ProcName @_ID
         END
         IF @Error = 0
         BEGIN
            FETCH NEXT FROM @_Cursor INTO @TypeID
            SELECT @Error = @@Error
         END
      END
      CLOSE @_Cursor
      DEALLOCATE @_Cursor
   END
   RETURN @Error
GO


--
-- Core DataTypes
--

PRINT 'DataType Core.ChangeableKind'
GO

CREATE TABLE Core_ChangeableKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Core_ChangeableKind(_EnumLiteral) VALUES('ck_changeable')
INSERT Core_ChangeableKind(_EnumLiteral) VALUES('ck_frozen')
INSERT Core_ChangeableKind(_EnumLiteral) VALUES('ck_addOnly')
GO

CREATE PROCEDURE GetAll_Core_ChangeableKind
AS
   SELECT * FROM Core_ChangeableKind
   RETURN @@ERROR
GO


PRINT 'DataType Core.OrderingKind'
GO

CREATE TABLE Core_OrderingKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Core_OrderingKind(_EnumLiteral) VALUES('ok_unordered')
INSERT Core_OrderingKind(_EnumLiteral) VALUES('ok_ordered')
GO

CREATE PROCEDURE GetAll_Core_OrderingKind
AS
   SELECT * FROM Core_OrderingKind
   RETURN @@ERROR
GO


PRINT 'DataType Core.ScopeKind'
GO

CREATE TABLE Core_ScopeKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Core_ScopeKind(_EnumLiteral) VALUES('sk_instance')
INSERT Core_ScopeKind(_EnumLiteral) VALUES('sk_classifier')
GO

CREATE PROCEDURE GetAll_Core_ScopeKind
AS
   SELECT * FROM Core_ScopeKind
   RETURN @@ERROR
GO


PRINT 'DataType Core.VisibilityKind'
GO

CREATE TABLE Core_VisibilityKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Core_VisibilityKind(_EnumLiteral) VALUES('vk_public')
INSERT Core_VisibilityKind(_EnumLiteral) VALUES('vk_protected')
INSERT Core_VisibilityKind(_EnumLiteral) VALUES('vk_private')
INSERT Core_VisibilityKind(_EnumLiteral) VALUES('vk_package')
INSERT Core_VisibilityKind(_EnumLiteral) VALUES('vk_notapplicable')
GO

CREATE PROCEDURE GetAll_Core_VisibilityKind
AS
   SELECT * FROM Core_VisibilityKind
   RETURN @@ERROR
GO


--
-- Behavioral DataTypes
--

PRINT 'DataType Behavioral.ParameterDirectionKind'
GO

CREATE TABLE Behavioral_ParameterDirectionKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Behavioral_ParameterDirectionKind(_EnumLiteral) VALUES('pdk_in')
INSERT Behavioral_ParameterDirectionKind(_EnumLiteral) VALUES('pdk_inout')
INSERT Behavioral_ParameterDirectionKind(_EnumLiteral) VALUES('pdk_out')
INSERT Behavioral_ParameterDirectionKind(_EnumLiteral) VALUES('pdk_return')
GO

CREATE PROCEDURE GetAll_Behavioral_ParameterDirectionKind
AS
   SELECT * FROM Behavioral_ParameterDirectionKind
   RETURN @@ERROR
GO


--
-- Relationships DataTypes
--

PRINT 'DataType Relationships.AggregationKind'
GO

CREATE TABLE Relationships_AggregationKind
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relationships_AggregationKind(_EnumLiteral) VALUES('ak_none')
INSERT Relationships_AggregationKind(_EnumLiteral) VALUES('ak_aggregate')
INSERT Relationships_AggregationKind(_EnumLiteral) VALUES('ak_composite')
GO

CREATE PROCEDURE GetAll_Relationships_AggregationKind
AS
   SELECT * FROM Relationships_AggregationKind
   RETURN @@ERROR
GO


--
-- Relational.Enumerations DataTypes
--

PRINT 'DataType Relational.Enumerations.ActionOrientationType'
GO

CREATE TABLE Relational_Enumerations_ActionOrientationType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_ActionOrientationType(_EnumLiteral) VALUES('row')
INSERT Relational_Enumerations_ActionOrientationType(_EnumLiteral) VALUES('statement')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_ActionOrientationType
AS
   SELECT * FROM Relational_Enumerations_ActionOrientationType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.ConditionTimingType'
GO

CREATE TABLE Relational_Enumerations_ConditionTimingType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_ConditionTimingType(_EnumLiteral) VALUES('before')
INSERT Relational_Enumerations_ConditionTimingType(_EnumLiteral) VALUES('after')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_ConditionTimingType
AS
   SELECT * FROM Relational_Enumerations_ConditionTimingType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.DeferrabilityType'
GO

CREATE TABLE Relational_Enumerations_DeferrabilityType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_DeferrabilityType(_EnumLiteral) VALUES('initiallyDeferred')
INSERT Relational_Enumerations_DeferrabilityType(_EnumLiteral) VALUES('initiallyImmediate')
INSERT Relational_Enumerations_DeferrabilityType(_EnumLiteral) VALUES('notDeferrable')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_DeferrabilityType
AS
   SELECT * FROM Relational_Enumerations_DeferrabilityType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.EventManipulationType'
GO

CREATE TABLE Relational_Enumerations_EventManipulationType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_EventManipulationType(_EnumLiteral) VALUES('insert')
INSERT Relational_Enumerations_EventManipulationType(_EnumLiteral) VALUES('delete')
INSERT Relational_Enumerations_EventManipulationType(_EnumLiteral) VALUES('update')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_EventManipulationType
AS
   SELECT * FROM Relational_Enumerations_EventManipulationType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.NullableType'
GO

CREATE TABLE Relational_Enumerations_NullableType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_NullableType(_EnumLiteral) VALUES('columnNoNulls')
INSERT Relational_Enumerations_NullableType(_EnumLiteral) VALUES('columnNullable')
INSERT Relational_Enumerations_NullableType(_EnumLiteral) VALUES('columnNullableUnknown')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_NullableType
AS
   SELECT * FROM Relational_Enumerations_NullableType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.ProcedureType'
GO

CREATE TABLE Relational_Enumerations_ProcedureType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_ProcedureType(_EnumLiteral) VALUES('procedure')
INSERT Relational_Enumerations_ProcedureType(_EnumLiteral) VALUES('function')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_ProcedureType
AS
   SELECT * FROM Relational_Enumerations_ProcedureType
   RETURN @@ERROR
GO


PRINT 'DataType Relational.Enumerations.ReferentialRuleType'
GO

CREATE TABLE Relational_Enumerations_ReferentialRuleType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Relational_Enumerations_ReferentialRuleType(_EnumLiteral) VALUES('importedKeyNoAction')
INSERT Relational_Enumerations_ReferentialRuleType(_EnumLiteral) VALUES('importedKeyCascade')
INSERT Relational_Enumerations_ReferentialRuleType(_EnumLiteral) VALUES('importedKeySetNull')
INSERT Relational_Enumerations_ReferentialRuleType(_EnumLiteral) VALUES('importedKeyRestrict')
INSERT Relational_Enumerations_ReferentialRuleType(_EnumLiteral) VALUES('importedKeySetDefault')
GO

CREATE PROCEDURE GetAll_Relational_Enumerations_ReferentialRuleType
AS
   SELECT * FROM Relational_Enumerations_ReferentialRuleType
   RETURN @@ERROR
GO


--
-- XML DataTypes
--

PRINT 'DataType XML.AttributeDefault'
GO

CREATE TABLE XML_AttributeDefault
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT XML_AttributeDefault(_EnumLiteral) VALUES('xml_required')
INSERT XML_AttributeDefault(_EnumLiteral) VALUES('xml_implied')
INSERT XML_AttributeDefault(_EnumLiteral) VALUES('xml_default')
INSERT XML_AttributeDefault(_EnumLiteral) VALUES('xml_fixed')
GO

CREATE PROCEDURE GetAll_XML_AttributeDefault
AS
   SELECT * FROM XML_AttributeDefault
   RETURN @@ERROR
GO


PRINT 'DataType XML.ContentType'
GO

CREATE TABLE XML_ContentType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT XML_ContentType(_EnumLiteral) VALUES('xml_empty')
INSERT XML_ContentType(_EnumLiteral) VALUES('xml_any')
INSERT XML_ContentType(_EnumLiteral) VALUES('xml_mixed')
INSERT XML_ContentType(_EnumLiteral) VALUES('xml_element')
GO

CREATE PROCEDURE GetAll_XML_ContentType
AS
   SELECT * FROM XML_ContentType
   RETURN @@ERROR
GO


PRINT 'DataType XML.OccurrenceType'
GO

CREATE TABLE XML_OccurrenceType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT XML_OccurrenceType(_EnumLiteral) VALUES('xml_one')
INSERT XML_OccurrenceType(_EnumLiteral) VALUES('xml_zeroOrOne')
INSERT XML_OccurrenceType(_EnumLiteral) VALUES('xml_zeroOrMore')
INSERT XML_OccurrenceType(_EnumLiteral) VALUES('xml_oneOrMore')
GO

CREATE PROCEDURE GetAll_XML_OccurrenceType
AS
   SELECT * FROM XML_OccurrenceType
   RETURN @@ERROR
GO


PRINT 'DataType XML.ElementOrderType'
GO

CREATE TABLE XML_ElementOrderType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT XML_ElementOrderType(_EnumLiteral) VALUES('xml_choice')
INSERT XML_ElementOrderType(_EnumLiteral) VALUES('xml_sequence')
GO

CREATE PROCEDURE GetAll_XML_ElementOrderType
AS
   SELECT * FROM XML_ElementOrderType
   RETURN @@ERROR
GO


--
-- Transformation DataTypes
--

PRINT 'DataType Transformation.TreeType'
GO

CREATE TABLE Transformation_TreeType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT Transformation_TreeType(_EnumLiteral) VALUES('tfm_unary')
INSERT Transformation_TreeType(_EnumLiteral) VALUES('tfm_binary')
GO

CREATE PROCEDURE GetAll_Transformation_TreeType
AS
   SELECT * FROM Transformation_TreeType
   RETURN @@ERROR
GO


--
-- DataMining DataTypes
--

PRINT 'DataType DataMining.AttributeType'
GO

CREATE TABLE DataMining_AttributeType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT DataMining_AttributeType(_EnumLiteral) VALUES('categorical')
INSERT DataMining_AttributeType(_EnumLiteral) VALUES('numerical')
GO

CREATE PROCEDURE GetAll_DataMining_AttributeType
AS
   SELECT * FROM DataMining_AttributeType
   RETURN @@ERROR
GO


PRINT 'DataType DataMining.AttributeUsage'
GO

CREATE TABLE DataMining_AttributeUsage
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT DataMining_AttributeUsage(_EnumLiteral) VALUES('active')
INSERT DataMining_AttributeUsage(_EnumLiteral) VALUES('inactive')
INSERT DataMining_AttributeUsage(_EnumLiteral) VALUES('supplementary')
GO

CREATE PROCEDURE GetAll_DataMining_AttributeUsage
AS
   SELECT * FROM DataMining_AttributeUsage
   RETURN @@ERROR
GO


PRINT 'DataType DataMining.CategoryProperty'
GO

CREATE TABLE DataMining_CategoryProperty
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT DataMining_CategoryProperty(_EnumLiteral) VALUES('missing')
INSERT DataMining_CategoryProperty(_EnumLiteral) VALUES('invalid')
INSERT DataMining_CategoryProperty(_EnumLiteral) VALUES('valid')
INSERT DataMining_CategoryProperty(_EnumLiteral) VALUES('positive')
INSERT DataMining_CategoryProperty(_EnumLiteral) VALUES('negative')
GO

CREATE PROCEDURE GetAll_DataMining_CategoryProperty
AS
   SELECT * FROM DataMining_CategoryProperty
   RETURN @@ERROR
GO


PRINT 'DataType DataMining.OrderType'
GO

CREATE TABLE DataMining_OrderType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT DataMining_OrderType(_EnumLiteral) VALUES('alphabetic')
INSERT DataMining_OrderType(_EnumLiteral) VALUES('date')
INSERT DataMining_OrderType(_EnumLiteral) VALUES('numeric')
INSERT DataMining_OrderType(_EnumLiteral) VALUES('inSequence')
GO

CREATE PROCEDURE GetAll_DataMining_OrderType
AS
   SELECT * FROM DataMining_OrderType
   RETURN @@ERROR
GO


--
-- WarehouseProcess.DataType DataTypes
--

PRINT 'DataType WarehouseProcess.DataType.RecurringType'
GO

CREATE TABLE WarehouseProcess_DataType_RecurringType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyYear')
INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyMonth')
INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyWeek')
INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyDay')
INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyHour')
INSERT WarehouseProcess_DataType_RecurringType(_EnumLiteral) VALUES('everyMinute')
GO

CREATE PROCEDURE GetAll_WarehouseProcess_DataType_RecurringType
AS
   SELECT * FROM WarehouseProcess_DataType_RecurringType
   RETURN @@ERROR
GO


PRINT 'DataType WarehouseProcess.DataType.DayOfWeek'
GO

CREATE TABLE WarehouseProcess_DataType_DayOfWeek
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('monday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('tuesday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('wednesday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('thursday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('friday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('saturday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('sunday')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('workingDay')
INSERT WarehouseProcess_DataType_DayOfWeek(_EnumLiteral) VALUES('nonworkingDay')
GO

CREATE PROCEDURE GetAll_WarehouseProcess_DataType_DayOfWeek
AS
   SELECT * FROM WarehouseProcess_DataType_DayOfWeek
   RETURN @@ERROR
GO


PRINT 'DataType WarehouseProcess.DataType.WaitRuleType'
GO

CREATE TABLE WarehouseProcess_DataType_WaitRuleType
   (_EnumLiteral VARCHAR(128)
   )
GO

INSERT WarehouseProcess_DataType_WaitRuleType(_EnumLiteral) VALUES('waitForAll')
INSERT WarehouseProcess_DataType_WaitRuleType(_EnumLiteral) VALUES('waitForAny')
GO

CREATE PROCEDURE GetAll_WarehouseProcess_DataType_WaitRuleType
AS
   SELECT * FROM WarehouseProcess_DataType_WaitRuleType
   RETURN @@ERROR
GO


--
-- Core Classes
--

PRINT 'Class Core.Element'
GO

CREATE TABLE Core_Element
   (_ID INT IDENTITY PRIMARY KEY
   ,_Kind_ID INT
   )
GO

CREATE INDEX Core_Element_Kind_ID_Index ON Core_Element(_Kind_ID)
GO
INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(1, 'Core.Element')
GO

CREATE PROCEDURE Add_Core_Element
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Add_Core_Element
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      INSERT Core_Element (_Kind_ID)
         VALUES (1)
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      SELECT @_ID = IDENT_CURRENT('Core_Element')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Element
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Element
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Element
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID <> 1
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Element WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Element
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Element
   @_ID INT
AS
   SELECT Core_Element._ID AS _ID
      FROM Core_Element
      WHERE Core_Element._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Element
AS
   SELECT Core_Element._ID AS _ID
      FROM Core_Element
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Element
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Element._ID AS _ID
         FROM Core_Element
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE GetKind_Core_Element
    @_ID INT
   ,@_Kind VARCHAR(128) OUTPUT
AS
   SELECT @_Kind = [CWM_1.0_ClassMap]._Name
      FROM [CWM_1.0_ClassMap], Core_Element
      WHERE [CWM_1.0_ClassMap]._ID = Core_Element._Kind_ID
        AND Core_Element._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE AllOfType_Core_Element
AS
   SELECT _ID FROM Core_Element
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Element
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 1
   RETURN @@Error
GO


PRINT 'Class Core.ModelElement'
GO

CREATE TABLE Core_ModelElement
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,name VARCHAR(256) NOT NULL
   ,visibility VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(2, 'Core.ModelElement')
GO

CREATE PROCEDURE Get_Core_ModelElement_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = name FROM Core_ModelElement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_ModelElement_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_ModelElement SET name = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_ModelElement_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Core_ModelElement.visibility
      FROM Core_ModelElement
      WHERE Core_ModelElement._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_ModelElement_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Core_ModelElement
      SET visibility = 
          (SELECT _EnumLiteral FROM Core_VisibilityKind WHERE _EnumLiteral = @_Value)
      WHERE Core_ModelElement._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Add_Core_ModelElement
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_ModelElement WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_ModelElement (_ID, name, visibility)
         VALUES (@_ID, '', 'vk_public')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_ModelElement
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (3, 4, 5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 
                               141, 143, 147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 
                               170, 171, 6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173, 7, 9, 37, 
                               94, 102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 110, 138, 146, 174, 178, 179, 180, 
                               181, 188, 198, 38, 43, 44, 61, 120, 127, 133, 151, 128, 129, 10, 11, 12, 51, 83, 96, 98, 
                               105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31, 23, 27, 84, 28, 175, 176, 13, 93, 125, 
                               14, 69, 126, 131, 20, 22, 24, 25, 184, 185, 186, 187, 195, 190, 191, 192, 193, 194, 29, 95, 
                               32, 33, 35, 92, 100, 108, 36, 91, 101, 106, 118, 34, 39, 40, 41, 60, 42, 45, 47, 56, 
                               87, 90, 57, 86, 58, 88, 59, 89, 67, 70, 85, 113, 114, 115, 121, 123, 130, 132, 153, 154, 
                               177, 182, 183, 189, 196, 197, 199, 200, 201, 202, 203, 204)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_DependencyClient_clientDependency', 'Delete_Core_DependencyClient', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_DependencySupplier_supplierDependency', 'Delete_Core_DependencySupplier', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ElementConstraint_constraint', 'Delete_Core_ElementConstraint', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ElementOwnership_namespace', 'Delete_Core_ElementOwnership', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ImportedElements_importer', 'Delete_Core_ImportedElements', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypedElement_stereotype', 'Delete_Core_StereotypedElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_TaggedElement_taggedValue', 'Delete_Core_TaggedElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_DocumentDescribes_document', 'Delete_BusinessInformation_DocumentDescribes', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ModelElementDescription_description', 'Delete_BusinessInformation_ModelElementDescription', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ModelElementResponsibility_responsibleParty', 'Delete_BusinessInformation_ModelElementResponsibility', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_ReferencedElement_elementNode', 'Delete_Expressions_ReferencedElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_DataObjectSetElement_set', 'Delete_Transformation_DataObjectSetElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceModelElement_renderedObject', 'Delete_InformationVisualization_RenderedObjectsReferenceModelElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_VocabularyElementToModelElement_vocabularyElement', 'Delete_BusinessNomenclature_VocabularyElementToModelElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ModelElementMeasurement_measurement', 'Delete_WarehouseOperation_ModelElementMeasurement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ModelElementChangeRequest_changeRequest', 'Delete_WarehouseOperation_ModelElementChangeRequest', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_ModelElement WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ModelElement
   @_ID INT
AS
   SELECT Core_ModelElement._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_ModelElement
      WHERE Core_ModelElement._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_ModelElement
AS
   SELECT Core_ModelElement._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_ModelElement
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ModelElement
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_ModelElement._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_ModelElement
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_ModelElement
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (2, 3, 4, 5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 
             140, 141, 143, 147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 
             169, 170, 171, 6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173, 7, 9, 
             37, 94, 102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 110, 138, 146, 174, 178, 179, 
             180, 181, 188, 198, 38, 43, 44, 61, 120, 127, 133, 151, 128, 129, 10, 11, 12, 51, 83, 96, 
             98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31, 23, 27, 84, 28, 175, 176, 13, 93, 
             125, 14, 69, 126, 131, 20, 22, 24, 25, 184, 185, 186, 187, 195, 190, 191, 192, 193, 194, 29, 
             95, 32, 33, 35, 92, 100, 108, 36, 91, 101, 106, 118, 34, 39, 40, 41, 60, 42, 45, 47, 
             56, 87, 90, 57, 86, 58, 88, 59, 89, 67, 70, 85, 113, 114, 115, 121, 123, 130, 132, 153, 
             154, 177, 182, 183, 189, 196, 197, 199, 200, 201, 202, 203, 204)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_ModelElement
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 2
   RETURN @@Error
GO


PRINT 'Class Core.Namespace'
GO

CREATE TABLE Core_Namespace
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(3, 'Core.Namespace')
GO

CREATE PROCEDURE Get_Core_Namespace_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Namespace_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Namespace_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Namespace
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Namespace WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Namespace
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Namespace (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Namespace
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Namespace
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Namespace
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (4, 5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 141, 
                               143, 147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 170, 
                               171, 6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173, 7, 9, 37, 94, 
                               102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 110, 138, 146, 174, 178, 179, 180, 181, 
                               188, 198, 38, 43, 44, 61, 120, 127, 133, 151, 128, 129)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ElementOwnership_ownedElement', 'Delete_Core_ElementOwnership', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Namespace WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Namespace
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace
   @_ID INT
AS
   SELECT Core_Namespace._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Namespace,
           Core_ModelElement
      WHERE Core_Namespace._ID = @_ID
        AND Core_Namespace._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Namespace
AS
   SELECT Core_Namespace._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Namespace,
           Core_ModelElement
      WHERE Core_Namespace._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Namespace
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Namespace._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Namespace,
              Core_ModelElement
         WHERE Core_Namespace._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Namespace
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (3, 4, 5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 
             141, 143, 147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 
             170, 171, 6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173, 7, 9, 37, 
             94, 102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 110, 138, 146, 174, 178, 179, 180, 
             181, 188, 198, 38, 43, 44, 61, 120, 127, 133, 151, 128, 129)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Namespace
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 3
   RETURN @@Error
GO


PRINT 'Class Core.Classifier'
GO

CREATE TABLE Core_Classifier
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isAbstract BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(4, 'Core.Classifier')
GO

CREATE PROCEDURE Get_Core_Classifier_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isAbstract FROM Core_Classifier WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Classifier_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Core_Classifier SET isAbstract = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Classifier_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Classifier_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Classifier_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Classifier
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Classifier WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Classifier
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Classifier (_ID, isAbstract)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Classifier
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Classifier
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Classifier
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 141, 143, 
                               147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 170, 171, 
                               6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ClassifierFeature_feature', 'Delete_Core_ClassifierFeature', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StructuralFeatureType_structuralFeature', 'Delete_Core_StructuralFeatureType', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_ParameterType_parameter', 'Delete_Behavioral_ParameterType', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relationships_ChildElement_generalization', 'Delete_Relationships_ChildElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relationships_ParentElement_specialization', 'Delete_Relationships_ParentElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_InstanceClassifier_instance', 'Delete_Instance_InstanceClassifier', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_ClassifierAlias_alias', 'Delete_DataTypes_ClassifierAlias', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_ExpressionNodeClassifier_expressionNode', 'Delete_Expressions_ExpressionNodeClassifier', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_TypeMapping_MappingSource_mappingFrom', 'Delete_TypeMapping_MappingSource', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_TypeMapping_MappingTarget_mappingTo', 'Delete_TypeMapping_MappingTarget', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapSource_classifierMap', 'Delete_Transformation_ClassifierMapSource', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapTarget_classifierMap', 'Delete_Transformation_ClassifierMapTarget', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_CFMapClassifier_cfMap', 'Delete_Transformation_CFMapClassifier', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Classifier WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Classifier
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier
   @_ID INT
AS
   SELECT Core_Classifier._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Classifier,
           Core_ModelElement
      WHERE Core_Classifier._ID = @_ID
        AND Core_Classifier._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Classifier
AS
   SELECT Core_Classifier._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Classifier,
           Core_ModelElement
      WHERE Core_Classifier._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Classifier._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Classifier,
              Core_ModelElement
         WHERE Core_Classifier._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Classifier
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (4, 5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 141, 
             143, 147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 170, 
             171, 6, 46, 49, 80, 81, 8, 62, 124, 26, 50, 68, 122, 79, 103, 173)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Classifier
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 4
   RETURN @@Error
GO


PRINT 'Class Core.Class'
GO

CREATE TABLE Core_Class
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(5, 'Core.Class')
GO

CREATE PROCEDURE Get_Core_Class_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Class_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Class_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Class_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Class
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Class WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Class
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Class (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Class
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Class
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Class
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 141, 143, 147, 
                               142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 170, 171)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexSpansClass_index', 'Delete_KeysIndexes_IndexSpansClass', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Class WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Class
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class
   @_ID INT
AS
   SELECT Core_Class._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Class,
           Core_Classifier,
           Core_ModelElement
      WHERE Core_Class._ID = @_ID
        AND Core_Class._ID = Core_Classifier._ID
        AND Core_Class._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Class
AS
   SELECT Core_Class._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Class,
           Core_Classifier,
           Core_ModelElement
      WHERE Core_Class._ID = Core_Classifier._ID
        AND Core_Class._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Class._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Class,
              Core_Classifier,
              Core_ModelElement
         WHERE Core_Class._ID = Core_Classifier._ID
           AND Core_Class._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Class
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Class
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 5
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Class
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Class
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Class @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Class
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (5, 30, 74, 75, 76, 77, 78, 82, 97, 104, 111, 134, 135, 136, 137, 139, 140, 141, 143, 
             147, 142, 144, 145, 148, 149, 152, 155, 156, 158, 159, 162, 160, 165, 166, 167, 168, 169, 170, 171)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Class
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 5
   RETURN @@Error
GO


PRINT 'Class Core.DataType'
GO

CREATE TABLE Core_DataType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(6, 'Core.DataType')
GO

CREATE PROCEDURE Get_Core_DataType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_DataType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_DataType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_DataType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_DataType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_DataType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_DataType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_DataType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_DataType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_DataType
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_DataType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (46, 49, 80, 81)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Core_DataType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_DataType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType
   @_ID INT
AS
   SELECT Core_DataType._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_DataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Core_DataType._ID = @_ID
        AND Core_DataType._ID = Core_Classifier._ID
        AND Core_DataType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_DataType
AS
   SELECT Core_DataType._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_DataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Core_DataType._ID = Core_Classifier._ID
        AND Core_DataType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_DataType._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_DataType,
              Core_Classifier,
              Core_ModelElement
         WHERE Core_DataType._ID = Core_Classifier._ID
           AND Core_DataType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_DataType
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_DataType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_DataType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 6
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_DataType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_DataType
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_DataType @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_DataType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (6, 46, 49, 80, 81)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_DataType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 6
   RETURN @@Error
GO


PRINT 'Class Core.Package'
GO

CREATE TABLE Core_Package
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(7, 'Core.Package')
GO

CREATE PROCEDURE Get_Core_Package_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Package_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Package_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Package
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Package WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Package
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Package (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Package
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Package
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Package
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (8, 62, 124, 9, 37, 94, 102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 110, 
                               138, 146, 174, 178, 179, 180, 181, 188, 198)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ImportedElements_importedElement', 'Delete_Core_ImportedElements', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataManagerDataPackage_dataManager', 'Delete_SoftwareDeployment_DataManagerDataPackage', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Package WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Package
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package
   @_ID INT
AS
   SELECT Core_Package._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Package,
           Core_ModelElement
      WHERE Core_Package._ID = @_ID
        AND Core_Package._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Package
AS
   SELECT Core_Package._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Package,
           Core_ModelElement
      WHERE Core_Package._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Package._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Package,
              Core_ModelElement
         WHERE Core_Package._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Package
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Package
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 7
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Package
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Package
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Package @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Package
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (7, 8, 62, 124, 9, 37, 94, 102, 107, 119, 63, 65, 66, 64, 71, 72, 73, 99, 109, 
             110, 138, 146, 174, 178, 179, 180, 181, 188, 198)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Package
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 7
   RETURN @@Error
GO


PRINT 'Class Core.Subsystem'
GO

CREATE TABLE Core_Subsystem
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(8, 'Core.Subsystem')
GO

CREATE PROCEDURE Get_Core_Subsystem_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Subsystem_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Subsystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Subsystem_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Subsystem
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Subsystem WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Subsystem
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
      IF @Error = 0
         EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   END
   IF @Error = 0
   BEGIN
      INSERT Core_Subsystem (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Subsystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Subsystem
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Subsystem
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (62, 124)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Subsystem WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Subsystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem
   @_ID INT
AS
   SELECT Core_Subsystem._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM Core_Subsystem,
           Core_ModelElement,
           Core_Classifier
      WHERE Core_Subsystem._ID = @_ID
        AND Core_Subsystem._ID = Core_ModelElement._ID
        AND Core_Subsystem._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Subsystem
AS
   SELECT Core_Subsystem._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM Core_Subsystem,
           Core_ModelElement,
           Core_Classifier
      WHERE Core_Subsystem._ID = Core_ModelElement._ID
        AND Core_Subsystem._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Subsystem._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility,
             Core_Classifier.isAbstract AS isAbstract
         FROM Core_Subsystem,
              Core_ModelElement,
              Core_Classifier
         WHERE Core_Subsystem._ID = Core_ModelElement._ID
           AND Core_Subsystem._ID = Core_Classifier._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Subsystem
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Subsystem
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Subsystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 8
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Subsystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Subsystem
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Subsystem @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Subsystem
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (8, 62, 124)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Subsystem
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 8
   RETURN @@Error
GO


PRINT 'Class Core.Model'
GO

CREATE TABLE Core_Model
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(9, 'Core.Model')
GO

CREATE PROCEDURE Get_Core_Model_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Model_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Model_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Model
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Model WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Model
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Model (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Model
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Model
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Model
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Model WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Model
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model
   @_ID INT
AS
   SELECT Core_Model._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Model,
           Core_ModelElement
      WHERE Core_Model._ID = @_ID
        AND Core_Model._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Model
AS
   SELECT Core_Model._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Model,
           Core_ModelElement
      WHERE Core_Model._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Model._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Model,
              Core_ModelElement
         WHERE Core_Model._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Model
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Model
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Model @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 9
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Model
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Model
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Model @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Model
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 9
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Model
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 9
   RETURN @@Error
GO


PRINT 'Class Core.Feature'
GO

CREATE TABLE Core_Feature
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,ownerScope VARCHAR(128)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(10, 'Core.Feature')
GO

CREATE PROCEDURE Get_Core_Feature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Core_Feature.ownerScope
      FROM Core_Feature
      WHERE Core_Feature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Feature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Core_Feature
      SET ownerScope = 
          (SELECT _EnumLiteral FROM Core_ScopeKind WHERE _EnumLiteral = @_Value)
      WHERE Core_Feature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Feature_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Feature_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Feature_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Feature
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Feature WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Feature
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Feature (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Feature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Feature
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Feature
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (11, 12, 51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31, 23, 27, 
                               84, 28, 175, 176)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ClassifierFeature_owner', 'Delete_Core_ClassifierFeature', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_NodeFeature_featureNode', 'Delete_Expressions_NodeFeature', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_FeatureMapTarget_featureMap', 'Delete_Transformation_FeatureMapTarget', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_FeatureMapSource_featureMap', 'Delete_Transformation_FeatureMapSource', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_CFMapFeature_cfMap', 'Delete_Transformation_CFMapFeature', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Feature WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Feature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature
   @_ID INT
AS
   SELECT Core_Feature._ID AS _ID,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Feature,
           Core_ModelElement
      WHERE Core_Feature._ID = @_ID
        AND Core_Feature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Feature
AS
   SELECT Core_Feature._ID AS _ID,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Feature,
           Core_ModelElement
      WHERE Core_Feature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Feature
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Feature._ID AS _ID,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Feature,
              Core_ModelElement
         WHERE Core_Feature._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Feature
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (10, 11, 12, 51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31, 23, 
             27, 84, 28, 175, 176)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Feature
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 10
   RETURN @@Error
GO


PRINT 'Class Core.Multiplicity'
GO

CREATE TABLE Core_Multiplicity
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(18, 'Core.Multiplicity')
GO

CREATE PROCEDURE Add_Core_Multiplicity
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Multiplicity WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Multiplicity
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Multiplicity (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Multiplicity
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Multiplicity
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Multiplicity
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_RangeMultiplicity_range', 'Delete_Core_RangeMultiplicity', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Multiplicity WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Multiplicity
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Multiplicity
   @_ID INT
AS
   SELECT Core_Multiplicity._ID AS _ID
      FROM Core_Multiplicity
      WHERE Core_Multiplicity._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Multiplicity
AS
   SELECT Core_Multiplicity._ID AS _ID
      FROM Core_Multiplicity
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Multiplicity
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Multiplicity._ID AS _ID
         FROM Core_Multiplicity
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Multiplicity
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Multiplicity
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Multiplicity @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 18
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Multiplicity
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Multiplicity
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Multiplicity @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Multiplicity
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 18
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Multiplicity
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 18
   RETURN @@Error
GO


PRINT 'Class Core.StructuralFeature'
GO

CREATE TABLE Core_StructuralFeature
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,changeability VARCHAR(128) NOT NULL
   ,multiplicity_ID INT
   ,ordering VARCHAR(128)
   ,targetScope VARCHAR(128)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(11, 'Core.StructuralFeature')
GO

CREATE PROCEDURE Get_Core_StructuralFeature_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Core_StructuralFeature.changeability
      FROM Core_StructuralFeature
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Core_StructuralFeature
      SET changeability = 
          (SELECT _EnumLiteral FROM Core_ChangeableKind WHERE _EnumLiteral = @_Value)
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = multiplicity_ID FROM Core_StructuralFeature WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Core_StructuralFeature SET multiplicity_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Core_StructuralFeature.ordering
      FROM Core_StructuralFeature
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Core_StructuralFeature
      SET ordering = 
          (SELECT _EnumLiteral FROM Core_OrderingKind WHERE _EnumLiteral = @_Value)
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Core_StructuralFeature.targetScope
      FROM Core_StructuralFeature
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Core_StructuralFeature
      SET targetScope = 
          (SELECT _EnumLiteral FROM Core_ScopeKind WHERE _EnumLiteral = @_Value)
      WHERE Core_StructuralFeature._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_StructuralFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_StructuralFeature
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_StructuralFeature WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_StructuralFeature
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Feature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      IF @Error = 0
      BEGIN
         INSERT Core_StructuralFeature (_ID, changeability)
            VALUES (@_ID, 'ck_changeable')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Core_StructuralFeature
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_StructuralFeature
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @multiplicity_ID INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @multiplicity_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Core_StructuralFeature
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (12, 51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @multiplicity_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Multiplicity @multiplicity_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StructuralFeatureType_type', 'Delete_Core_StructuralFeatureType', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_FeatureSlot_slot', 'Delete_Instance_FeatureSlot', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_UnionDiscriminator_discriminatedUnion', 'Delete_DataTypes_UnionDiscriminator', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexedFeatures_indexedFeature', 'Delete_KeysIndexes_IndexedFeatures', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_KeyRelationshipFeatures_keyRelationship', 'Delete_KeysIndexes_KeyRelationshipFeatures', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_UniqueFeature_uniqueKey', 'Delete_KeysIndexes_UniqueFeature', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Core_StructuralFeature WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Feature @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Core_StructuralFeature
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature
   @_ID INT
AS
   SELECT Core_StructuralFeature._ID AS _ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Core_StructuralFeature._ID = @_ID
        AND Core_StructuralFeature._ID = Core_Feature._ID
        AND Core_StructuralFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_StructuralFeature
AS
   SELECT Core_StructuralFeature._ID AS _ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Core_StructuralFeature._ID = Core_Feature._ID
        AND Core_StructuralFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StructuralFeature
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_StructuralFeature._ID AS _ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Core_StructuralFeature._ID = Core_Feature._ID
           AND Core_StructuralFeature._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_StructuralFeature
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (11, 12, 51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172, 31)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_StructuralFeature
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 11
   RETURN @@Error
GO


PRINT 'Class Core.Expression'
GO

CREATE TABLE Core_Expression
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,body VARCHAR(256) NOT NULL
   ,[language] VARCHAR(256)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(15, 'Core.Expression')
GO

CREATE PROCEDURE Get_Core_Expression_body
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = body FROM Core_Expression WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Expression_body
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_Expression SET body = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Expression_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [language] FROM Core_Expression WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Expression_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_Expression SET [language] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Add_Core_Expression
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Expression WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Expression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Expression (_ID, body)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Expression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Expression
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Expression
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (16, 17, 48)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Expression WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Expression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Expression
   @_ID INT
AS
   SELECT Core_Expression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_Expression
      WHERE Core_Expression._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Expression
AS
   SELECT Core_Expression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_Expression
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Expression
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Expression._ID AS _ID,
             Core_Expression.body AS body,
             Core_Expression.[language] AS [language]
         FROM Core_Expression
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Expression
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Expression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Expression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 15
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Expression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Expression
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Expression @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Expression
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (15, 16, 17, 48)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Expression
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 15
   RETURN @@Error
GO


PRINT 'Class Core.Attribute'
GO

CREATE TABLE Core_Attribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,initialValue_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Expression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(12, 'Core.Attribute')
GO

CREATE PROCEDURE Get_Core_Attribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = initialValue_ID FROM Core_Attribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Attribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Core_Attribute SET initialValue_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Attribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Attribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Attribute
   @_ID INT OUTPUT
AS
   DECLARE @initialValue_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Attribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_StructuralFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_Expression @initialValue_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Core_Attribute (_ID, initialValue_ID)
            VALUES (@_ID, @initialValue_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Core_Attribute
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Attribute
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @initialValue_ID INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @initialValue_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Core_Attribute
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @initialValue_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @initialValue_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Core_Attribute WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_StructuralFeature @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Core_Attribute
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute
   @_ID INT
AS
   SELECT Core_Attribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Core_Attribute._ID = @_ID
        AND Core_Attribute._ID = Core_StructuralFeature._ID
        AND Core_Attribute._ID = Core_Feature._ID
        AND Core_Attribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Attribute
AS
   SELECT Core_Attribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Core_Attribute._ID = Core_StructuralFeature._ID
        AND Core_Attribute._ID = Core_Feature._ID
        AND Core_Attribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Attribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Attribute._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Core_Attribute._ID = Core_StructuralFeature._ID
           AND Core_Attribute._ID = Core_Feature._ID
           AND Core_Attribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Attribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 12
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Attribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Attribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Attribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Attribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (12, 51, 83, 96, 98, 105, 112, 116, 117, 150, 157, 161, 163, 164, 172)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Attribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 12
   RETURN @@Error
GO


PRINT 'Class Core.BooleanExpression'
GO

CREATE TABLE Core_BooleanExpression
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(16, 'Core.BooleanExpression')
GO

CREATE PROCEDURE Get_Core_BooleanExpression_body
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_body @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_BooleanExpression_body
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_body @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_BooleanExpression_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_language @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_BooleanExpression_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_language @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_BooleanExpression
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_BooleanExpression WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_BooleanExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Expression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_BooleanExpression (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_BooleanExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_BooleanExpression
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_BooleanExpression
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Core_BooleanExpression WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Expression @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_BooleanExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_BooleanExpression
   @_ID INT
AS
   SELECT Core_BooleanExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_BooleanExpression,
           Core_Expression
      WHERE Core_BooleanExpression._ID = @_ID
        AND Core_BooleanExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_BooleanExpression
AS
   SELECT Core_BooleanExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_BooleanExpression,
           Core_Expression
      WHERE Core_BooleanExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_BooleanExpression
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_BooleanExpression._ID AS _ID,
             Core_Expression.body AS body,
             Core_Expression.[language] AS [language]
         FROM Core_BooleanExpression,
              Core_Expression
         WHERE Core_BooleanExpression._ID = Core_Expression._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_BooleanExpression
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_BooleanExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_BooleanExpression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 16
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_BooleanExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_BooleanExpression
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_BooleanExpression @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_BooleanExpression
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 16
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_BooleanExpression
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 16
   RETURN @@Error
GO


PRINT 'Class Core.Constraint'
GO

CREATE TABLE Core_Constraint
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,body_ID INT NOT NULL FOREIGN KEY REFERENCES Core_BooleanExpression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(13, 'Core.Constraint')
GO

CREATE PROCEDURE Get_Core_Constraint_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = body_ID FROM Core_Constraint WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Constraint_body
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Core_Constraint SET body_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Constraint_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Constraint_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Constraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Constraint
   @_ID INT OUTPUT
AS
   DECLARE @body_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Constraint WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Constraint
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_BooleanExpression @body_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Core_Constraint (_ID, body_ID)
            VALUES (@_ID, @body_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Core_Constraint
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Constraint
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @body_ID INT
   EXECUTE @Error = Get_Core_Constraint_body @_ID, @body_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Core_Constraint
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (93, 125)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @body_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_BooleanExpression @body_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_ElementConstraint_constrainedElement', 'Delete_Core_ElementConstraint', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypeConstraints_constrainedStereotype', 'Delete_Core_StereotypeConstraints', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Core_Constraint WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Core_Constraint
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint
   @_ID INT
AS
   SELECT Core_Constraint._ID AS _ID,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Constraint,
           Core_ModelElement
      WHERE Core_Constraint._ID = @_ID
        AND Core_Constraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Constraint
AS
   SELECT Core_Constraint._ID AS _ID,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Constraint,
           Core_ModelElement
      WHERE Core_Constraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Constraint
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Constraint._ID AS _ID,
             Core_Constraint.body_ID AS body_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Constraint,
              Core_ModelElement
         WHERE Core_Constraint._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Constraint
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Constraint
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Constraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 13
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Constraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Constraint
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Constraint @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Constraint
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (13, 93, 125)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Constraint
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 13
   RETURN @@Error
GO


PRINT 'Class Core.Dependency'
GO

CREATE TABLE Core_Dependency
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,kind VARCHAR(256)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(14, 'Core.Dependency')
GO

CREATE PROCEDURE Get_Core_Dependency_kind
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = kind FROM Core_Dependency WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Dependency_kind
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_Dependency SET kind = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Dependency_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Dependency_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Dependency_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Dependency
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Dependency WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Dependency
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Dependency (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Dependency
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Dependency
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Dependency
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (69, 126, 131)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_DependencyClient_client', 'Delete_Core_DependencyClient', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_DependencySupplier_supplier', 'Delete_Core_DependencySupplier', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Dependency WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Dependency
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency
   @_ID INT
AS
   SELECT Core_Dependency._ID AS _ID,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Dependency,
           Core_ModelElement
      WHERE Core_Dependency._ID = @_ID
        AND Core_Dependency._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Dependency
AS
   SELECT Core_Dependency._ID AS _ID,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Dependency,
           Core_ModelElement
      WHERE Core_Dependency._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Dependency._ID AS _ID,
             Core_Dependency.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Dependency,
              Core_ModelElement
         WHERE Core_Dependency._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Dependency
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Dependency
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Dependency @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 14
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Dependency
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Dependency
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Dependency @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Dependency
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (14, 69, 126, 131)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Dependency
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 14
   RETURN @@Error
GO


PRINT 'Class Core.ProcedureExpression'
GO

CREATE TABLE Core_ProcedureExpression
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(17, 'Core.ProcedureExpression')
GO

CREATE PROCEDURE Get_Core_ProcedureExpression_body
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_body @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_ProcedureExpression_body
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_body @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ProcedureExpression_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_language @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_ProcedureExpression_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_language @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_ProcedureExpression
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_ProcedureExpression WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_ProcedureExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Expression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_ProcedureExpression (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_ProcedureExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_ProcedureExpression
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_ProcedureExpression
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (48)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Core_ProcedureExpression WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Expression @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_ProcedureExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ProcedureExpression
   @_ID INT
AS
   SELECT Core_ProcedureExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_ProcedureExpression,
           Core_Expression
      WHERE Core_ProcedureExpression._ID = @_ID
        AND Core_ProcedureExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_ProcedureExpression
AS
   SELECT Core_ProcedureExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM Core_ProcedureExpression,
           Core_Expression
      WHERE Core_ProcedureExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ProcedureExpression
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_ProcedureExpression._ID AS _ID,
             Core_Expression.body AS body,
             Core_Expression.[language] AS [language]
         FROM Core_ProcedureExpression,
              Core_Expression
         WHERE Core_ProcedureExpression._ID = Core_Expression._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_ProcedureExpression
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_ProcedureExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ProcedureExpression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 17
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_ProcedureExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_ProcedureExpression
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_ProcedureExpression @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_ProcedureExpression
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (17, 48)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_ProcedureExpression
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 17
   RETURN @@Error
GO


PRINT 'Class Core.MultiplicityRange'
GO

CREATE TABLE Core_MultiplicityRange
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,lower INT NOT NULL
   ,upper INT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(19, 'Core.MultiplicityRange')
GO

CREATE PROCEDURE Get_Core_MultiplicityRange_lower
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = lower FROM Core_MultiplicityRange WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_MultiplicityRange_lower
    @_ID INT
   ,@_Value INT
AS
   UPDATE Core_MultiplicityRange SET lower = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_MultiplicityRange_upper
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = upper FROM Core_MultiplicityRange WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_MultiplicityRange_upper
    @_ID INT
   ,@_Value INT
AS
   UPDATE Core_MultiplicityRange SET upper = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Add_Core_MultiplicityRange
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_MultiplicityRange WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_MultiplicityRange
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_MultiplicityRange (_ID, lower, upper)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_MultiplicityRange
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_MultiplicityRange
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_MultiplicityRange
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_RangeMultiplicity_multiplicity', 'Delete_Core_RangeMultiplicity', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_MultiplicityRange WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_MultiplicityRange
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_MultiplicityRange
   @_ID INT
AS
   SELECT Core_MultiplicityRange._ID AS _ID,
          Core_MultiplicityRange.lower AS lower,
          Core_MultiplicityRange.upper AS upper
      FROM Core_MultiplicityRange
      WHERE Core_MultiplicityRange._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_MultiplicityRange
AS
   SELECT Core_MultiplicityRange._ID AS _ID,
          Core_MultiplicityRange.lower AS lower,
          Core_MultiplicityRange.upper AS upper
      FROM Core_MultiplicityRange
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_MultiplicityRange
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_MultiplicityRange._ID AS _ID,
             Core_MultiplicityRange.lower AS lower,
             Core_MultiplicityRange.upper AS upper
         FROM Core_MultiplicityRange
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_MultiplicityRange
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_MultiplicityRange
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_MultiplicityRange @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 19
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_MultiplicityRange
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_MultiplicityRange
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_MultiplicityRange @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_MultiplicityRange
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 19
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_MultiplicityRange
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 19
   RETURN @@Error
GO


PRINT 'Class Core.Stereotype'
GO

CREATE TABLE Core_Stereotype
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,baseClass VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(20, 'Core.Stereotype')
GO

CREATE PROCEDURE Get_Core_Stereotype_baseClass
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = baseClass FROM Core_Stereotype WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_Stereotype_baseClass
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_Stereotype SET baseClass = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_Stereotype_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Stereotype_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Core_Stereotype_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Core_Stereotype
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_Stereotype WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_Stereotype (_ID, baseClass)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_Stereotype
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypeConstraints_stereotypeConstraint', 'Delete_Core_StereotypeConstraints', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypedElement_extendedElement', 'Delete_Core_StereotypedElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypeTaggedValues_requiredTag', 'Delete_Core_StereotypeTaggedValues', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_Stereotype WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype
   @_ID INT
AS
   SELECT Core_Stereotype._ID AS _ID,
          Core_Stereotype.baseClass AS baseClass,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Stereotype,
           Core_ModelElement
      WHERE Core_Stereotype._ID = @_ID
        AND Core_Stereotype._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_Stereotype
AS
   SELECT Core_Stereotype._ID AS _ID,
          Core_Stereotype.baseClass AS baseClass,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Core_Stereotype,
           Core_ModelElement
      WHERE Core_Stereotype._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_Stereotype._ID AS _ID,
             Core_Stereotype.baseClass AS baseClass,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Core_Stereotype,
              Core_ModelElement
         WHERE Core_Stereotype._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_Stereotype
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Stereotype @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 20
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_Stereotype
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_Stereotype @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_Stereotype
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 20
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_Stereotype
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 20
   RETURN @@Error
GO


PRINT 'Class Core.TaggedValue'
GO

CREATE TABLE Core_TaggedValue
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,tag VARCHAR(256) NOT NULL
   ,[value] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(21, 'Core.TaggedValue')
GO

CREATE PROCEDURE Get_Core_TaggedValue_tag
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = tag FROM Core_TaggedValue WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_TaggedValue_tag
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_TaggedValue SET tag = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_TaggedValue_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [value] FROM Core_TaggedValue WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Core_TaggedValue_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Core_TaggedValue SET [value] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Add_Core_TaggedValue
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Core_TaggedValue WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Core_TaggedValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Core_TaggedValue (_ID, tag, [value])
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Core_TaggedValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Core_TaggedValue
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Core_TaggedValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_StereotypeTaggedValues_stereotype', 'Delete_Core_StereotypeTaggedValues', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Core_TaggedElement_modelElement', 'Delete_Core_TaggedElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Core_TaggedValue WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Core_TaggedValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_TaggedValue
   @_ID INT
AS
   SELECT Core_TaggedValue._ID AS _ID,
          Core_TaggedValue.tag AS tag,
          Core_TaggedValue.[value] AS [value]
      FROM Core_TaggedValue
      WHERE Core_TaggedValue._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Core_TaggedValue
AS
   SELECT Core_TaggedValue._ID AS _ID,
          Core_TaggedValue.tag AS tag,
          Core_TaggedValue.[value] AS [value]
      FROM Core_TaggedValue
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_TaggedValue
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Core_TaggedValue._ID AS _ID,
             Core_TaggedValue.tag AS tag,
             Core_TaggedValue.[value] AS [value]
         FROM Core_TaggedValue
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_TaggedValue
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Core_TaggedValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_TaggedValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 21
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Core_TaggedValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_TaggedValue
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Core_TaggedValue @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Core_TaggedValue
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 21
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Core_TaggedValue
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 21
   RETURN @@Error
GO


--
-- Behavioral Classes
--

PRINT 'Class Behavioral.Argument'
GO

CREATE TABLE Behavioral_Argument
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,value_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Expression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(22, 'Behavioral.Argument')
GO

CREATE PROCEDURE Get_Behavioral_Argument_value
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = value_ID FROM Behavioral_Argument WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_Argument_value
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Behavioral_Argument SET value_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Argument_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Argument_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Argument
   @_ID INT OUTPUT
AS
   DECLARE @value_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Argument WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Argument
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_Expression @value_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Behavioral_Argument (_ID, value_ID)
            VALUES (@_ID, @value_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Behavioral_Argument
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Argument
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @value_ID INT
   EXECUTE @Error = Get_Behavioral_Argument_value @_ID, @value_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Behavioral_Argument
      SELECT @Error = @@Error
      IF @Error = 0 AND @value_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @value_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_CallArguments_callAction', 'Delete_Behavioral_CallArguments', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Behavioral_Argument WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Behavioral_Argument
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument
   @_ID INT
AS
   SELECT Behavioral_Argument._ID AS _ID,
          Behavioral_Argument.value_ID AS value_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Argument,
           Core_ModelElement
      WHERE Behavioral_Argument._ID = @_ID
        AND Behavioral_Argument._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Argument
AS
   SELECT Behavioral_Argument._ID AS _ID,
          Behavioral_Argument.value_ID AS value_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Argument,
           Core_ModelElement
      WHERE Behavioral_Argument._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Argument
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Argument._ID AS _ID,
             Behavioral_Argument.value_ID AS value_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Argument,
              Core_ModelElement
         WHERE Behavioral_Argument._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Argument
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Argument
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Argument @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 22
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Argument
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Argument
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Argument @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Argument
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 22
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Argument
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 22
   RETURN @@Error
GO


PRINT 'Class Behavioral.BehavioralFeature'
GO

CREATE TABLE Behavioral_BehavioralFeature
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isQuery BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(23, 'Behavioral.BehavioralFeature')
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_isQuery
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isQuery FROM Behavioral_BehavioralFeature WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_BehavioralFeature_isQuery
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Behavioral_BehavioralFeature SET isQuery = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_BehavioralFeature_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_BehavioralFeature_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_BehavioralFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_BehavioralFeature
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_BehavioralFeature WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_BehavioralFeature
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Feature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Behavioral_BehavioralFeature (_ID, isQuery)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Behavioral_BehavioralFeature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_BehavioralFeature
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Behavioral_Beh_76F84184A7F0
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (27, 84, 28)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_BehavioralFeatureParameter_parameter', 'Delete_Behavioral_BehavioralFeatureParameter', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Behavioral_BehavioralFeature WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Feature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Behavioral_Beh_76F84184A7F0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature
   @_ID INT
AS
   SELECT Behavioral_BehavioralFeature._ID AS _ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_BehavioralFeature._ID = @_ID
        AND Behavioral_BehavioralFeature._ID = Core_Feature._ID
        AND Behavioral_BehavioralFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_BehavioralFeature
AS
   SELECT Behavioral_BehavioralFeature._ID AS _ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_BehavioralFeature._ID = Core_Feature._ID
        AND Behavioral_BehavioralFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeature
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_BehavioralFeature._ID AS _ID,
             Behavioral_BehavioralFeature.isQuery AS isQuery,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_BehavioralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Behavioral_BehavioralFeature._ID = Core_Feature._ID
           AND Behavioral_BehavioralFeature._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_BehavioralFeature
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (23, 27, 84, 28)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_BehavioralFeature
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 23
   RETURN @@Error
GO


PRINT 'Class Behavioral.CallAction'
GO

CREATE TABLE Behavioral_CallAction
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(24, 'Behavioral.CallAction')
GO

CREATE PROCEDURE Get_Behavioral_CallAction_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_CallAction_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_CallAction_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_CallAction
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_CallAction WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_CallAction
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Behavioral_CallAction (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Behavioral_CallAction
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_CallAction
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Behavioral_CallAction
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_CallArguments_actualArgument', 'Delete_Behavioral_CallArguments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_CalledOperation_operation', 'Delete_Behavioral_CalledOperation', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_StepExecutionCallAction_stepExecution', 'Delete_WarehouseOperation_StepExecutionCallAction', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Behavioral_CallAction WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Behavioral_CallAction
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction
   @_ID INT
AS
   SELECT Behavioral_CallAction._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_CallAction,
           Core_ModelElement
      WHERE Behavioral_CallAction._ID = @_ID
        AND Behavioral_CallAction._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_CallAction
AS
   SELECT Behavioral_CallAction._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_CallAction,
           Core_ModelElement
      WHERE Behavioral_CallAction._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallAction
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_CallAction._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_CallAction,
              Core_ModelElement
         WHERE Behavioral_CallAction._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_CallAction
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_CallAction
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_CallAction @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 24
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_CallAction
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_CallAction
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_CallAction @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_CallAction
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 24
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_CallAction
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 24
   RETURN @@Error
GO


PRINT 'Class Behavioral.Event'
GO

CREATE TABLE Behavioral_Event
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(25, 'Behavioral.Event')
GO

CREATE PROCEDURE Get_Behavioral_Event_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Event_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Event_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Event
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Event WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Event
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Behavioral_Event (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Behavioral_Event
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Event
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Behavioral_Event
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (184, 185, 186, 187, 195, 190, 191, 192, 193, 194)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_EventParameter_parameter', 'Delete_Behavioral_EventParameter', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Behavioral_Event WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Behavioral_Event
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event
   @_ID INT
AS
   SELECT Behavioral_Event._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Event,
           Core_ModelElement
      WHERE Behavioral_Event._ID = @_ID
        AND Behavioral_Event._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Event
AS
   SELECT Behavioral_Event._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Event,
           Core_ModelElement
      WHERE Behavioral_Event._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Event
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Event._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Event,
              Core_ModelElement
         WHERE Behavioral_Event._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Event
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Event
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Event @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 25
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Event
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Event
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Event @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Event
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (25, 184, 185, 186, 187, 195, 190, 191, 192, 193, 194)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Event
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 25
   RETURN @@Error
GO


PRINT 'Class Behavioral.Interface'
GO

CREATE TABLE Behavioral_Interface
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(26, 'Behavioral.Interface')
GO

CREATE PROCEDURE Get_Behavioral_Interface_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Interface_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Interface_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Interface_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Interface
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Interface WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Interface
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Behavioral_Interface (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Behavioral_Interface
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Interface
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Behavioral_Interface
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Behavioral_Interface WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Behavioral_Interface
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface
   @_ID INT
AS
   SELECT Behavioral_Interface._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Interface,
           Core_Classifier,
           Core_ModelElement
      WHERE Behavioral_Interface._ID = @_ID
        AND Behavioral_Interface._ID = Core_Classifier._ID
        AND Behavioral_Interface._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Interface
AS
   SELECT Behavioral_Interface._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Interface,
           Core_Classifier,
           Core_ModelElement
      WHERE Behavioral_Interface._ID = Core_Classifier._ID
        AND Behavioral_Interface._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Interface._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Interface,
              Core_Classifier,
              Core_ModelElement
         WHERE Behavioral_Interface._ID = Core_Classifier._ID
           AND Behavioral_Interface._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Interface
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Interface
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Interface @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 26
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Interface
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Interface
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Interface @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Interface
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 26
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Interface
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 26
   RETURN @@Error
GO


PRINT 'Class Behavioral.Method'
GO

CREATE TABLE Behavioral_Method
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,body_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(27, 'Behavioral.Method')
GO

CREATE PROCEDURE Get_Behavioral_Method_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = body_ID FROM Behavioral_Method WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_Method_body
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Behavioral_Method SET body_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_Method_isQuery
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_BehavioralFeature_isQuery @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Method_isQuery
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_BehavioralFeature_isQuery @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Method_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Method_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Method_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Method
   @_ID INT OUTPUT
AS
   DECLARE @body_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Method WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Method
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_BehavioralFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_ProcedureExpression @body_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Behavioral_Method (_ID, body_ID)
            VALUES (@_ID, @body_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Behavioral_Method
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Method
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @body_ID INT
   EXECUTE @Error = Get_Behavioral_Method_body @_ID, @body_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Behavioral_Method
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (84)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @body_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @body_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_OperationMethod_specification', 'Delete_Behavioral_OperationMethod', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Behavioral_Method WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Behavioral_BehavioralFeature @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Behavioral_Method
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method
   @_ID INT
AS
   SELECT Behavioral_Method._ID AS _ID,
          Behavioral_Method.body_ID AS body_ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Method,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_Method._ID = @_ID
        AND Behavioral_Method._ID = Behavioral_BehavioralFeature._ID
        AND Behavioral_Method._ID = Core_Feature._ID
        AND Behavioral_Method._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Method
AS
   SELECT Behavioral_Method._ID AS _ID,
          Behavioral_Method.body_ID AS body_ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Method,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_Method._ID = Behavioral_BehavioralFeature._ID
        AND Behavioral_Method._ID = Core_Feature._ID
        AND Behavioral_Method._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Method
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Method._ID AS _ID,
             Behavioral_Method.body_ID AS body_ID,
             Behavioral_BehavioralFeature.isQuery AS isQuery,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Method,
              Behavioral_BehavioralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Behavioral_Method._ID = Behavioral_BehavioralFeature._ID
           AND Behavioral_Method._ID = Core_Feature._ID
           AND Behavioral_Method._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Method
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Method
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Method @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 27
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Method
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Method
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Method @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Method
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (27, 84)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Method
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 27
   RETURN @@Error
GO


PRINT 'Class Behavioral.Operation'
GO

CREATE TABLE Behavioral_Operation
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isAbstract BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(28, 'Behavioral.Operation')
GO

CREATE PROCEDURE Get_Behavioral_Operation_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isAbstract FROM Behavioral_Operation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_Operation_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Behavioral_Operation SET isAbstract = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_isQuery
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_BehavioralFeature_isQuery @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Operation_isQuery
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_BehavioralFeature_isQuery @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Operation_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Operation_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Operation_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Operation
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Operation WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Operation
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_BehavioralFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Behavioral_Operation (_ID, isAbstract)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Behavioral_Operation
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Operation
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Behavioral_Operation
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_CalledOperation_callAction', 'Delete_Behavioral_CalledOperation', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_OperationMethod_method', 'Delete_Behavioral_OperationMethod', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Behavioral_Operation WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Behavioral_BehavioralFeature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Behavioral_Operation
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation
   @_ID INT
AS
   SELECT Behavioral_Operation._ID AS _ID,
          Behavioral_Operation.isAbstract AS isAbstract,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Operation,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_Operation._ID = @_ID
        AND Behavioral_Operation._ID = Behavioral_BehavioralFeature._ID
        AND Behavioral_Operation._ID = Core_Feature._ID
        AND Behavioral_Operation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Operation
AS
   SELECT Behavioral_Operation._ID AS _ID,
          Behavioral_Operation.isAbstract AS isAbstract,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Operation,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Behavioral_Operation._ID = Behavioral_BehavioralFeature._ID
        AND Behavioral_Operation._ID = Core_Feature._ID
        AND Behavioral_Operation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Operation._ID AS _ID,
             Behavioral_Operation.isAbstract AS isAbstract,
             Behavioral_BehavioralFeature.isQuery AS isQuery,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Operation,
              Behavioral_BehavioralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Behavioral_Operation._ID = Behavioral_BehavioralFeature._ID
           AND Behavioral_Operation._ID = Core_Feature._ID
           AND Behavioral_Operation._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Operation
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Operation
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Operation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 28
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Operation
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Operation
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Operation @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Operation
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 28
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Operation
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 28
   RETURN @@Error
GO


PRINT 'Class Behavioral.Parameter'
GO

CREATE TABLE Behavioral_Parameter
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,defaultValue_ID INT
   ,kind VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(29, 'Behavioral.Parameter')
GO

CREATE PROCEDURE Get_Behavioral_Parameter_defaultValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = defaultValue_ID FROM Behavioral_Parameter WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_Parameter_defaultValue
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Behavioral_Parameter SET defaultValue_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_kind
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Behavioral_Parameter.kind
      FROM Behavioral_Parameter
      WHERE Behavioral_Parameter._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Behavioral_Parameter_kind
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Behavioral_Parameter
      SET kind = 
          (SELECT _EnumLiteral FROM Behavioral_ParameterDirectionKind WHERE _EnumLiteral = @_Value)
      WHERE Behavioral_Parameter._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Parameter_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Behavioral_Parameter_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Behavioral_Parameter
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Behavioral_Parameter WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Behavioral_Parameter
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      IF @Error = 0
      BEGIN
         INSERT Behavioral_Parameter (_ID, kind)
            VALUES (@_ID, 'pdk_in')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Behavioral_Parameter
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Behavioral_Parameter
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @defaultValue_ID INT
   EXECUTE @Error = Get_Behavioral_Parameter_defaultValue @_ID, @defaultValue_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Behavioral_Parameter
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (95)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @defaultValue_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @defaultValue_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_BehavioralFeatureParameter_behavioralFeature', 'Delete_Behavioral_BehavioralFeatureParameter', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_EventParameter_event', 'Delete_Behavioral_EventParameter', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Behavioral_ParameterType_type', 'Delete_Behavioral_ParameterType', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Behavioral_Parameter WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Behavioral_Parameter
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter
   @_ID INT
AS
   SELECT Behavioral_Parameter._ID AS _ID,
          Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
          Behavioral_Parameter.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Parameter,
           Core_ModelElement
      WHERE Behavioral_Parameter._ID = @_ID
        AND Behavioral_Parameter._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Behavioral_Parameter
AS
   SELECT Behavioral_Parameter._ID AS _ID,
          Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
          Behavioral_Parameter.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Behavioral_Parameter,
           Core_ModelElement
      WHERE Behavioral_Parameter._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Parameter
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Behavioral_Parameter._ID AS _ID,
             Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
             Behavioral_Parameter.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Behavioral_Parameter,
              Core_ModelElement
         WHERE Behavioral_Parameter._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_Parameter
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Behavioral_Parameter
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Parameter @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 29
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Behavioral_Parameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_Parameter
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Behavioral_Parameter @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Behavioral_Parameter
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (29, 95)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Behavioral_Parameter
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 29
   RETURN @@Error
GO


--
-- Relationships Classes
--

PRINT 'Class Relationships.Association'
GO

CREATE TABLE Relationships_Association
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(30, 'Relationships.Association')
GO

CREATE PROCEDURE Get_Relationships_Association_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_Association_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_Association_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_Association_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relationships_Association
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relationships_Association WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relationships_Association
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relationships_Association (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relationships_Association
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relationships_Association
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relationships_Association
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relationships_Association WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relationships_Association
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association
   @_ID INT
AS
   SELECT Relationships_Association._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_Association,
           Core_Classifier,
           Core_ModelElement
      WHERE Relationships_Association._ID = @_ID
        AND Relationships_Association._ID = Core_Classifier._ID
        AND Relationships_Association._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relationships_Association
AS
   SELECT Relationships_Association._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_Association,
           Core_Classifier,
           Core_ModelElement
      WHERE Relationships_Association._ID = Core_Classifier._ID
        AND Relationships_Association._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relationships_Association._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relationships_Association,
              Core_Classifier,
              Core_ModelElement
         WHERE Relationships_Association._ID = Core_Classifier._ID
           AND Relationships_Association._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relationships_Association
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relationships_Association
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relationships_Association @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 30
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relationships_Association
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relationships_Association
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relationships_Association @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relationships_Association
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 30
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relationships_Association
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 30
   RETURN @@Error
GO


PRINT 'Class Relationships.AssociationEnd'
GO

CREATE TABLE Relationships_AssociationEnd
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,aggregation VARCHAR(128) NOT NULL
   ,isNavigable BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(31, 'Relationships.AssociationEnd')
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_aggregation
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relationships_AssociationEnd.aggregation
      FROM Relationships_AssociationEnd
      WHERE Relationships_AssociationEnd._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_aggregation
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relationships_AssociationEnd
      SET aggregation = 
          (SELECT _EnumLiteral FROM Relationships_AggregationKind WHERE _EnumLiteral = @_Value)
      WHERE Relationships_AssociationEnd._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_isNavigable
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isNavigable FROM Relationships_AssociationEnd WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_isNavigable
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relationships_AssociationEnd SET isNavigable = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_AssociationEnd_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relationships_AssociationEnd
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relationships_AssociationEnd WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relationships_AssociationEnd
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_StructuralFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relationships_AssociationEnd (_ID, aggregation, isNavigable)
         VALUES (@_ID, 'ak_none', 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relationships_AssociationEnd
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relationships_AssociationEnd
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relationships__B93405F34981
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relationships_AssociationEnd WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_StructuralFeature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relationships__B93405F34981
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd
   @_ID INT
AS
   SELECT Relationships_AssociationEnd._ID AS _ID,
          Relationships_AssociationEnd.aggregation AS aggregation,
          Relationships_AssociationEnd.isNavigable AS isNavigable,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_AssociationEnd,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relationships_AssociationEnd._ID = @_ID
        AND Relationships_AssociationEnd._ID = Core_StructuralFeature._ID
        AND Relationships_AssociationEnd._ID = Core_Feature._ID
        AND Relationships_AssociationEnd._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relationships_AssociationEnd
AS
   SELECT Relationships_AssociationEnd._ID AS _ID,
          Relationships_AssociationEnd.aggregation AS aggregation,
          Relationships_AssociationEnd.isNavigable AS isNavigable,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_AssociationEnd,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relationships_AssociationEnd._ID = Core_StructuralFeature._ID
        AND Relationships_AssociationEnd._ID = Core_Feature._ID
        AND Relationships_AssociationEnd._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_AssociationEnd
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relationships_AssociationEnd._ID AS _ID,
             Relationships_AssociationEnd.aggregation AS aggregation,
             Relationships_AssociationEnd.isNavigable AS isNavigable,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relationships_AssociationEnd,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Relationships_AssociationEnd._ID = Core_StructuralFeature._ID
           AND Relationships_AssociationEnd._ID = Core_Feature._ID
           AND Relationships_AssociationEnd._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relationships_AssociationEnd
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relationship_980FB3749199
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relationships_AssociationEnd @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 31
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relationship_980FB3749199
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relationships_AssociationEnd
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relationships_AssociationEnd @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relationships_AssociationEnd
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 31
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relationships_AssociationEnd
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 31
   RETURN @@Error
GO


PRINT 'Class Relationships.Generalization'
GO

CREATE TABLE Relationships_Generalization
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(32, 'Relationships.Generalization')
GO

CREATE PROCEDURE Get_Relationships_Generalization_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_Generalization_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relationships_Generalization_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relationships_Generalization
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relationships_Generalization WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relationships_Generalization
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relationships_Generalization (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relationships_Generalization
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relationships_Generalization
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relationships__50355B01A3CF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relationships_ChildElement_child', 'Delete_Relationships_ChildElement', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relationships_ParentElement_parent', 'Delete_Relationships_ParentElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relationships_Generalization WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relationships__50355B01A3CF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization
   @_ID INT
AS
   SELECT Relationships_Generalization._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_Generalization,
           Core_ModelElement
      WHERE Relationships_Generalization._ID = @_ID
        AND Relationships_Generalization._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relationships_Generalization
AS
   SELECT Relationships_Generalization._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relationships_Generalization,
           Core_ModelElement
      WHERE Relationships_Generalization._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Generalization
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relationships_Generalization._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relationships_Generalization,
              Core_ModelElement
         WHERE Relationships_Generalization._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relationships_Generalization
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relationship_35696E2E80CF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relationships_Generalization @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 32
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relationship_35696E2E80CF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relationships_Generalization
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relationships_Generalization @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relationships_Generalization
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 32
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relationships_Generalization
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 32
   RETURN @@Error
GO


--
-- Instance Classes
--

PRINT 'Class Instance.Instance'
GO

CREATE TABLE Instance_Instance
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(33, 'Instance.Instance')
GO

CREATE PROCEDURE Get_Instance_Instance_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Instance_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Instance_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Instance_Instance
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Instance_Instance WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Instance_Instance
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Instance_Instance (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Instance_Instance
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Instance_Instance
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Instance_Instance
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (35, 92, 100, 108, 36, 91, 101, 106, 118)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_SlotValue_valueSlot', 'Delete_Instance_SlotValue', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_InstanceClassifier_classifier', 'Delete_Instance_InstanceClassifier', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Instance_Instance WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Instance_Instance
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance
   @_ID INT
AS
   SELECT Instance_Instance._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Instance,
           Core_ModelElement
      WHERE Instance_Instance._ID = @_ID
        AND Instance_Instance._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Instance_Instance
AS
   SELECT Instance_Instance._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Instance,
           Core_ModelElement
      WHERE Instance_Instance._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Instance
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Instance_Instance._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Instance_Instance,
              Core_ModelElement
         WHERE Instance_Instance._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Instance_Instance
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (33, 35, 92, 100, 108, 36, 91, 101, 106, 118)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Instance_Instance
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 33
   RETURN @@Error
GO


PRINT 'Class Instance.Slot'
GO

CREATE TABLE Instance_Slot
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(34, 'Instance.Slot')
GO

CREATE PROCEDURE Get_Instance_Slot_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Slot_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Slot_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Instance_Slot
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Instance_Slot WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Instance_Slot (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Instance_Slot
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_SlotValue_value', 'Delete_Instance_SlotValue', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_ObjectSlot_object', 'Delete_Instance_ObjectSlot', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_FeatureSlot_feature', 'Delete_Instance_FeatureSlot', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Instance_Slot WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot
   @_ID INT
AS
   SELECT Instance_Slot._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Slot,
           Core_ModelElement
      WHERE Instance_Slot._ID = @_ID
        AND Instance_Slot._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Instance_Slot
AS
   SELECT Instance_Slot._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Slot,
           Core_ModelElement
      WHERE Instance_Slot._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Slot
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Instance_Slot._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Instance_Slot,
              Core_ModelElement
         WHERE Instance_Slot._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Instance_Slot
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Slot @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 34
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_Slot
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Instance_Slot @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Instance_Slot
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 34
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Instance_Slot
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 34
   RETURN @@Error
GO


PRINT 'Class Instance.DataValue'
GO

CREATE TABLE Instance_DataValue
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[value] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(35, 'Instance.DataValue')
GO

CREATE PROCEDURE Get_Instance_DataValue_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [value] FROM Instance_DataValue WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Instance_DataValue_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Instance_DataValue SET [value] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Instance_DataValue_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_DataValue_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_DataValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Instance_DataValue
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Instance_DataValue WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Instance_DataValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Instance @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Instance_DataValue (_ID, [value])
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Instance_DataValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Instance_DataValue
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Instance_DataValue
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (92, 100, 108)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Instance_DataValue WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Instance @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Instance_DataValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue
   @_ID INT
AS
   SELECT Instance_DataValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_DataValue,
           Core_ModelElement
      WHERE Instance_DataValue._ID = @_ID
        AND Instance_DataValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Instance_DataValue
AS
   SELECT Instance_DataValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_DataValue,
           Core_ModelElement
      WHERE Instance_DataValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_DataValue
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Instance_DataValue._ID AS _ID,
             Instance_DataValue.[value] AS [value],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Instance_DataValue,
              Core_ModelElement
         WHERE Instance_DataValue._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Instance_DataValue
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Instance_DataValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_DataValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 35
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Instance_DataValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_DataValue
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Instance_DataValue @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Instance_DataValue
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (35, 92, 100, 108)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Instance_DataValue
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 35
   RETURN @@Error
GO


PRINT 'Class Instance.Object'
GO

CREATE TABLE Instance_Object
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(36, 'Instance.Object')
GO

CREATE PROCEDURE Get_Instance_Object_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Object_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Object_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Instance_Object
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Instance_Object WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Instance_Object
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Instance @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Instance_Object (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Instance_Object
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Instance_Object
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Instance_Object
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (91, 101, 106, 118)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Instance_ObjectSlot_slot', 'Delete_Instance_ObjectSlot', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Instance_Object WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Instance @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Instance_Object
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object
   @_ID INT
AS
   SELECT Instance_Object._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Object,
           Core_ModelElement
      WHERE Instance_Object._ID = @_ID
        AND Instance_Object._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Instance_Object
AS
   SELECT Instance_Object._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Object,
           Core_ModelElement
      WHERE Instance_Object._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Object
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Instance_Object._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Instance_Object,
              Core_ModelElement
         WHERE Instance_Object._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Instance_Object
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Instance_Object
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Object @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 36
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Instance_Object
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_Object
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Instance_Object @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Instance_Object
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (36, 91, 101, 106, 118)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Instance_Object
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 36
   RETURN @@Error
GO


PRINT 'Class Instance.Extent'
GO

CREATE TABLE Instance_Extent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(37, 'Instance.Extent')
GO

CREATE PROCEDURE Get_Instance_Extent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Extent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Instance_Extent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Instance_Extent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Instance_Extent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Instance_Extent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Instance_Extent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Instance_Extent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Instance_Extent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Instance_Extent
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (94, 102, 107, 119)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Instance_Extent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Instance_Extent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent
   @_ID INT
AS
   SELECT Instance_Extent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Extent,
           Core_ModelElement
      WHERE Instance_Extent._ID = @_ID
        AND Instance_Extent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Instance_Extent
AS
   SELECT Instance_Extent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Instance_Extent,
           Core_ModelElement
      WHERE Instance_Extent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Instance_Extent._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Instance_Extent,
              Core_ModelElement
         WHERE Instance_Extent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Instance_Extent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Instance_Extent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Extent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 37
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Instance_Extent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_Extent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Instance_Extent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Instance_Extent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (37, 94, 102, 107, 119)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Instance_Extent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 37
   RETURN @@Error
GO


--
-- BusinessInformation Classes
--

PRINT 'Class BusinessInformation.ResponsibleParty'
GO

CREATE TABLE BusinessInformation_ResponsibleParty
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,responsibility VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(38, 'BusinessInformation.ResponsibleParty')
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_responsibility
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = responsibility FROM BusinessInformation_ResponsibleParty WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResponsibleParty_responsibility
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_ResponsibleParty SET responsibility = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResponsibleParty_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResponsibleParty_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_ResponsibleParty
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_ResponsibleParty WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInforma_7F5ECD8D4727
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ResponsibleParty (_ID, responsibility)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInforma_7F5ECD8D4727
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_ResponsibleParty
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_61B951B2F216
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ModelElementResponsibility_modelElement', 'Delete_BusinessInformation_ModelElementResponsibility', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ResponsiblePartyContact_contact', 'Delete_BusinessInformation_ResponsiblePartyContact', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_ResponsibleParty WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_61B951B2F216
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty
   @_ID INT
AS
   SELECT BusinessInformation_ResponsibleParty._ID AS _ID,
          BusinessInformation_ResponsibleParty.responsibility AS responsibility,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_ResponsibleParty,
           Core_ModelElement
      WHERE BusinessInformation_ResponsibleParty._ID = @_ID
        AND BusinessInformation_ResponsibleParty._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_ResponsibleParty
AS
   SELECT BusinessInformation_ResponsibleParty._ID AS _ID,
          BusinessInformation_ResponsibleParty.responsibility AS responsibility,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_ResponsibleParty,
           Core_ModelElement
      WHERE BusinessInformation_ResponsibleParty._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_ResponsibleParty._ID AS _ID,
             BusinessInformation_ResponsibleParty.responsibility AS responsibility,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_ResponsibleParty,
              Core_ModelElement
         WHERE BusinessInformation_ResponsibleParty._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ResponsibleParty
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_9684EFFA21A5
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_ResponsibleParty @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 38
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_9684EFFA21A5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ResponsibleParty
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_ResponsibleParty @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_ResponsibleParty
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 38
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_ResponsibleParty
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 38
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Telephone'
GO

CREATE TABLE BusinessInformation_Telephone
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,phoneNumber VARCHAR(256) NOT NULL
   ,phoneType VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(39, 'BusinessInformation.Telephone')
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_phoneNumber
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = phoneNumber FROM BusinessInformation_Telephone WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Telephone_phoneNumber
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Telephone SET phoneNumber = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_phoneType
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = phoneType FROM BusinessInformation_Telephone WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Telephone_phoneType
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Telephone SET phoneType = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Telephone_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Telephone_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Telephone
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Telephone WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInforma_7D9221A6FFAA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Telephone (_ID, phoneNumber, phoneType)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInforma_7D9221A6FFAA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Telephone
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_EDBE1F97AE57
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactTelephone_contact', 'Delete_BusinessInformation_ContactTelephone', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Telephone WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_EDBE1F97AE57
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone
   @_ID INT
AS
   SELECT BusinessInformation_Telephone._ID AS _ID,
          BusinessInformation_Telephone.phoneNumber AS phoneNumber,
          BusinessInformation_Telephone.phoneType AS phoneType,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Telephone,
           Core_ModelElement
      WHERE BusinessInformation_Telephone._ID = @_ID
        AND BusinessInformation_Telephone._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Telephone
AS
   SELECT BusinessInformation_Telephone._ID AS _ID,
          BusinessInformation_Telephone.phoneNumber AS phoneNumber,
          BusinessInformation_Telephone.phoneType AS phoneType,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Telephone,
           Core_ModelElement
      WHERE BusinessInformation_Telephone._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Telephone
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Telephone._ID AS _ID,
             BusinessInformation_Telephone.phoneNumber AS phoneNumber,
             BusinessInformation_Telephone.phoneType AS phoneType,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Telephone,
              Core_ModelElement
         WHERE BusinessInformation_Telephone._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Telephone
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_E9FD5A935CC5
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Telephone @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 39
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_E9FD5A935CC5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Telephone
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Telephone @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Telephone
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 39
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Telephone
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 39
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Email'
GO

CREATE TABLE BusinessInformation_Email
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,emailAddress VARCHAR(256) NOT NULL
   ,emailType VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(40, 'BusinessInformation.Email')
GO

CREATE PROCEDURE Get_BusinessInformation_Email_emailAddress
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = emailAddress FROM BusinessInformation_Email WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Email_emailAddress
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Email SET emailAddress = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_emailType
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = emailType FROM BusinessInformation_Email WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Email_emailType
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Email SET emailType = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Email_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Email_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Email
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Email WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInformation_Email
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Email (_ID, emailAddress, emailType)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInformation_Email
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Email
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInformation_Email
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactEmail_contact', 'Delete_BusinessInformation_ContactEmail', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Email WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInformation_Email
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email
   @_ID INT
AS
   SELECT BusinessInformation_Email._ID AS _ID,
          BusinessInformation_Email.emailAddress AS emailAddress,
          BusinessInformation_Email.emailType AS emailType,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Email,
           Core_ModelElement
      WHERE BusinessInformation_Email._ID = @_ID
        AND BusinessInformation_Email._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Email
AS
   SELECT BusinessInformation_Email._ID AS _ID,
          BusinessInformation_Email.emailAddress AS emailAddress,
          BusinessInformation_Email.emailType AS emailType,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Email,
           Core_ModelElement
      WHERE BusinessInformation_Email._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Email
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Email._ID AS _ID,
             BusinessInformation_Email.emailAddress AS emailAddress,
             BusinessInformation_Email.emailType AS emailType,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Email,
              Core_ModelElement
         WHERE BusinessInformation_Email._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Email
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInformation_Email
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Email @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 40
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInformation_Email
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Email
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Email @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Email
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 40
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Email
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 40
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Location'
GO

CREATE TABLE BusinessInformation_Location
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,locationType VARCHAR(256) NOT NULL
   ,address VARCHAR(256) NOT NULL
   ,city VARCHAR(256) NOT NULL
   ,postCode VARCHAR(256) NOT NULL
   ,area VARCHAR(256) NOT NULL
   ,country VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(41, 'BusinessInformation.Location')
GO

CREATE PROCEDURE Get_BusinessInformation_Location_locationType
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = locationType FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_locationType
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET locationType = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_address
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = address FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_address
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET address = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_city
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = city FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_city
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET city = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_postCode
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = postCode FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_postCode
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET postCode = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_area
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = area FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_area
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET area = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_country
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = country FROM BusinessInformation_Location WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_country
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Location SET country = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Location_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Location
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Location WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInformation_Location
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Location (_ID, locationType, address, city, postCode, area, country)
         VALUES (@_ID, '', '', '', '', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInformation_Location
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Location
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_5E5503EE5195
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (60)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactLocation_contact', 'Delete_BusinessInformation_ContactLocation', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Location WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_5E5503EE5195
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location
   @_ID INT
AS
   SELECT BusinessInformation_Location._ID AS _ID,
          BusinessInformation_Location.locationType AS locationType,
          BusinessInformation_Location.address AS address,
          BusinessInformation_Location.city AS city,
          BusinessInformation_Location.postCode AS postCode,
          BusinessInformation_Location.area AS area,
          BusinessInformation_Location.country AS country,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Location,
           Core_ModelElement
      WHERE BusinessInformation_Location._ID = @_ID
        AND BusinessInformation_Location._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Location
AS
   SELECT BusinessInformation_Location._ID AS _ID,
          BusinessInformation_Location.locationType AS locationType,
          BusinessInformation_Location.address AS address,
          BusinessInformation_Location.city AS city,
          BusinessInformation_Location.postCode AS postCode,
          BusinessInformation_Location.area AS area,
          BusinessInformation_Location.country AS country,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Location,
           Core_ModelElement
      WHERE BusinessInformation_Location._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Location
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Location._ID AS _ID,
             BusinessInformation_Location.locationType AS locationType,
             BusinessInformation_Location.address AS address,
             BusinessInformation_Location.city AS city,
             BusinessInformation_Location.postCode AS postCode,
             BusinessInformation_Location.area AS area,
             BusinessInformation_Location.country AS country,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Location,
              Core_ModelElement
         WHERE BusinessInformation_Location._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Location
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_8DDFD0DE8B2D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Location @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 41
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_8DDFD0DE8B2D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Location
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Location @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Location
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (41, 60)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Location
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 41
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Contact'
GO

CREATE TABLE BusinessInformation_Contact
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(42, 'BusinessInformation.Contact')
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Contact_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Contact_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Contact
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Contact WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInformation_Contact
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Contact (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInformation_Contact
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Contact
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInformation_Contact
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactEmail_email', 'Delete_BusinessInformation_ContactEmail', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactLocation_location', 'Delete_BusinessInformation_ContactLocation', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactResourceLocator_url', 'Delete_BusinessInformation_ContactResourceLocator', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactTelephone_telephone', 'Delete_BusinessInformation_ContactTelephone', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ResponsiblePartyContact_responsibleParty', 'Delete_BusinessInformation_ResponsiblePartyContact', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Contact WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInformation_Contact
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact
   @_ID INT
AS
   SELECT BusinessInformation_Contact._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Contact,
           Core_ModelElement
      WHERE BusinessInformation_Contact._ID = @_ID
        AND BusinessInformation_Contact._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Contact
AS
   SELECT BusinessInformation_Contact._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Contact,
           Core_ModelElement
      WHERE BusinessInformation_Contact._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Contact._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Contact,
              Core_ModelElement
         WHERE BusinessInformation_Contact._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Contact
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_AC3E9F895ACA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Contact @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 42
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_AC3E9F895ACA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Contact
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Contact @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Contact
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 42
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Contact
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 42
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Description'
GO

CREATE TABLE BusinessInformation_Description
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,body VARCHAR(256) NOT NULL
   ,[language] VARCHAR(256) NOT NULL
   ,type VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(43, 'BusinessInformation.Description')
GO

CREATE PROCEDURE Get_BusinessInformation_Description_body
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = body FROM BusinessInformation_Description WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Description_body
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Description SET body = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [language] FROM BusinessInformation_Description WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Description_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Description SET [language] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM BusinessInformation_Description WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Description_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Description SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Description_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Description_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Description
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Description WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInforma_D3F568E29FDA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Description (_ID, body, [language], type)
         VALUES (@_ID, '', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInforma_D3F568E29FDA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Description
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_700F5226A7AC
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ModelElementDescription_modelElement', 'Delete_BusinessInformation_ModelElementDescription', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Description WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_700F5226A7AC
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description
   @_ID INT
AS
   SELECT BusinessInformation_Description._ID AS _ID,
          BusinessInformation_Description.body AS body,
          BusinessInformation_Description.[language] AS [language],
          BusinessInformation_Description.type AS type,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Description,
           Core_ModelElement
      WHERE BusinessInformation_Description._ID = @_ID
        AND BusinessInformation_Description._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Description
AS
   SELECT BusinessInformation_Description._ID AS _ID,
          BusinessInformation_Description.body AS body,
          BusinessInformation_Description.[language] AS [language],
          BusinessInformation_Description.type AS type,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Description,
           Core_ModelElement
      WHERE BusinessInformation_Description._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Description._ID AS _ID,
             BusinessInformation_Description.body AS body,
             BusinessInformation_Description.[language] AS [language],
             BusinessInformation_Description.type AS type,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Description,
              Core_ModelElement
         WHERE BusinessInformation_Description._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Description
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_09A73FD01149
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Description @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 43
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_09A73FD01149
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Description
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Description @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Description
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 43
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Description
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 43
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.Document'
GO

CREATE TABLE BusinessInformation_Document
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,reference VARCHAR(256) NOT NULL
   ,type VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(44, 'BusinessInformation.Document')
GO

CREATE PROCEDURE Get_BusinessInformation_Document_reference
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = reference FROM BusinessInformation_Document WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Document_reference
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Document SET reference = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM BusinessInformation_Document WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_Document_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_Document SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Document_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_Document_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_Document
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_Document WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInformation_Document
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_Document (_ID, reference, type)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInformation_Document
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_Document
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_2449525CCB34
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_DocumentDescribes_modelElement', 'Delete_BusinessInformation_DocumentDescribes', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_Document WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_2449525CCB34
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document
   @_ID INT
AS
   SELECT BusinessInformation_Document._ID AS _ID,
          BusinessInformation_Document.reference AS reference,
          BusinessInformation_Document.type AS type,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Document,
           Core_ModelElement
      WHERE BusinessInformation_Document._ID = @_ID
        AND BusinessInformation_Document._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_Document
AS
   SELECT BusinessInformation_Document._ID AS _ID,
          BusinessInformation_Document.reference AS reference,
          BusinessInformation_Document.type AS type,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_Document,
           Core_ModelElement
      WHERE BusinessInformation_Document._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_Document._ID AS _ID,
             BusinessInformation_Document.reference AS reference,
             BusinessInformation_Document.type AS type,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_Document,
              Core_ModelElement
         WHERE BusinessInformation_Document._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_Document
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_F880E91242DF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Document @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 44
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_F880E91242DF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_Document
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_Document @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_Document
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 44
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_Document
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 44
   RETURN @@Error
GO


PRINT 'Class BusinessInformation.ResourceLocator'
GO

CREATE TABLE BusinessInformation_ResourceLocator
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,url VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(45, 'BusinessInformation.ResourceLocator')
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_url
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = url FROM BusinessInformation_ResourceLocator WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResourceLocator_url
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessInformation_ResourceLocator SET url = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResourceLocator_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessInformation_ResourceLocator_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessInformation_ResourceLocator
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessInformation_ResourceLocator WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessInforma_C780C64D6B67
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ResourceLocator (_ID, url)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessInforma_C780C64D6B67
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessInformation_ResourceLocator
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessInform_FD0ABF894D11
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessInformation_ContactResourceLocator_contact', 'Delete_BusinessInformation_ContactResourceLocator', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessInformation_ResourceLocator WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessInform_FD0ABF894D11
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator
   @_ID INT
AS
   SELECT BusinessInformation_ResourceLocator._ID AS _ID,
          BusinessInformation_ResourceLocator.url AS url,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_ResourceLocator,
           Core_ModelElement
      WHERE BusinessInformation_ResourceLocator._ID = @_ID
        AND BusinessInformation_ResourceLocator._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessInformation_ResourceLocator
AS
   SELECT BusinessInformation_ResourceLocator._ID AS _ID,
          BusinessInformation_ResourceLocator.url AS url,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessInformation_ResourceLocator,
           Core_ModelElement
      WHERE BusinessInformation_ResourceLocator._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResourceLocator
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessInformation_ResourceLocator._ID AS _ID,
             BusinessInformation_ResourceLocator.url AS url,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessInformation_ResourceLocator,
              Core_ModelElement
         WHERE BusinessInformation_ResourceLocator._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ResourceLocator
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessInfo_9A0BEB526283
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_ResourceLocator @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 45
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessInfo_9A0BEB526283
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ResourceLocator
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessInformation_ResourceLocator @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessInformation_ResourceLocator
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 45
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessInformation_ResourceLocator
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 45
   RETURN @@Error
GO


--
-- DataTypes Classes
--

PRINT 'Class DataTypes.Enumeration'
GO

CREATE TABLE DataTypes_Enumeration
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isOrdered BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(46, 'DataTypes.Enumeration')
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_isOrdered
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isOrdered FROM DataTypes_Enumeration WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataTypes_Enumeration_isOrdered
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataTypes_Enumeration SET isOrdered = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Enumeration_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Enumeration_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Enumeration_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_Enumeration
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_Enumeration WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_Enumeration
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_DataType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataTypes_Enumeration (_ID, isOrdered)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataTypes_Enumeration
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_Enumeration
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataTypes_Enumeration
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_EnumerationLiterals_literal', 'Delete_DataTypes_EnumerationLiterals', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataTypes_Enumeration WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_DataType @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataTypes_Enumeration
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration
   @_ID INT
AS
   SELECT DataTypes_Enumeration._ID AS _ID,
          DataTypes_Enumeration.isOrdered AS isOrdered,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_Enumeration,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_Enumeration._ID = @_ID
        AND DataTypes_Enumeration._ID = Core_Classifier._ID
        AND DataTypes_Enumeration._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_Enumeration
AS
   SELECT DataTypes_Enumeration._ID AS _ID,
          DataTypes_Enumeration.isOrdered AS isOrdered,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_Enumeration,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_Enumeration._ID = Core_Classifier._ID
        AND DataTypes_Enumeration._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_Enumeration._ID AS _ID,
             DataTypes_Enumeration.isOrdered AS isOrdered,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataTypes_Enumeration,
              Core_Classifier,
              Core_ModelElement
         WHERE DataTypes_Enumeration._ID = Core_Classifier._ID
           AND DataTypes_Enumeration._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_Enumeration
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_Enumeration
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_Enumeration @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 46
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_Enumeration
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_Enumeration
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_Enumeration @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_Enumeration
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 46
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_Enumeration
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 46
   RETURN @@Error
GO


PRINT 'Class DataTypes.EnumerationLiteral'
GO

CREATE TABLE DataTypes_EnumerationLiteral
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,value_ID INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(47, 'DataTypes.EnumerationLiteral')
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_value
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = value_ID FROM DataTypes_EnumerationLiteral WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataTypes_EnumerationLiteral_value
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE DataTypes_EnumerationLiteral SET value_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_EnumerationLiteral_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_EnumerationLiteral_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_EnumerationLiteral
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_EnumerationLiteral WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_EnumerationLiteral
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      IF @Error = 0
      BEGIN
         INSERT DataTypes_EnumerationLiteral (_ID)
            VALUES (@_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_DataTypes_EnumerationLiteral
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_EnumerationLiteral
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @value_ID INT
   EXECUTE @Error = Get_DataTypes_EnumerationLiteral_value @_ID, @value_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_DataTypes_Enum_8BF6561DE04E
      SELECT @Error = @@Error
      IF @Error = 0 AND @value_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @value_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_EnumerationLiterals_enumeration', 'Delete_DataTypes_EnumerationLiterals', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM DataTypes_EnumerationLiteral WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_DataTypes_Enum_8BF6561DE04E
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral
   @_ID INT
AS
   SELECT DataTypes_EnumerationLiteral._ID AS _ID,
          DataTypes_EnumerationLiteral.value_ID AS value_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_EnumerationLiteral,
           Core_ModelElement
      WHERE DataTypes_EnumerationLiteral._ID = @_ID
        AND DataTypes_EnumerationLiteral._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_EnumerationLiteral
AS
   SELECT DataTypes_EnumerationLiteral._ID AS _ID,
          DataTypes_EnumerationLiteral.value_ID AS value_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_EnumerationLiteral,
           Core_ModelElement
      WHERE DataTypes_EnumerationLiteral._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_EnumerationLiteral
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_EnumerationLiteral._ID AS _ID,
             DataTypes_EnumerationLiteral.value_ID AS value_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataTypes_EnumerationLiteral,
              Core_ModelElement
         WHERE DataTypes_EnumerationLiteral._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_EnumerationLiteral
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_En_BA08467F21A4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_EnumerationLiteral @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 47
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_En_BA08467F21A4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_EnumerationLiteral
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_EnumerationLiteral @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_EnumerationLiteral
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 47
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_EnumerationLiteral
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 47
   RETURN @@Error
GO


PRINT 'Class DataTypes.QueryExpression'
GO

CREATE TABLE DataTypes_QueryExpression
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(48, 'DataTypes.QueryExpression')
GO

CREATE PROCEDURE Get_DataTypes_QueryExpression_body
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_body @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_QueryExpression_body
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_body @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_QueryExpression_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Expression_language @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_QueryExpression_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Expression_language @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_QueryExpression
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_QueryExpression WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_QueryExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ProcedureExpression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataTypes_QueryExpression (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataTypes_QueryExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_QueryExpression
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataTypes_QueryExpression
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM DataTypes_QueryExpression WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ProcedureExpression @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataTypes_QueryExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_QueryExpression
   @_ID INT
AS
   SELECT DataTypes_QueryExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM DataTypes_QueryExpression,
           Core_Expression
      WHERE DataTypes_QueryExpression._ID = @_ID
        AND DataTypes_QueryExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_QueryExpression
AS
   SELECT DataTypes_QueryExpression._ID AS _ID,
          Core_Expression.body AS body,
          Core_Expression.[language] AS [language]
      FROM DataTypes_QueryExpression,
           Core_Expression
      WHERE DataTypes_QueryExpression._ID = Core_Expression._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_QueryExpression
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_QueryExpression._ID AS _ID,
             Core_Expression.body AS body,
             Core_Expression.[language] AS [language]
         FROM DataTypes_QueryExpression,
              Core_Expression
         WHERE DataTypes_QueryExpression._ID = Core_Expression._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_QueryExpression
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_QueryExpression
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_QueryExpression @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 48
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_QueryExpression
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_QueryExpression
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_QueryExpression @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_QueryExpression
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 48
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_QueryExpression
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 48
   RETURN @@Error
GO


PRINT 'Class DataTypes.TypeAlias'
GO

CREATE TABLE DataTypes_TypeAlias
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(49, 'DataTypes.TypeAlias')
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_TypeAlias_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_TypeAlias_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_TypeAlias_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_TypeAlias
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_TypeAlias WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_TypeAlias
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_DataType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataTypes_TypeAlias (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataTypes_TypeAlias
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_TypeAlias
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataTypes_TypeAlias
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (80)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_ClassifierAlias_type', 'Delete_DataTypes_ClassifierAlias', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataTypes_TypeAlias WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_DataType @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataTypes_TypeAlias
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias
   @_ID INT
AS
   SELECT DataTypes_TypeAlias._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_TypeAlias,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_TypeAlias._ID = @_ID
        AND DataTypes_TypeAlias._ID = Core_Classifier._ID
        AND DataTypes_TypeAlias._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_TypeAlias
AS
   SELECT DataTypes_TypeAlias._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_TypeAlias,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_TypeAlias._ID = Core_Classifier._ID
        AND DataTypes_TypeAlias._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_TypeAlias._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataTypes_TypeAlias,
              Core_Classifier,
              Core_ModelElement
         WHERE DataTypes_TypeAlias._ID = Core_Classifier._ID
           AND DataTypes_TypeAlias._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_TypeAlias
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_TypeAlias
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_TypeAlias @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 49
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_TypeAlias
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_TypeAlias
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_TypeAlias @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_TypeAlias
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (49, 80)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_TypeAlias
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 49
   RETURN @@Error
GO


PRINT 'Class DataTypes.Union'
GO

CREATE TABLE DataTypes_Union
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(50, 'DataTypes.Union')
GO

CREATE PROCEDURE Get_DataTypes_Union_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Union_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Union_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_Union_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_Union
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_Union WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_Union
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataTypes_Union (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataTypes_Union
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_Union
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataTypes_Union
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataTypes_UnionDiscriminator_discriminator', 'Delete_DataTypes_UnionDiscriminator', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataTypes_Union WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataTypes_Union
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union
   @_ID INT
AS
   SELECT DataTypes_Union._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_Union,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_Union._ID = @_ID
        AND DataTypes_Union._ID = Core_Classifier._ID
        AND DataTypes_Union._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_Union
AS
   SELECT DataTypes_Union._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_Union,
           Core_Classifier,
           Core_ModelElement
      WHERE DataTypes_Union._ID = Core_Classifier._ID
        AND DataTypes_Union._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_Union._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataTypes_Union,
              Core_Classifier,
              Core_ModelElement
         WHERE DataTypes_Union._ID = Core_Classifier._ID
           AND DataTypes_Union._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_Union
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_Union
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_Union @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 50
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_Union
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_Union
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_Union @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_Union
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 50
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_Union
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 50
   RETURN @@Error
GO


PRINT 'Class DataTypes.UnionMember'
GO

CREATE TABLE DataTypes_UnionMember
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,memberCase_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Expression(_ID)
   ,isDefault BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(51, 'DataTypes.UnionMember')
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_memberCase
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = memberCase_ID FROM DataTypes_UnionMember WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_memberCase
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE DataTypes_UnionMember SET memberCase_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_isDefault
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isDefault FROM DataTypes_UnionMember WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_isDefault
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataTypes_UnionMember SET isDefault = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataTypes_UnionMember_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataTypes_UnionMember
   @_ID INT OUTPUT
AS
   DECLARE @memberCase_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataTypes_UnionMember WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataTypes_UnionMember
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_Expression @memberCase_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT DataTypes_UnionMember (_ID, memberCase_ID, isDefault)
            VALUES (@_ID, @memberCase_ID, 0)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_DataTypes_UnionMember
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataTypes_UnionMember
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberCase_ID INT
   EXECUTE @Error = Get_DataTypes_UnionMember_memberCase @_ID, @memberCase_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_DataTypes_UnionMember
      SELECT @Error = @@Error
      IF @Error = 0 AND @memberCase_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @memberCase_ID
      IF @Error = 0
      BEGIN
         DELETE FROM DataTypes_UnionMember WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_DataTypes_UnionMember
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember
   @_ID INT
AS
   SELECT DataTypes_UnionMember._ID AS _ID,
          DataTypes_UnionMember.memberCase_ID AS memberCase_ID,
          DataTypes_UnionMember.isDefault AS isDefault,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_UnionMember,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataTypes_UnionMember._ID = @_ID
        AND DataTypes_UnionMember._ID = Core_Attribute._ID
        AND DataTypes_UnionMember._ID = Core_StructuralFeature._ID
        AND DataTypes_UnionMember._ID = Core_Feature._ID
        AND DataTypes_UnionMember._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataTypes_UnionMember
AS
   SELECT DataTypes_UnionMember._ID AS _ID,
          DataTypes_UnionMember.memberCase_ID AS memberCase_ID,
          DataTypes_UnionMember.isDefault AS isDefault,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataTypes_UnionMember,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataTypes_UnionMember._ID = Core_Attribute._ID
        AND DataTypes_UnionMember._ID = Core_StructuralFeature._ID
        AND DataTypes_UnionMember._ID = Core_Feature._ID
        AND DataTypes_UnionMember._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_UnionMember
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataTypes_UnionMember._ID AS _ID,
             DataTypes_UnionMember.memberCase_ID AS memberCase_ID,
             DataTypes_UnionMember.isDefault AS isDefault,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataTypes_UnionMember,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataTypes_UnionMember._ID = Core_Attribute._ID
           AND DataTypes_UnionMember._ID = Core_StructuralFeature._ID
           AND DataTypes_UnionMember._ID = Core_Feature._ID
           AND DataTypes_UnionMember._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_UnionMember
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataTypes_UnionMember
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataTypes_UnionMember @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 51
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataTypes_UnionMember
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_UnionMember
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataTypes_UnionMember @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataTypes_UnionMember
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 51
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataTypes_UnionMember
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 51
   RETURN @@Error
GO


--
-- Expressions Classes
--

PRINT 'Class Expressions.ExpressionNode'
GO

CREATE TABLE Expressions_ExpressionNode
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,expression_ID INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(52, 'Expressions.ExpressionNode')
GO

CREATE PROCEDURE Get_Expressions_ExpressionNode_expression
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = expression_ID FROM Expressions_ExpressionNode WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Expressions_ExpressionNode_expression
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Expressions_ExpressionNode SET expression_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Add_Expressions_ExpressionNode
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Expressions_ExpressionNode WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Expressions_ExpressionNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      IF @Error = 0
      BEGIN
         INSERT Expressions_ExpressionNode (_ID)
            VALUES (@_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Expressions_ExpressionNode
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Expressions_ExpressionNode
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @expression_ID INT
   EXECUTE @Error = Get_Expressions_ExpressionNode_expression @_ID, @expression_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Expressions_ExpressionNode
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (53, 54, 55)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @expression_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @expression_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_ExpressionNodeClassifier_type', 'Delete_Expressions_ExpressionNodeClassifier', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_OperationArgument_featureNode', 'Delete_Expressions_OperationArgument', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Expressions_ExpressionNode WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Element @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Expressions_ExpressionNode
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ExpressionNode
   @_ID INT
AS
   SELECT Expressions_ExpressionNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ExpressionNode
      WHERE Expressions_ExpressionNode._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Expressions_ExpressionNode
AS
   SELECT Expressions_ExpressionNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ExpressionNode
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_ExpressionNode
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Expressions_ExpressionNode._ID AS _ID,
             Expressions_ExpressionNode.expression_ID AS expression_ID
         FROM Expressions_ExpressionNode
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_ExpressionNode
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Expressions__537C0F058033
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ExpressionNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 52
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Expressions__537C0F058033
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_ExpressionNode
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Expressions_ExpressionNode @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Expressions_ExpressionNode
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (52, 53, 54, 55)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Expressions_ExpressionNode
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 52
   RETURN @@Error
GO


PRINT 'Class Expressions.ConstantNode'
GO

CREATE TABLE Expressions_ConstantNode
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[value] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(53, 'Expressions.ConstantNode')
GO

CREATE PROCEDURE Get_Expressions_ConstantNode_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [value] FROM Expressions_ConstantNode WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Expressions_ConstantNode_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Expressions_ConstantNode SET [value] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Expressions_ConstantNode_expression
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_ExpressionNode_expression @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Expressions_ConstantNode_expression
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Expressions_ExpressionNode_expression @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Add_Expressions_ConstantNode
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Expressions_ConstantNode WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Expressions_ConstantNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ExpressionNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Expressions_ConstantNode (_ID, [value])
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Expressions_ConstantNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Expressions_ConstantNode
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Expressions_ConstantNode
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Expressions_ConstantNode WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Expressions_ExpressionNode @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Expressions_ConstantNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ConstantNode
   @_ID INT
AS
   SELECT Expressions_ConstantNode._ID AS _ID,
          Expressions_ConstantNode.[value] AS [value],
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ConstantNode,
           Expressions_ExpressionNode
      WHERE Expressions_ConstantNode._ID = @_ID
        AND Expressions_ConstantNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Expressions_ConstantNode
AS
   SELECT Expressions_ConstantNode._ID AS _ID,
          Expressions_ConstantNode.[value] AS [value],
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ConstantNode,
           Expressions_ExpressionNode
      WHERE Expressions_ConstantNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_ConstantNode
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Expressions_ConstantNode._ID AS _ID,
             Expressions_ConstantNode.[value] AS [value],
             Expressions_ExpressionNode.expression_ID AS expression_ID
         FROM Expressions_ConstantNode,
              Expressions_ExpressionNode
         WHERE Expressions_ConstantNode._ID = Expressions_ExpressionNode._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_ConstantNode
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Expressions_ConstantNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ConstantNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 53
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Expressions_ConstantNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_ConstantNode
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Expressions_ConstantNode @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Expressions_ConstantNode
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 53
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Expressions_ConstantNode
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 53
   RETURN @@Error
GO


PRINT 'Class Expressions.ElementNode'
GO

CREATE TABLE Expressions_ElementNode
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(54, 'Expressions.ElementNode')
GO

CREATE PROCEDURE Get_Expressions_ElementNode_expression
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_ExpressionNode_expression @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Expressions_ElementNode_expression
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Expressions_ExpressionNode_expression @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Add_Expressions_ElementNode
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Expressions_ElementNode WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Expressions_ElementNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ExpressionNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Expressions_ElementNode (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Expressions_ElementNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Expressions_ElementNode
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Expressions_ElementNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_ReferencedElement_modelElement', 'Delete_Expressions_ReferencedElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Expressions_ElementNode WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Expressions_ExpressionNode @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Expressions_ElementNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ElementNode
   @_ID INT
AS
   SELECT Expressions_ElementNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ElementNode,
           Expressions_ExpressionNode
      WHERE Expressions_ElementNode._ID = @_ID
        AND Expressions_ElementNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Expressions_ElementNode
AS
   SELECT Expressions_ElementNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_ElementNode,
           Expressions_ExpressionNode
      WHERE Expressions_ElementNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_ElementNode
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Expressions_ElementNode._ID AS _ID,
             Expressions_ExpressionNode.expression_ID AS expression_ID
         FROM Expressions_ElementNode,
              Expressions_ExpressionNode
         WHERE Expressions_ElementNode._ID = Expressions_ExpressionNode._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_ElementNode
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Expressions_ElementNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ElementNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 54
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Expressions_ElementNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_ElementNode
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Expressions_ElementNode @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Expressions_ElementNode
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 54
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Expressions_ElementNode
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 54
   RETURN @@Error
GO


PRINT 'Class Expressions.FeatureNode'
GO

CREATE TABLE Expressions_FeatureNode
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(55, 'Expressions.FeatureNode')
GO

CREATE PROCEDURE Get_Expressions_FeatureNode_expression
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_ExpressionNode_expression @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Expressions_FeatureNode_expression
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Expressions_ExpressionNode_expression @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Add_Expressions_FeatureNode
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Expressions_FeatureNode WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Expressions_FeatureNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_ExpressionNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Expressions_FeatureNode (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Expressions_FeatureNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Expressions_FeatureNode
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Expressions_FeatureNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_NodeFeature_feature', 'Delete_Expressions_NodeFeature', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Expressions_OperationArgument_argument', 'Delete_Expressions_OperationArgument', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Expressions_FeatureNode WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Expressions_ExpressionNode @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Expressions_FeatureNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_FeatureNode
   @_ID INT
AS
   SELECT Expressions_FeatureNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_FeatureNode,
           Expressions_ExpressionNode
      WHERE Expressions_FeatureNode._ID = @_ID
        AND Expressions_FeatureNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Expressions_FeatureNode
AS
   SELECT Expressions_FeatureNode._ID AS _ID,
          Expressions_ExpressionNode.expression_ID AS expression_ID
      FROM Expressions_FeatureNode,
           Expressions_ExpressionNode
      WHERE Expressions_FeatureNode._ID = Expressions_ExpressionNode._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_FeatureNode
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Expressions_FeatureNode._ID AS _ID,
             Expressions_ExpressionNode.expression_ID AS expression_ID
         FROM Expressions_FeatureNode,
              Expressions_ExpressionNode
         WHERE Expressions_FeatureNode._ID = Expressions_ExpressionNode._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_FeatureNode
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Expressions_FeatureNode
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Expressions_FeatureNode @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 55
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Expressions_FeatureNode
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_FeatureNode
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Expressions_FeatureNode @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Expressions_FeatureNode
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 55
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Expressions_FeatureNode
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 55
   RETURN @@Error
GO


--
-- KeysIndexes Classes
--

PRINT 'Class KeysIndexes.UniqueKey'
GO

CREATE TABLE KeysIndexes_UniqueKey
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(56, 'KeysIndexes.UniqueKey')
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_UniqueKey_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_UniqueKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_KeysIndexes_UniqueKey
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM KeysIndexes_UniqueKey WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_KeysIndexes_UniqueKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_UniqueKey (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_KeysIndexes_UniqueKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_KeysIndexes_UniqueKey
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_KeysIndexes_UniqueKey
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (87, 90)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_UniqueFeature_feature', 'Delete_KeysIndexes_UniqueFeature', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_UniqueKeyRelationship_keyRelationship', 'Delete_KeysIndexes_UniqueKeyRelationship', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM KeysIndexes_UniqueKey WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_KeysIndexes_UniqueKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey
   @_ID INT
AS
   SELECT KeysIndexes_UniqueKey._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_UniqueKey,
           Core_ModelElement
      WHERE KeysIndexes_UniqueKey._ID = @_ID
        AND KeysIndexes_UniqueKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_KeysIndexes_UniqueKey
AS
   SELECT KeysIndexes_UniqueKey._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_UniqueKey,
           Core_ModelElement
      WHERE KeysIndexes_UniqueKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT KeysIndexes_UniqueKey._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM KeysIndexes_UniqueKey,
              Core_ModelElement
         WHERE KeysIndexes_UniqueKey._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_UniqueKey
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_KeysIndexes_UniqueKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_UniqueKey @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 56
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_KeysIndexes_UniqueKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_UniqueKey
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_KeysIndexes_UniqueKey @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_KeysIndexes_UniqueKey
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (56, 87, 90)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_KeysIndexes_UniqueKey
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 56
   RETURN @@Error
GO


PRINT 'Class KeysIndexes.Index'
GO

CREATE TABLE KeysIndexes_Index
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isPartitioning BIT NOT NULL
   ,isSorted BIT NOT NULL
   ,isUnique BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(57, 'KeysIndexes.Index')
GO

CREATE PROCEDURE Get_KeysIndexes_Index_isPartitioning
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isPartitioning FROM KeysIndexes_Index WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_KeysIndexes_Index_isPartitioning
    @_ID INT
   ,@_Value BIT
AS
   UPDATE KeysIndexes_Index SET isPartitioning = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_isSorted
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isSorted FROM KeysIndexes_Index WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_KeysIndexes_Index_isSorted
    @_ID INT
   ,@_Value BIT
AS
   UPDATE KeysIndexes_Index SET isSorted = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_isUnique
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isUnique FROM KeysIndexes_Index WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_KeysIndexes_Index_isUnique
    @_ID INT
   ,@_Value BIT
AS
   UPDATE KeysIndexes_Index SET isUnique = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_Index_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_Index_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_KeysIndexes_Index
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM KeysIndexes_Index WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_KeysIndexes_Index
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_Index (_ID, isPartitioning, isSorted, isUnique)
         VALUES (@_ID, 0, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_KeysIndexes_Index
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_KeysIndexes_Index
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_KeysIndexes_Index
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (86)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexedFeatureInfo_indexedFeature', 'Delete_KeysIndexes_IndexedFeatureInfo', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexSpansClass_spannedClass', 'Delete_KeysIndexes_IndexSpansClass', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM KeysIndexes_Index WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_KeysIndexes_Index
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index
   @_ID INT
AS
   SELECT KeysIndexes_Index._ID AS _ID,
          KeysIndexes_Index.isPartitioning AS isPartitioning,
          KeysIndexes_Index.isSorted AS isSorted,
          KeysIndexes_Index.isUnique AS isUnique,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_Index,
           Core_ModelElement
      WHERE KeysIndexes_Index._ID = @_ID
        AND KeysIndexes_Index._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_KeysIndexes_Index
AS
   SELECT KeysIndexes_Index._ID AS _ID,
          KeysIndexes_Index.isPartitioning AS isPartitioning,
          KeysIndexes_Index.isSorted AS isSorted,
          KeysIndexes_Index.isUnique AS isUnique,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_Index,
           Core_ModelElement
      WHERE KeysIndexes_Index._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_Index
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT KeysIndexes_Index._ID AS _ID,
             KeysIndexes_Index.isPartitioning AS isPartitioning,
             KeysIndexes_Index.isSorted AS isSorted,
             KeysIndexes_Index.isUnique AS isUnique,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM KeysIndexes_Index,
              Core_ModelElement
         WHERE KeysIndexes_Index._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_Index
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_KeysIndexes_Index
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_Index @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 57
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_KeysIndexes_Index
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_Index
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_KeysIndexes_Index @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_KeysIndexes_Index
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (57, 86)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_KeysIndexes_Index
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 57
   RETURN @@Error
GO


PRINT 'Class KeysIndexes.KeyRelationship'
GO

CREATE TABLE KeysIndexes_KeyRelationship
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(58, 'KeysIndexes.KeyRelationship')
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_KeyRelationship_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_KeyRelationship_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_KeysIndexes_KeyRelationship
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM KeysIndexes_KeyRelationship WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_KeysIndexes_KeyRelationship
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_KeyRelationship (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_KeysIndexes_KeyRelationship
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_KeysIndexes_KeyRelationship
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_KeysIndexes_KeyRelationship
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (88)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_KeyRelationshipFeatures_feature', 'Delete_KeysIndexes_KeyRelationshipFeatures', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_UniqueKeyRelationship_uniqueKey', 'Delete_KeysIndexes_UniqueKeyRelationship', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM KeysIndexes_KeyRelationship WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_KeysIndexes_KeyRelationship
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship
   @_ID INT
AS
   SELECT KeysIndexes_KeyRelationship._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_KeyRelationship,
           Core_ModelElement
      WHERE KeysIndexes_KeyRelationship._ID = @_ID
        AND KeysIndexes_KeyRelationship._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_KeysIndexes_KeyRelationship
AS
   SELECT KeysIndexes_KeyRelationship._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_KeyRelationship,
           Core_ModelElement
      WHERE KeysIndexes_KeyRelationship._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationship
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT KeysIndexes_KeyRelationship._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM KeysIndexes_KeyRelationship,
              Core_ModelElement
         WHERE KeysIndexes_KeyRelationship._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_KeyRelationship
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_KeysIndexes__26FE9C4B4059
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_KeyRelationship @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 58
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_KeysIndexes__26FE9C4B4059
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_KeyRelationship
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_KeysIndexes_KeyRelationship @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_KeysIndexes_KeyRelationship
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (58, 88)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_KeysIndexes_KeyRelationship
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 58
   RETURN @@Error
GO


PRINT 'Class KeysIndexes.IndexedFeature'
GO

CREATE TABLE KeysIndexes_IndexedFeature
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isAscending BIT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(59, 'KeysIndexes.IndexedFeature')
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_isAscending
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isAscending FROM KeysIndexes_IndexedFeature WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_KeysIndexes_IndexedFeature_isAscending
    @_ID INT
   ,@_Value BIT
AS
   UPDATE KeysIndexes_IndexedFeature SET isAscending = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_IndexedFeature_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_KeysIndexes_IndexedFeature_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_KeysIndexes_IndexedFeature
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM KeysIndexes_IndexedFeature WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_KeysIndexes_IndexedFeature
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_IndexedFeature (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_KeysIndexes_IndexedFeature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_KeysIndexes_IndexedFeature
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_KeysIndexes_IndexedFeature
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (89)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexedFeatures_feature', 'Delete_KeysIndexes_IndexedFeatures', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_KeysIndexes_IndexedFeatureInfo_index', 'Delete_KeysIndexes_IndexedFeatureInfo', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM KeysIndexes_IndexedFeature WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_KeysIndexes_IndexedFeature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature
   @_ID INT
AS
   SELECT KeysIndexes_IndexedFeature._ID AS _ID,
          KeysIndexes_IndexedFeature.isAscending AS isAscending,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_IndexedFeature,
           Core_ModelElement
      WHERE KeysIndexes_IndexedFeature._ID = @_ID
        AND KeysIndexes_IndexedFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_KeysIndexes_IndexedFeature
AS
   SELECT KeysIndexes_IndexedFeature._ID AS _ID,
          KeysIndexes_IndexedFeature.isAscending AS isAscending,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM KeysIndexes_IndexedFeature,
           Core_ModelElement
      WHERE KeysIndexes_IndexedFeature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeature
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT KeysIndexes_IndexedFeature._ID AS _ID,
             KeysIndexes_IndexedFeature.isAscending AS isAscending,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM KeysIndexes_IndexedFeature,
              Core_ModelElement
         WHERE KeysIndexes_IndexedFeature._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_IndexedFeature
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_KeysIndexes__9DFD7E2A018D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_IndexedFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 59
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_KeysIndexes__9DFD7E2A018D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_IndexedFeature
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_KeysIndexes_IndexedFeature @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_KeysIndexes_IndexedFeature
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (59, 89)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_KeysIndexes_IndexedFeature
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 59
   RETURN @@Error
GO


--
-- SoftwareDeployment Classes
--

PRINT 'Class SoftwareDeployment.Site'
GO

CREATE TABLE SoftwareDeployment_Site
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(60, 'SoftwareDeployment.Site')
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_locationType
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_locationType @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_locationType
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_locationType @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_address
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_address @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_address
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_address @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_city
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_city @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_city
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_city @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_postCode
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_postCode @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_postCode
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_postCode @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_area
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_area @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_area
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_area @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_country
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessInformation_Location_country @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_country
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessInformation_Location_country @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Site_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_Site
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_Site WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeployment_Site
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessInformation_Location @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_Site (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeployment_Site
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_Site
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeployment_Site
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_RelatedSites_containedSite', 'Delete_SoftwareDeployment_RelatedSites', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_RelatedSites_containingSite', 'Delete_SoftwareDeployment_RelatedSites', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SiteMachines_machine', 'Delete_SoftwareDeployment_SiteMachines', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_Site WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_BusinessInformation_Location @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeployment_Site
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site
   @_ID INT
AS
   SELECT SoftwareDeployment_Site._ID AS _ID,
          BusinessInformation_Location.locationType AS locationType,
          BusinessInformation_Location.address AS address,
          BusinessInformation_Location.city AS city,
          BusinessInformation_Location.postCode AS postCode,
          BusinessInformation_Location.area AS area,
          BusinessInformation_Location.country AS country,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Site,
           BusinessInformation_Location,
           Core_ModelElement
      WHERE SoftwareDeployment_Site._ID = @_ID
        AND SoftwareDeployment_Site._ID = BusinessInformation_Location._ID
        AND SoftwareDeployment_Site._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_Site
AS
   SELECT SoftwareDeployment_Site._ID AS _ID,
          BusinessInformation_Location.locationType AS locationType,
          BusinessInformation_Location.address AS address,
          BusinessInformation_Location.city AS city,
          BusinessInformation_Location.postCode AS postCode,
          BusinessInformation_Location.area AS area,
          BusinessInformation_Location.country AS country,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Site,
           BusinessInformation_Location,
           Core_ModelElement
      WHERE SoftwareDeployment_Site._ID = BusinessInformation_Location._ID
        AND SoftwareDeployment_Site._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_Site._ID AS _ID,
             BusinessInformation_Location.locationType AS locationType,
             BusinessInformation_Location.address AS address,
             BusinessInformation_Location.city AS city,
             BusinessInformation_Location.postCode AS postCode,
             BusinessInformation_Location.area AS area,
             BusinessInformation_Location.country AS country,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_Site,
              BusinessInformation_Location,
              Core_ModelElement
         WHERE SoftwareDeployment_Site._ID = BusinessInformation_Location._ID
           AND SoftwareDeployment_Site._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_Site
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDeployment_Site
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_Site @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 60
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDeployment_Site
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_Site
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_Site @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_Site
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 60
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_Site
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 60
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.Machine'
GO

CREATE TABLE SoftwareDeployment_Machine
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,machineID VARCHAR(256)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(61, 'SoftwareDeployment.Machine')
GO

CREATE TABLE SoftwareDeployment_Machine_ipAddress
   (_ID INT IDENTITY PRIMARY KEY
   ,_Class_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_Machine(_ID)
   ,_Value VARCHAR(256)
   ,_Ordinal INT NOT NULL
   )
GO

CREATE TABLE SoftwareDeployment_Machine_hostName
   (_ID INT IDENTITY PRIMARY KEY
   ,_Class_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_Machine(_ID)
   ,_Value VARCHAR(256)
   ,_Ordinal INT NOT NULL
   )
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_ipAddress
    @_Class_ID INT
AS
   SELECT _ID, _Value
      FROM SoftwareDeployment_Machine_ipAddress
      WHERE _Class_ID = @_Class_ID
      ORDER BY _Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_ipAddress
    @_Class_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID, _Value
         FROM SoftwareDeployment_Machine_ipAddress
         WHERE _Class_ID = @_Class_ID
         ORDER BY _Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Machine_ipAddress
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_Machine_ipAddress
      SET _Value = @_Value
      WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_ipAddress
    @_ID INT OUTPUT
   ,@_Class_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(_Ordinal)
      FROM SoftwareDeployment_Machine_ipAddress
      WHERE _Class_ID = @_Class_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Include_SoftwareDep_9D697786BD1F
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         INSERT SoftwareDeployment_Machine_ipAddress(_Class_ID, _Value, _Ordinal)
            VALUES (@_Class_ID, @_Value, @MaxOrdinal + 1)
         SELECT @Error = @@Error
         IF @Error = 0
            SET @_ID = IDENT_CURRENT('SoftwareDeployment_Machine_ipAddress')
      END
   END
   IF @Error = 0
      COMMIT TRANSACTION Include_SoftwareDep_9D697786BD1F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_ipAddress
    @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Exclude_SoftwareDep_F4D9EB33F053
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_Machine_ipAddress WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Exclude_SoftwareDep_F4D9EB33F053
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_hostName
    @_Class_ID INT
AS
   SELECT _ID, _Value
      FROM SoftwareDeployment_Machine_hostName
      WHERE _Class_ID = @_Class_ID
      ORDER BY _Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_hostName
    @_Class_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID, _Value
         FROM SoftwareDeployment_Machine_hostName
         WHERE _Class_ID = @_Class_ID
         ORDER BY _Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Machine_hostName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_Machine_hostName
      SET _Value = @_Value
      WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_hostName
    @_ID INT OUTPUT
   ,@_Class_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(_Ordinal)
      FROM SoftwareDeployment_Machine_hostName
      WHERE _Class_ID = @_Class_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Include_SoftwareDep_773952029CD5
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         INSERT SoftwareDeployment_Machine_hostName(_Class_ID, _Value, _Ordinal)
            VALUES (@_Class_ID, @_Value, @MaxOrdinal + 1)
         SELECT @Error = @@Error
         IF @Error = 0
            SET @_ID = IDENT_CURRENT('SoftwareDeployment_Machine_hostName')
      END
   END
   IF @Error = 0
      COMMIT TRANSACTION Include_SoftwareDep_773952029CD5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_hostName
    @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Exclude_SoftwareDep_8C0FF10E88A7
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_Machine_hostName WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Exclude_SoftwareDep_8C0FF10E88A7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_machineID
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = machineID FROM SoftwareDeployment_Machine WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Machine_machineID
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_Machine SET machineID = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Machine_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Machine_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_Machine
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_Machine WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeployment_Machine
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_Machine (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeployment_Machine
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_Machine
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeployment_Machine
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_ComponentsOnMachine_deployedComponent', 'Delete_SoftwareDeployment_ComponentsOnMachine', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SiteMachines_site', 'Delete_SoftwareDeployment_SiteMachines', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_Machine WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeployment_Machine
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine
   @_ID INT
AS
   SELECT SoftwareDeployment_Machine._ID AS _ID,
          SoftwareDeployment_Machine.machineID AS machineID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Machine,
           Core_ModelElement
      WHERE SoftwareDeployment_Machine._ID = @_ID
        AND SoftwareDeployment_Machine._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_Machine
AS
   SELECT SoftwareDeployment_Machine._ID AS _ID,
          SoftwareDeployment_Machine.machineID AS machineID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Machine,
           Core_ModelElement
      WHERE SoftwareDeployment_Machine._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_Machine._ID AS _ID,
             SoftwareDeployment_Machine.machineID AS machineID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_Machine,
              Core_ModelElement
         WHERE SoftwareDeployment_Machine._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_Machine
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_972114412EA1
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_Machine @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 61
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_972114412EA1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_Machine
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_Machine @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_Machine
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 61
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_Machine
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 61
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.SoftwareSystem'
GO

CREATE TABLE SoftwareDeployment_SoftwareSystem
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(256)
   ,subtype VARCHAR(256)
   ,supplier VARCHAR(256) NOT NULL
   ,version VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(62, 'SoftwareDeployment.SoftwareSystem')
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_SoftwareSystem SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_subtype
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = subtype FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_subtype
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_SoftwareSystem SET subtype = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_supplier
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = supplier FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_supplier
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_SoftwareSystem SET supplier = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_version
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = version FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_version
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_SoftwareSystem SET version = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_SoftwareSystem_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_SoftwareSystem
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_D25C55B97F05
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Subsystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_SoftwareSystem (_ID, supplier, version)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_D25C55B97F05
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_SoftwareSystem
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_93F49B3A9316
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SoftwareSystemDeployments_deployment', 'Delete_SoftwareDeployment_SoftwareSystemDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SystemTypespace_typespace', 'Delete_SoftwareDeployment_SystemTypespace', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_SoftwareSystem WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Subsystem @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_93F49B3A9316
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem
   @_ID INT
AS
   SELECT SoftwareDeployment_SoftwareSystem._ID AS _ID,
          SoftwareDeployment_SoftwareSystem.type AS type,
          SoftwareDeployment_SoftwareSystem.subtype AS subtype,
          SoftwareDeployment_SoftwareSystem.supplier AS supplier,
          SoftwareDeployment_SoftwareSystem.version AS version,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM SoftwareDeployment_SoftwareSystem,
           Core_ModelElement,
           Core_Classifier
      WHERE SoftwareDeployment_SoftwareSystem._ID = @_ID
        AND SoftwareDeployment_SoftwareSystem._ID = Core_ModelElement._ID
        AND SoftwareDeployment_SoftwareSystem._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_SoftwareSystem
AS
   SELECT SoftwareDeployment_SoftwareSystem._ID AS _ID,
          SoftwareDeployment_SoftwareSystem.type AS type,
          SoftwareDeployment_SoftwareSystem.subtype AS subtype,
          SoftwareDeployment_SoftwareSystem.supplier AS supplier,
          SoftwareDeployment_SoftwareSystem.version AS version,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM SoftwareDeployment_SoftwareSystem,
           Core_ModelElement,
           Core_Classifier
      WHERE SoftwareDeployment_SoftwareSystem._ID = Core_ModelElement._ID
        AND SoftwareDeployment_SoftwareSystem._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_SoftwareSystem._ID AS _ID,
             SoftwareDeployment_SoftwareSystem.type AS type,
             SoftwareDeployment_SoftwareSystem.subtype AS subtype,
             SoftwareDeployment_SoftwareSystem.supplier AS supplier,
             SoftwareDeployment_SoftwareSystem.version AS version,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility,
             Core_Classifier.isAbstract AS isAbstract
         FROM SoftwareDeployment_SoftwareSystem,
              Core_ModelElement,
              Core_Classifier
         WHERE SoftwareDeployment_SoftwareSystem._ID = Core_ModelElement._ID
           AND SoftwareDeployment_SoftwareSystem._ID = Core_Classifier._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_SoftwareSystem
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_4871993C931E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_SoftwareSystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 62
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_4871993C931E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_SoftwareSystem
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_SoftwareSystem @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_SoftwareSystem
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 62
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_SoftwareSystem
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 62
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.DeployedComponent'
GO

CREATE TABLE SoftwareDeployment_DeployedComponent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,pathname VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(63, 'SoftwareDeployment.DeployedComponent')
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_pathname
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = pathname FROM SoftwareDeployment_DeployedComponent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DeployedComponent_pathname
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_DeployedComponent SET pathname = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DeployedComponent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DeployedComponent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_DeployedComponent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_DeployedComponent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_9E08D050BCD4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_DeployedComponent (_ID, pathname)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_9E08D050BCD4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_DeployedComponent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_6435F9AC6ED6
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (65, 66)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_ComponentsOnMachine_machine', 'Delete_SoftwareDeployment_ComponentsOnMachine', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedSoftwareSystem', 'Delete_SoftwareDeployment_DeployedSoftwareSystemComponents', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_ComponentDeployments_component', 'Delete_SoftwareDeployment_ComponentDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_DeployedComponent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_6435F9AC6ED6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent
   @_ID INT
AS
   SELECT SoftwareDeployment_DeployedComponent._ID AS _ID,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DeployedComponent._ID = @_ID
        AND SoftwareDeployment_DeployedComponent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_DeployedComponent
AS
   SELECT SoftwareDeployment_DeployedComponent._ID AS _ID,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DeployedComponent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_DeployedComponent._ID AS _ID,
             SoftwareDeployment_DeployedComponent.pathname AS pathname,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_DeployedComponent,
              Core_ModelElement
         WHERE SoftwareDeployment_DeployedComponent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DeployedComponent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_57353210A88B
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DeployedComponent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 63
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_57353210A88B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DeployedComponent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_DeployedComponent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_DeployedComponent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (63, 65, 66)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_DeployedComponent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 63
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.DeployedSoftwareSystem'
GO

CREATE TABLE SoftwareDeployment_DeployedSoftwareSystem
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(64, 'SoftwareDeployment.DeployedSoftwareSystem')
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DeployedSoftwareSystem_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DeployedSoftwareSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_DeployedSoftwareSystem
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_DeployedSoftwareSystem WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_9C7A83B350B6
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_DeployedSoftwareSystem (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_9C7A83B350B6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_DeployedSoftwareSystem
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_87B54B6C3316
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SoftwareSystemDeployments_softwareSystem', 'Delete_SoftwareDeployment_SoftwareSystemDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedComponent', 'Delete_SoftwareDeployment_DeployedSoftwareSystemComponents', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_DeployedSoftwareSystem WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_87B54B6C3316
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem
   @_ID INT
AS
   SELECT SoftwareDeployment_DeployedSoftwareSystem._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DeployedSoftwareSystem,
           Core_ModelElement
      WHERE SoftwareDeployment_DeployedSoftwareSystem._ID = @_ID
        AND SoftwareDeployment_DeployedSoftwareSystem._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_DeployedSoftwareSystem
AS
   SELECT SoftwareDeployment_DeployedSoftwareSystem._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DeployedSoftwareSystem,
           Core_ModelElement
      WHERE SoftwareDeployment_DeployedSoftwareSystem._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_DeployedSoftwareSystem._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_DeployedSoftwareSystem,
              Core_ModelElement
         WHERE SoftwareDeployment_DeployedSoftwareSystem._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DeployedSoftwareSystem
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_721638D14F06
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DeployedSoftwareSystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 64
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_721638D14F06
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DeployedSoftwareSystem
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_DeployedSoftwareSystem @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_DeployedSoftwareSystem
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 64
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_DeployedSoftwareSystem
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 64
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.DataManager'
GO

CREATE TABLE SoftwareDeployment_DataManager
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isCaseSensitive BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(65, 'SoftwareDeployment.DataManager')
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_isCaseSensitive
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isCaseSensitive FROM SoftwareDeployment_DataManager WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataManager_isCaseSensitive
    @_ID INT
   ,@_Value BIT
AS
   UPDATE SoftwareDeployment_DataManager SET isCaseSensitive = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_pathname
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_DeployedComponent_pathname @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataManager_pathname
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_SoftwareDeployment_DeployedComponent_pathname @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataManager_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataManager_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_DataManager
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_DataManager WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_6ED956070BFF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DeployedComponent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_DataManager (_ID, isCaseSensitive)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_6ED956070BFF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_DataManager
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_E7B36A111115
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (66)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataManagerConnections_clientConnection', 'Delete_SoftwareDeployment_DataManagerConnections', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataManagerDataPackage_dataPackage', 'Delete_SoftwareDeployment_DataManagerDataPackage', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_DataManager WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_SoftwareDeployment_DeployedComponent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_E7B36A111115
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager
   @_ID INT
AS
   SELECT SoftwareDeployment_DataManager._ID AS _ID,
          SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DataManager,
           SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DataManager._ID = @_ID
        AND SoftwareDeployment_DataManager._ID = SoftwareDeployment_DeployedComponent._ID
        AND SoftwareDeployment_DataManager._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_DataManager
AS
   SELECT SoftwareDeployment_DataManager._ID AS _ID,
          SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DataManager,
           SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DataManager._ID = SoftwareDeployment_DeployedComponent._ID
        AND SoftwareDeployment_DataManager._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_DataManager._ID AS _ID,
             SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
             SoftwareDeployment_DeployedComponent.pathname AS pathname,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_DataManager,
              SoftwareDeployment_DeployedComponent,
              Core_ModelElement
         WHERE SoftwareDeployment_DataManager._ID = SoftwareDeployment_DeployedComponent._ID
           AND SoftwareDeployment_DataManager._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DataManager
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_F893DFDD5AB5
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DataManager @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 65
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_F893DFDD5AB5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DataManager
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_DataManager @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_DataManager
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (65, 66)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_DataManager
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 65
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.DataProvider'
GO

CREATE TABLE SoftwareDeployment_DataProvider
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(66, 'SoftwareDeployment.DataProvider')
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_isCaseSensitive
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_DataManager_isCaseSensitive @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataProvider_isCaseSensitive
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_SoftwareDeployment_DataManager_isCaseSensitive @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_pathname
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_DeployedComponent_pathname @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataProvider_pathname
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_SoftwareDeployment_DeployedComponent_pathname @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataProvider_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_DataProvider_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_DataProvider
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_DataProvider WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_DF322F98E014
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DataManager @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_DataProvider (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_DF322F98E014
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_DataProvider
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_B1926F1A7F68
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataProviderConnections_resourceConnection', 'Delete_SoftwareDeployment_DataProviderConnections', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_DataProvider WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_SoftwareDeployment_DataManager @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_B1926F1A7F68
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider
   @_ID INT
AS
   SELECT SoftwareDeployment_DataProvider._ID AS _ID,
          SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DataProvider,
           SoftwareDeployment_DataManager,
           SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DataProvider._ID = @_ID
        AND SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DataManager._ID
        AND SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DeployedComponent._ID
        AND SoftwareDeployment_DataProvider._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_DataProvider
AS
   SELECT SoftwareDeployment_DataProvider._ID AS _ID,
          SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
          SoftwareDeployment_DeployedComponent.pathname AS pathname,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_DataProvider,
           SoftwareDeployment_DataManager,
           SoftwareDeployment_DeployedComponent,
           Core_ModelElement
      WHERE SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DataManager._ID
        AND SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DeployedComponent._ID
        AND SoftwareDeployment_DataProvider._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_DataProvider._ID AS _ID,
             SoftwareDeployment_DataManager.isCaseSensitive AS isCaseSensitive,
             SoftwareDeployment_DeployedComponent.pathname AS pathname,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_DataProvider,
              SoftwareDeployment_DataManager,
              SoftwareDeployment_DeployedComponent,
              Core_ModelElement
         WHERE SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DataManager._ID
           AND SoftwareDeployment_DataProvider._ID = SoftwareDeployment_DeployedComponent._ID
           AND SoftwareDeployment_DataProvider._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DataProvider
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_415BA97A8C08
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_DataProvider @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 66
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_415BA97A8C08
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DataProvider
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_DataProvider @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_DataProvider
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 66
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_DataProvider
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 66
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.ProviderConnection'
GO

CREATE TABLE SoftwareDeployment_ProviderConnection
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isReadOnly BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(67, 'SoftwareDeployment.ProviderConnection')
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_isReadOnly
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isReadOnly FROM SoftwareDeployment_ProviderConnection WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_ProviderConnection_isReadOnly
    @_ID INT
   ,@_Value BIT
AS
   UPDATE SoftwareDeployment_ProviderConnection SET isReadOnly = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_ProviderConnection_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_ProviderConnection_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_ProviderConnection
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_ProviderConnection WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_64DD5655B7E0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_ProviderConnection (_ID, isReadOnly)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_64DD5655B7E0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_ProviderConnection
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_F443BA6C0402
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataProviderConnections_dataProvider', 'Delete_SoftwareDeployment_DataProviderConnections', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_DataManagerConnections_dataManager', 'Delete_SoftwareDeployment_DataManagerConnections', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_ProviderConnection WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_F443BA6C0402
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection
   @_ID INT
AS
   SELECT SoftwareDeployment_ProviderConnection._ID AS _ID,
          SoftwareDeployment_ProviderConnection.isReadOnly AS isReadOnly,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_ProviderConnection,
           Core_ModelElement
      WHERE SoftwareDeployment_ProviderConnection._ID = @_ID
        AND SoftwareDeployment_ProviderConnection._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_ProviderConnection
AS
   SELECT SoftwareDeployment_ProviderConnection._ID AS _ID,
          SoftwareDeployment_ProviderConnection.isReadOnly AS isReadOnly,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_ProviderConnection,
           Core_ModelElement
      WHERE SoftwareDeployment_ProviderConnection._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ProviderConnection
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_ProviderConnection._ID AS _ID,
             SoftwareDeployment_ProviderConnection.isReadOnly AS isReadOnly,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_ProviderConnection,
              Core_ModelElement
         WHERE SoftwareDeployment_ProviderConnection._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_ProviderConnection
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_F770B502DB44
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_ProviderConnection @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 67
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_F770B502DB44
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_ProviderConnection
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_ProviderConnection @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_ProviderConnection
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 67
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_ProviderConnection
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 67
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.Component'
GO

CREATE TABLE SoftwareDeployment_Component
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(68, 'SoftwareDeployment.Component')
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Component_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Component_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_Component_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_Component
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_Component WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeployment_Component
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_Component (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeployment_Component
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_Component
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_19995DFF9BDD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (122)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_ComponentDeployments_deployment', 'Delete_SoftwareDeployment_ComponentDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_Component WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_19995DFF9BDD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component
   @_ID INT
AS
   SELECT SoftwareDeployment_Component._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Component,
           Core_Classifier,
           Core_ModelElement
      WHERE SoftwareDeployment_Component._ID = @_ID
        AND SoftwareDeployment_Component._ID = Core_Classifier._ID
        AND SoftwareDeployment_Component._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_Component
AS
   SELECT SoftwareDeployment_Component._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_Component,
           Core_Classifier,
           Core_ModelElement
      WHERE SoftwareDeployment_Component._ID = Core_Classifier._ID
        AND SoftwareDeployment_Component._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_Component._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_Component,
              Core_Classifier,
              Core_ModelElement
         WHERE SoftwareDeployment_Component._ID = Core_Classifier._ID
           AND SoftwareDeployment_Component._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_Component
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_FCDD71974753
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_Component @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 68
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_FCDD71974753
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_Component
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_Component @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_Component
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (68, 122)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_Component
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 68
   RETURN @@Error
GO


PRINT 'Class SoftwareDeployment.PackageUsage'
GO

CREATE TABLE SoftwareDeployment_PackageUsage
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,packageAlias VARCHAR(256)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(69, 'SoftwareDeployment.PackageUsage')
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_packageAlias
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = packageAlias FROM SoftwareDeployment_PackageUsage WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_PackageUsage_packageAlias
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE SoftwareDeployment_PackageUsage SET packageAlias = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_kind
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Dependency_kind @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_PackageUsage_kind
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Dependency_kind @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_PackageUsage_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_SoftwareDeployment_PackageUsage_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_SoftwareDeployment_PackageUsage
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM SoftwareDeployment_PackageUsage WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_SoftwareDeploym_1E89670C80DF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Dependency @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT SoftwareDeployment_PackageUsage (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_SoftwareDeploym_1E89670C80DF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_SoftwareDeployment_PackageUsage
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_SoftwareDeploy_8C07484197E2
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM SoftwareDeployment_PackageUsage WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Dependency @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_SoftwareDeploy_8C07484197E2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage
   @_ID INT
AS
   SELECT SoftwareDeployment_PackageUsage._ID AS _ID,
          SoftwareDeployment_PackageUsage.packageAlias AS packageAlias,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_PackageUsage,
           Core_Dependency,
           Core_ModelElement
      WHERE SoftwareDeployment_PackageUsage._ID = @_ID
        AND SoftwareDeployment_PackageUsage._ID = Core_Dependency._ID
        AND SoftwareDeployment_PackageUsage._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_SoftwareDeployment_PackageUsage
AS
   SELECT SoftwareDeployment_PackageUsage._ID AS _ID,
          SoftwareDeployment_PackageUsage.packageAlias AS packageAlias,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM SoftwareDeployment_PackageUsage,
           Core_Dependency,
           Core_ModelElement
      WHERE SoftwareDeployment_PackageUsage._ID = Core_Dependency._ID
        AND SoftwareDeployment_PackageUsage._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT SoftwareDeployment_PackageUsage._ID AS _ID,
             SoftwareDeployment_PackageUsage.packageAlias AS packageAlias,
             Core_Dependency.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM SoftwareDeployment_PackageUsage,
              Core_Dependency,
              Core_ModelElement
         WHERE SoftwareDeployment_PackageUsage._ID = Core_Dependency._ID
           AND SoftwareDeployment_PackageUsage._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_PackageUsage
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_SoftwareDepl_93620247314C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_PackageUsage @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 69
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_SoftwareDepl_93620247314C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_PackageUsage
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_SoftwareDeployment_PackageUsage @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_SoftwareDeployment_PackageUsage
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 69
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_SoftwareDeployment_PackageUsage
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 69
   RETURN @@Error
GO


--
-- TypeMapping Classes
--

PRINT 'Class TypeMapping.TypeMapping'
GO

CREATE TABLE TypeMapping_TypeMapping
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isBestMatch BIT NOT NULL
   ,isLossy BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(70, 'TypeMapping.TypeMapping')
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_isBestMatch
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isBestMatch FROM TypeMapping_TypeMapping WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeMapping_isBestMatch
    @_ID INT
   ,@_Value BIT
AS
   UPDATE TypeMapping_TypeMapping SET isBestMatch = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_isLossy
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isLossy FROM TypeMapping_TypeMapping WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeMapping_isLossy
    @_ID INT
   ,@_Value BIT
AS
   UPDATE TypeMapping_TypeMapping SET isLossy = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeMapping_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeMapping_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_TypeMapping_TypeMapping
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM TypeMapping_TypeMapping WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_TypeMapping_TypeMapping
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT TypeMapping_TypeMapping (_ID, isBestMatch, isLossy)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_TypeMapping_TypeMapping
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_TypeMapping_TypeMapping
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_TypeMapping_TypeMapping
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_TypeMapping_MappingSource_sourceType', 'Delete_TypeMapping_MappingSource', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_TypeMapping_MappingTarget_targetType', 'Delete_TypeMapping_MappingTarget', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM TypeMapping_TypeMapping WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_TypeMapping_TypeMapping
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping
   @_ID INT
AS
   SELECT TypeMapping_TypeMapping._ID AS _ID,
          TypeMapping_TypeMapping.isBestMatch AS isBestMatch,
          TypeMapping_TypeMapping.isLossy AS isLossy,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM TypeMapping_TypeMapping,
           Core_ModelElement
      WHERE TypeMapping_TypeMapping._ID = @_ID
        AND TypeMapping_TypeMapping._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_TypeMapping_TypeMapping
AS
   SELECT TypeMapping_TypeMapping._ID AS _ID,
          TypeMapping_TypeMapping.isBestMatch AS isBestMatch,
          TypeMapping_TypeMapping.isLossy AS isLossy,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM TypeMapping_TypeMapping,
           Core_ModelElement
      WHERE TypeMapping_TypeMapping._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeMapping
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT TypeMapping_TypeMapping._ID AS _ID,
             TypeMapping_TypeMapping.isBestMatch AS isBestMatch,
             TypeMapping_TypeMapping.isLossy AS isLossy,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM TypeMapping_TypeMapping,
              Core_ModelElement
         WHERE TypeMapping_TypeMapping._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_TypeMapping_TypeMapping
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_TypeMapping_TypeMapping
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_TypeMapping_TypeMapping @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 70
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_TypeMapping_TypeMapping
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_TypeMapping_TypeMapping
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_TypeMapping_TypeMapping @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_TypeMapping_TypeMapping
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 70
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_TypeMapping_TypeMapping
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 70
   RETURN @@Error
GO


PRINT 'Class TypeMapping.TypeSystem'
GO

CREATE TABLE TypeMapping_TypeSystem
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,version VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(71, 'TypeMapping.TypeSystem')
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_version
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = version FROM TypeMapping_TypeSystem WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeSystem_version
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE TypeMapping_TypeSystem SET version = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeSystem_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_TypeMapping_TypeSystem_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_TypeMapping_TypeSystem
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM TypeMapping_TypeSystem WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_TypeMapping_TypeSystem
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT TypeMapping_TypeSystem (_ID, version)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_TypeMapping_TypeSystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_TypeMapping_TypeSystem
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_TypeMapping_TypeSystem
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_SoftwareDeployment_SystemTypespace_supportingSystem', 'Delete_SoftwareDeployment_SystemTypespace', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM TypeMapping_TypeSystem WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_TypeMapping_TypeSystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem
   @_ID INT
AS
   SELECT TypeMapping_TypeSystem._ID AS _ID,
          TypeMapping_TypeSystem.version AS version,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM TypeMapping_TypeSystem,
           Core_ModelElement
      WHERE TypeMapping_TypeSystem._ID = @_ID
        AND TypeMapping_TypeSystem._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_TypeMapping_TypeSystem
AS
   SELECT TypeMapping_TypeSystem._ID AS _ID,
          TypeMapping_TypeSystem.version AS version,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM TypeMapping_TypeSystem,
           Core_ModelElement
      WHERE TypeMapping_TypeSystem._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT TypeMapping_TypeSystem._ID AS _ID,
             TypeMapping_TypeSystem.version AS version,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM TypeMapping_TypeSystem,
              Core_ModelElement
         WHERE TypeMapping_TypeSystem._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_TypeMapping_TypeSystem
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_TypeMapping_TypeSystem
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_TypeMapping_TypeSystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 71
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_TypeMapping_TypeSystem
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_TypeMapping_TypeSystem
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_TypeMapping_TypeSystem @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_TypeMapping_TypeSystem
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 71
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_TypeMapping_TypeSystem
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 71
   RETURN @@Error
GO


--
-- Relational.Enumerations Classes
--

PRINT 'Class Relational.Catalog'
GO

CREATE TABLE Relational_Catalog
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,defaultCharacterSetName VARCHAR(256) NOT NULL
   ,defaultCollationName VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(72, 'Relational.Catalog')
GO

CREATE PROCEDURE Get_Relational_Catalog_defaultCharacterSetName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = defaultCharacterSetName FROM Relational_Catalog WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Catalog_defaultCharacterSetName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Catalog SET defaultCharacterSetName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Catalog_defaultCollationName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = defaultCollationName FROM Relational_Catalog WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Catalog_defaultCollationName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Catalog SET defaultCollationName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Catalog_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Catalog_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Catalog_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Catalog
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Catalog WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Catalog
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Catalog (_ID, defaultCharacterSetName, defaultCollationName)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Catalog
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Catalog
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Catalog
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Catalog WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Catalog
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog
   @_ID INT
AS
   SELECT Relational_Catalog._ID AS _ID,
          Relational_Catalog.defaultCharacterSetName AS defaultCharacterSetName,
          Relational_Catalog.defaultCollationName AS defaultCollationName,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Catalog,
           Core_ModelElement
      WHERE Relational_Catalog._ID = @_ID
        AND Relational_Catalog._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Catalog
AS
   SELECT Relational_Catalog._ID AS _ID,
          Relational_Catalog.defaultCharacterSetName AS defaultCharacterSetName,
          Relational_Catalog.defaultCollationName AS defaultCollationName,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Catalog,
           Core_ModelElement
      WHERE Relational_Catalog._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Catalog._ID AS _ID,
             Relational_Catalog.defaultCharacterSetName AS defaultCharacterSetName,
             Relational_Catalog.defaultCollationName AS defaultCollationName,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Catalog,
              Core_ModelElement
         WHERE Relational_Catalog._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Catalog
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Catalog
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Catalog @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 72
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Catalog
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Catalog
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Catalog @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Catalog
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 72
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Catalog
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 72
   RETURN @@Error
GO


PRINT 'Class Relational.Schema'
GO

CREATE TABLE Relational_Schema
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(73, 'Relational.Schema')
GO

CREATE PROCEDURE Get_Relational_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Schema
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Schema WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Schema (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Schema
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Schema WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema
   @_ID INT
AS
   SELECT Relational_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Schema,
           Core_ModelElement
      WHERE Relational_Schema._ID = @_ID
        AND Relational_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Schema
AS
   SELECT Relational_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Schema,
           Core_ModelElement
      WHERE Relational_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Schema._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Schema,
              Core_ModelElement
         WHERE Relational_Schema._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Schema
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Schema @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 73
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Schema
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Schema @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Schema
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 73
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Schema
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 73
   RETURN @@Error
GO


PRINT 'Class Relational.ColumnSet'
GO

CREATE TABLE Relational_ColumnSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(74, 'Relational.ColumnSet')
GO

CREATE PROCEDURE Get_Relational_ColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_ColumnSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_ColumnSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_ColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_ColumnSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_ColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_ColumnSet
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_ColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (75, 76, 77, 78)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_ColumnSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_ColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet
   @_ID INT
AS
   SELECT Relational_ColumnSet._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_ColumnSet._ID = @_ID
        AND Relational_ColumnSet._ID = Core_Classifier._ID
        AND Relational_ColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_ColumnSet
AS
   SELECT Relational_ColumnSet._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_ColumnSet._ID = Core_Classifier._ID
        AND Relational_ColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_ColumnSet._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_ColumnSet,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_ColumnSet._ID = Core_Classifier._ID
           AND Relational_ColumnSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_ColumnSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_ColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_ColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 74
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_ColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ColumnSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_ColumnSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_ColumnSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (74, 75, 76, 77, 78)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_ColumnSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 74
   RETURN @@Error
GO


PRINT 'Class Relational.NamedColumnSet'
GO

CREATE TABLE Relational_NamedColumnSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(75, 'Relational.NamedColumnSet')
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_NamedColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_NamedColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_NamedColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_NamedColumnSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_NamedColumnSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_NamedColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_ColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_NamedColumnSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_NamedColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_NamedColumnSet
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_NamedColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (76, 77)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_TriggerUsingColumnSet_usingTrigger', 'Delete_Relational_TriggerUsingColumnSet', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnSetOfStructuredType_type', 'Delete_Relational_ColumnSetOfStructuredType', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnOptionsColumnSet_optionScopeColumn', 'Delete_Relational_ColumnOptionsColumnSet', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_NamedColumnSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_ColumnSet @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_NamedColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet
   @_ID INT
AS
   SELECT Relational_NamedColumnSet._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_NamedColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_NamedColumnSet._ID = @_ID
        AND Relational_NamedColumnSet._ID = Core_Classifier._ID
        AND Relational_NamedColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_NamedColumnSet
AS
   SELECT Relational_NamedColumnSet._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_NamedColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_NamedColumnSet._ID = Core_Classifier._ID
        AND Relational_NamedColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_NamedColumnSet._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_NamedColumnSet,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_NamedColumnSet._ID = Core_Classifier._ID
           AND Relational_NamedColumnSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_NamedColumnSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_NamedColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_NamedColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 75
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_NamedColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_NamedColumnSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_NamedColumnSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_NamedColumnSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (75, 76, 77)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_NamedColumnSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 75
   RETURN @@Error
GO


PRINT 'Class Relational.Table'
GO

CREATE TABLE Relational_Table
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isTemporary BIT NOT NULL
   ,temporaryScope VARCHAR(256)
   ,isSystem BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(76, 'Relational.Table')
GO

CREATE PROCEDURE Get_Relational_Table_isTemporary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isTemporary FROM Relational_Table WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Table_isTemporary
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_Table SET isTemporary = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Table_temporaryScope
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = temporaryScope FROM Relational_Table WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Table_temporaryScope
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Table SET temporaryScope = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Table_isSystem
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isSystem FROM Relational_Table WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Table_isSystem
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_Table SET isSystem = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Table_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Table_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Table_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Table_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Table
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Table WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Table
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_NamedColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Table (_ID, isTemporary, isSystem)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Table
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Table
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Table
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_TableOwningTrigger_trigger', 'Delete_Relational_TableOwningTrigger', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Table WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_NamedColumnSet @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Table
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table
   @_ID INT
AS
   SELECT Relational_Table._ID AS _ID,
          Relational_Table.isTemporary AS isTemporary,
          Relational_Table.temporaryScope AS temporaryScope,
          Relational_Table.isSystem AS isSystem,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Table,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_Table._ID = @_ID
        AND Relational_Table._ID = Core_Classifier._ID
        AND Relational_Table._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Table
AS
   SELECT Relational_Table._ID AS _ID,
          Relational_Table.isTemporary AS isTemporary,
          Relational_Table.temporaryScope AS temporaryScope,
          Relational_Table.isSystem AS isSystem,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Table,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_Table._ID = Core_Classifier._ID
        AND Relational_Table._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Table._ID AS _ID,
             Relational_Table.isTemporary AS isTemporary,
             Relational_Table.temporaryScope AS temporaryScope,
             Relational_Table.isSystem AS isSystem,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Table,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_Table._ID = Core_Classifier._ID
           AND Relational_Table._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Table
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Table
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Table @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 76
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Table
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Table
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Table @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Table
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 76
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Table
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 76
   RETURN @@Error
GO


PRINT 'Class Relational.View'
GO

CREATE TABLE Relational_View
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isReadOnly BIT NOT NULL
   ,checkOption BIT NOT NULL
   ,queryExpression_ID INT NOT NULL FOREIGN KEY REFERENCES DataTypes_QueryExpression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(77, 'Relational.View')
GO

CREATE PROCEDURE Get_Relational_View_isReadOnly
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isReadOnly FROM Relational_View WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_View_isReadOnly
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_View SET isReadOnly = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_View_checkOption
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = checkOption FROM Relational_View WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_View_checkOption
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_View SET checkOption = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_View_queryExpression
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = queryExpression_ID FROM Relational_View WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_View_queryExpression
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Relational_View SET queryExpression_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_View_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_View_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_View_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_View_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_View
   @_ID INT OUTPUT
AS
   DECLARE @queryExpression_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_View WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_View
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_NamedColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_DataTypes_QueryExpression @queryExpression_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Relational_View (_ID, isReadOnly, checkOption, queryExpression_ID)
            VALUES (@_ID, 0, 0, @queryExpression_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Relational_View
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_View
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @queryExpression_ID INT
   EXECUTE @Error = Get_Relational_View_queryExpression @_ID, @queryExpression_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Relational_View
      SELECT @Error = @@Error
      IF @Error = 0 AND @queryExpression_ID IS NOT NULL
         EXECUTE @Error = Drop_DataTypes_QueryExpression @queryExpression_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Relational_View WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_NamedColumnSet @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Relational_View
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View
   @_ID INT
AS
   SELECT Relational_View._ID AS _ID,
          Relational_View.isReadOnly AS isReadOnly,
          Relational_View.checkOption AS checkOption,
          Relational_View.queryExpression_ID AS queryExpression_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_View,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_View._ID = @_ID
        AND Relational_View._ID = Core_Classifier._ID
        AND Relational_View._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_View
AS
   SELECT Relational_View._ID AS _ID,
          Relational_View.isReadOnly AS isReadOnly,
          Relational_View.checkOption AS checkOption,
          Relational_View.queryExpression_ID AS queryExpression_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_View,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_View._ID = Core_Classifier._ID
        AND Relational_View._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_View._ID AS _ID,
             Relational_View.isReadOnly AS isReadOnly,
             Relational_View.checkOption AS checkOption,
             Relational_View.queryExpression_ID AS queryExpression_ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_View,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_View._ID = Core_Classifier._ID
           AND Relational_View._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_View
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_View
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_View @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 77
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_View
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_View
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_View @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_View
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 77
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_View
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 77
   RETURN @@Error
GO


PRINT 'Class Relational.QueryColumnSet'
GO

CREATE TABLE Relational_QueryColumnSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,query_ID INT NOT NULL FOREIGN KEY REFERENCES DataTypes_QueryExpression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(78, 'Relational.QueryColumnSet')
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_query
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = query_ID FROM Relational_QueryColumnSet WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_QueryColumnSet_query
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Relational_QueryColumnSet SET query_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_QueryColumnSet_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_QueryColumnSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_QueryColumnSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_QueryColumnSet
   @_ID INT OUTPUT
AS
   DECLARE @query_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_QueryColumnSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_QueryColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_ColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_DataTypes_QueryExpression @query_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Relational_QueryColumnSet (_ID, query_ID)
            VALUES (@_ID, @query_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Relational_QueryColumnSet
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_QueryColumnSet
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @query_ID INT
   EXECUTE @Error = Get_Relational_QueryColumnSet_query @_ID, @query_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Relational_QueryColumnSet
      SELECT @Error = @@Error
      IF @Error = 0 AND @query_ID IS NOT NULL
         EXECUTE @Error = Drop_DataTypes_QueryExpression @query_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Relational_QueryColumnSet WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_ColumnSet @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Relational_QueryColumnSet
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet
   @_ID INT
AS
   SELECT Relational_QueryColumnSet._ID AS _ID,
          Relational_QueryColumnSet.query_ID AS query_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_QueryColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_QueryColumnSet._ID = @_ID
        AND Relational_QueryColumnSet._ID = Core_Classifier._ID
        AND Relational_QueryColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_QueryColumnSet
AS
   SELECT Relational_QueryColumnSet._ID AS _ID,
          Relational_QueryColumnSet.query_ID AS query_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_QueryColumnSet,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_QueryColumnSet._ID = Core_Classifier._ID
        AND Relational_QueryColumnSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_QueryColumnSet._ID AS _ID,
             Relational_QueryColumnSet.query_ID AS query_ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_QueryColumnSet,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_QueryColumnSet._ID = Core_Classifier._ID
           AND Relational_QueryColumnSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_QueryColumnSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_QueryColumnSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_QueryColumnSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 78
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_QueryColumnSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_QueryColumnSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_QueryColumnSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_QueryColumnSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 78
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_QueryColumnSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 78
   RETURN @@Error
GO


PRINT 'Class Relational.SQLDataType'
GO

CREATE TABLE Relational_SQLDataType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,typeNumber INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(79, 'Relational.SQLDataType')
GO

CREATE PROCEDURE Get_Relational_SQLDataType_typeNumber
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = typeNumber FROM Relational_SQLDataType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLDataType_typeNumber
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLDataType SET typeNumber = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDataType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDataType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDataType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLDataType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLDataType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLDataType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLDataType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLDataType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLDataType
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLDataType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (80, 81, 82)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLDataType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLDataType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType
   @_ID INT
AS
   SELECT Relational_SQLDataType._ID AS _ID,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLDataType._ID = @_ID
        AND Relational_SQLDataType._ID = Core_Classifier._ID
        AND Relational_SQLDataType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLDataType
AS
   SELECT Relational_SQLDataType._ID AS _ID,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLDataType._ID = Core_Classifier._ID
        AND Relational_SQLDataType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLDataType._ID AS _ID,
             Relational_SQLDataType.typeNumber AS typeNumber,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLDataType,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_SQLDataType._ID = Core_Classifier._ID
           AND Relational_SQLDataType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLDataType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (79, 80, 81, 82)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLDataType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 79
   RETURN @@Error
GO


PRINT 'Class Relational.SQLDistinctType'
GO

CREATE TABLE Relational_SQLDistinctType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,length INT
   ,[precision] INT
   ,scale INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(80, 'Relational.SQLDistinctType')
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_length
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = length FROM Relational_SQLDistinctType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_length
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLDistinctType SET length = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_precision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [precision] FROM Relational_SQLDistinctType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_precision
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLDistinctType SET [precision] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_scale
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = scale FROM Relational_SQLDistinctType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_scale
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLDistinctType SET scale = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_typeNumber
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_SQLDataType_typeNumber @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_typeNumber
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Relational_SQLDataType_typeNumber @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLDistinctType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLDistinctType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLDistinctType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLDistinctType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Add_DataTypes_TypeAlias @_ID OUTPUT
      IF @Error = 0
         EXECUTE @Error = Add_Relational_SQLDataType @_ID OUTPUT
   END
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLDistinctType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLDistinctType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLDistinctType
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLDistinctType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_DistinctTypeHasSimpleType_sqlSimpleType', 'Delete_Relational_DistinctTypeHasSimpleType', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLDistinctType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_SQLDataType @_ID
   IF @Error = 0
      EXECUTE @Error = Drop_DataTypes_TypeAlias @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLDistinctType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType
   @_ID INT
AS
   SELECT Relational_SQLDistinctType._ID AS _ID,
          Relational_SQLDistinctType.length AS length,
          Relational_SQLDistinctType.[precision] AS [precision],
          Relational_SQLDistinctType.scale AS scale,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLDistinctType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLDistinctType._ID = @_ID
        AND Relational_SQLDistinctType._ID = Relational_SQLDataType._ID
        AND Relational_SQLDistinctType._ID = Core_Classifier._ID
        AND Relational_SQLDistinctType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLDistinctType
AS
   SELECT Relational_SQLDistinctType._ID AS _ID,
          Relational_SQLDistinctType.length AS length,
          Relational_SQLDistinctType.[precision] AS [precision],
          Relational_SQLDistinctType.scale AS scale,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLDistinctType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLDistinctType._ID = Relational_SQLDataType._ID
        AND Relational_SQLDistinctType._ID = Core_Classifier._ID
        AND Relational_SQLDistinctType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLDistinctType._ID AS _ID,
             Relational_SQLDistinctType.length AS length,
             Relational_SQLDistinctType.[precision] AS [precision],
             Relational_SQLDistinctType.scale AS scale,
             Relational_SQLDataType.typeNumber AS typeNumber,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLDistinctType,
              Relational_SQLDataType,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_SQLDistinctType._ID = Relational_SQLDataType._ID
           AND Relational_SQLDistinctType._ID = Core_Classifier._ID
           AND Relational_SQLDistinctType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLDistinctType
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_S_018A7FC9ED90
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLDistinctType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 80
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_S_018A7FC9ED90
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLDistinctType
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLDistinctType @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLDistinctType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 80
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLDistinctType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 80
   RETURN @@Error
GO


PRINT 'Class Relational.SQLSimpleType'
GO

CREATE TABLE Relational_SQLSimpleType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,characterMaximumLength INT
   ,characterOctetLength INT
   ,numericPrecision INT
   ,numericPrecisionRadix INT
   ,numericScale INT
   ,dateTimePrecision INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(81, 'Relational.SQLSimpleType')
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_characterMaximumLength
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = characterMaximumLength FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_characterMaximumLength
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET characterMaximumLength = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_characterOctetLength
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = characterOctetLength FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_characterOctetLength
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET characterOctetLength = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_numericPrecision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = numericPrecision FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_numericPrecision
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET numericPrecision = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_numericPrecisionRadix
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = numericPrecisionRadix FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_numericPrecisionRadix
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET numericPrecisionRadix = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_numericScale
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = numericScale FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_numericScale
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET numericScale = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_dateTimePrecision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = dateTimePrecision FROM Relational_SQLSimpleType WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_dateTimePrecision
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_SQLSimpleType SET dateTimePrecision = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_typeNumber
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_SQLDataType_typeNumber @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_typeNumber
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Relational_SQLDataType_typeNumber @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLSimpleType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLSimpleType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLSimpleType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLSimpleType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Add_Core_DataType @_ID OUTPUT
      IF @Error = 0
         EXECUTE @Error = Add_Relational_SQLDataType @_ID OUTPUT
   END
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLSimpleType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLSimpleType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLSimpleType
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLSimpleType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_DistinctTypeHasSimpleType_sqlDistinctType', 'Delete_Relational_DistinctTypeHasSimpleType', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLSimpleType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_SQLDataType @_ID
   IF @Error = 0
      EXECUTE @Error = Drop_Core_DataType @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLSimpleType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType
   @_ID INT
AS
   SELECT Relational_SQLSimpleType._ID AS _ID,
          Relational_SQLSimpleType.characterMaximumLength AS characterMaximumLength,
          Relational_SQLSimpleType.characterOctetLength AS characterOctetLength,
          Relational_SQLSimpleType.numericPrecision AS numericPrecision,
          Relational_SQLSimpleType.numericPrecisionRadix AS numericPrecisionRadix,
          Relational_SQLSimpleType.numericScale AS numericScale,
          Relational_SQLSimpleType.dateTimePrecision AS dateTimePrecision,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLSimpleType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLSimpleType._ID = @_ID
        AND Relational_SQLSimpleType._ID = Relational_SQLDataType._ID
        AND Relational_SQLSimpleType._ID = Core_Classifier._ID
        AND Relational_SQLSimpleType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLSimpleType
AS
   SELECT Relational_SQLSimpleType._ID AS _ID,
          Relational_SQLSimpleType.characterMaximumLength AS characterMaximumLength,
          Relational_SQLSimpleType.characterOctetLength AS characterOctetLength,
          Relational_SQLSimpleType.numericPrecision AS numericPrecision,
          Relational_SQLSimpleType.numericPrecisionRadix AS numericPrecisionRadix,
          Relational_SQLSimpleType.numericScale AS numericScale,
          Relational_SQLSimpleType.dateTimePrecision AS dateTimePrecision,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLSimpleType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLSimpleType._ID = Relational_SQLDataType._ID
        AND Relational_SQLSimpleType._ID = Core_Classifier._ID
        AND Relational_SQLSimpleType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLSimpleType._ID AS _ID,
             Relational_SQLSimpleType.characterMaximumLength AS characterMaximumLength,
             Relational_SQLSimpleType.characterOctetLength AS characterOctetLength,
             Relational_SQLSimpleType.numericPrecision AS numericPrecision,
             Relational_SQLSimpleType.numericPrecisionRadix AS numericPrecisionRadix,
             Relational_SQLSimpleType.numericScale AS numericScale,
             Relational_SQLSimpleType.dateTimePrecision AS dateTimePrecision,
             Relational_SQLDataType.typeNumber AS typeNumber,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLSimpleType,
              Relational_SQLDataType,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_SQLSimpleType._ID = Relational_SQLDataType._ID
           AND Relational_SQLSimpleType._ID = Core_Classifier._ID
           AND Relational_SQLSimpleType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLSimpleType
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_SQLSimpleType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLSimpleType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 81
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_SQLSimpleType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLSimpleType
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLSimpleType @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLSimpleType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 81
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLSimpleType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 81
   RETURN @@Error
GO


PRINT 'Class Relational.SQLStructuredType'
GO

CREATE TABLE Relational_SQLStructuredType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(82, 'Relational.SQLStructuredType')
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_typeNumber
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_SQLDataType_typeNumber @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLStructuredType_typeNumber
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Relational_SQLDataType_typeNumber @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLStructuredType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLStructuredType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLStructuredType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLStructuredType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLStructuredType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLStructuredType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
      IF @Error = 0
         EXECUTE @Error = Add_Relational_SQLDataType @_ID OUTPUT
   END
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLStructuredType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLStructuredType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLStructuredType
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQL_4ACFCD00D97B
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnSetOfStructuredType_columnSet', 'Delete_Relational_ColumnSetOfStructuredType', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnRefStructuredType_referencingColumn', 'Delete_Relational_ColumnRefStructuredType', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLStructuredType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_SQLDataType @_ID
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQL_4ACFCD00D97B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType
   @_ID INT
AS
   SELECT Relational_SQLStructuredType._ID AS _ID,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLStructuredType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLStructuredType._ID = @_ID
        AND Relational_SQLStructuredType._ID = Relational_SQLDataType._ID
        AND Relational_SQLStructuredType._ID = Core_Classifier._ID
        AND Relational_SQLStructuredType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLStructuredType
AS
   SELECT Relational_SQLStructuredType._ID AS _ID,
          Relational_SQLDataType.typeNumber AS typeNumber,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLStructuredType,
           Relational_SQLDataType,
           Core_Classifier,
           Core_ModelElement
      WHERE Relational_SQLStructuredType._ID = Relational_SQLDataType._ID
        AND Relational_SQLStructuredType._ID = Core_Classifier._ID
        AND Relational_SQLStructuredType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLStructuredType._ID AS _ID,
             Relational_SQLDataType.typeNumber AS typeNumber,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLStructuredType,
              Relational_SQLDataType,
              Core_Classifier,
              Core_ModelElement
         WHERE Relational_SQLStructuredType._ID = Relational_SQLDataType._ID
           AND Relational_SQLStructuredType._ID = Core_Classifier._ID
           AND Relational_SQLStructuredType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLStructuredType
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_S_ADEBE850BEE7
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLStructuredType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 82
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_S_ADEBE850BEE7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLStructuredType
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLStructuredType @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLStructuredType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 82
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLStructuredType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 82
   RETURN @@Error
GO


PRINT 'Class Relational.Column'
GO

CREATE TABLE Relational_Column
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[precision] INT
   ,scale INT
   ,isNullable VARCHAR(128) NOT NULL
   ,length INT
   ,collationName VARCHAR(256) NOT NULL
   ,characterSetName VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(83, 'Relational.Column')
GO

CREATE PROCEDURE Get_Relational_Column_precision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [precision] FROM Relational_Column WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_precision
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_Column SET [precision] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_scale
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = scale FROM Relational_Column WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_scale
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_Column SET scale = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_isNullable
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_Column.isNullable
      FROM Relational_Column
      WHERE Relational_Column._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_isNullable
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_Column
      SET isNullable = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_NullableType WHERE _EnumLiteral = @_Value)
      WHERE Relational_Column._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_length
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = length FROM Relational_Column WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_length
    @_ID INT
   ,@_Value INT
AS
   UPDATE Relational_Column SET length = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_collationName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = collationName FROM Relational_Column WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_collationName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Column SET collationName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_characterSetName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = characterSetName FROM Relational_Column WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Column_characterSetName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Column SET characterSetName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Column_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Column_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Column
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Column WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Column
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Column (_ID, isNullable, collationName, characterSetName)
         VALUES (@_ID, 'columnNoNulls', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Column
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Column
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Column
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnRefStructuredType_referencedTableType', 'Delete_Relational_ColumnRefStructuredType', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_ColumnOptionsColumnSet_optionScopeColumnSet', 'Delete_Relational_ColumnOptionsColumnSet', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Column WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Column
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column
   @_ID INT
AS
   SELECT Relational_Column._ID AS _ID,
          Relational_Column.[precision] AS [precision],
          Relational_Column.scale AS scale,
          Relational_Column.isNullable AS isNullable,
          Relational_Column.length AS length,
          Relational_Column.collationName AS collationName,
          Relational_Column.characterSetName AS characterSetName,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Column,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relational_Column._ID = @_ID
        AND Relational_Column._ID = Core_Attribute._ID
        AND Relational_Column._ID = Core_StructuralFeature._ID
        AND Relational_Column._ID = Core_Feature._ID
        AND Relational_Column._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Column
AS
   SELECT Relational_Column._ID AS _ID,
          Relational_Column.[precision] AS [precision],
          Relational_Column.scale AS scale,
          Relational_Column.isNullable AS isNullable,
          Relational_Column.length AS length,
          Relational_Column.collationName AS collationName,
          Relational_Column.characterSetName AS characterSetName,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Column,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relational_Column._ID = Core_Attribute._ID
        AND Relational_Column._ID = Core_StructuralFeature._ID
        AND Relational_Column._ID = Core_Feature._ID
        AND Relational_Column._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Column
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Column._ID AS _ID,
             Relational_Column.[precision] AS [precision],
             Relational_Column.scale AS scale,
             Relational_Column.isNullable AS isNullable,
             Relational_Column.length AS length,
             Relational_Column.collationName AS collationName,
             Relational_Column.characterSetName AS characterSetName,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Column,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Relational_Column._ID = Core_Attribute._ID
           AND Relational_Column._ID = Core_StructuralFeature._ID
           AND Relational_Column._ID = Core_Feature._ID
           AND Relational_Column._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Column
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Column
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Column @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 83
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Column
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Column
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Column @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Column
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 83
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Column
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 83
   RETURN @@Error
GO


PRINT 'Class Relational.Procedure'
GO

CREATE TABLE Relational_Procedure
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(84, 'Relational.Procedure')
GO

CREATE PROCEDURE Get_Relational_Procedure_type
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_Procedure.type
      FROM Relational_Procedure
      WHERE Relational_Procedure._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Procedure_type
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_Procedure
      SET type = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_ProcedureType WHERE _EnumLiteral = @_Value)
      WHERE Relational_Procedure._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Procedure_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_Method_body @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Procedure_body
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_Method_body @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_isQuery
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_BehavioralFeature_isQuery @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Procedure_isQuery
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_BehavioralFeature_isQuery @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Procedure_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Procedure_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Procedure_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Procedure
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Procedure WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Procedure
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Method @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Procedure (_ID, type)
         VALUES (@_ID, 'procedure')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Procedure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Procedure
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Procedure
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Procedure WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Behavioral_Method @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Procedure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure
   @_ID INT
AS
   SELECT Relational_Procedure._ID AS _ID,
          Relational_Procedure.type AS type,
          Behavioral_Method.body_ID AS body_ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Procedure,
           Behavioral_Method,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relational_Procedure._ID = @_ID
        AND Relational_Procedure._ID = Behavioral_Method._ID
        AND Relational_Procedure._ID = Behavioral_BehavioralFeature._ID
        AND Relational_Procedure._ID = Core_Feature._ID
        AND Relational_Procedure._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Procedure
AS
   SELECT Relational_Procedure._ID AS _ID,
          Relational_Procedure.type AS type,
          Behavioral_Method.body_ID AS body_ID,
          Behavioral_BehavioralFeature.isQuery AS isQuery,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Procedure,
           Behavioral_Method,
           Behavioral_BehavioralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Relational_Procedure._ID = Behavioral_Method._ID
        AND Relational_Procedure._ID = Behavioral_BehavioralFeature._ID
        AND Relational_Procedure._ID = Core_Feature._ID
        AND Relational_Procedure._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Procedure
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Procedure._ID AS _ID,
             Relational_Procedure.type AS type,
             Behavioral_Method.body_ID AS body_ID,
             Behavioral_BehavioralFeature.isQuery AS isQuery,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Procedure,
              Behavioral_Method,
              Behavioral_BehavioralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Relational_Procedure._ID = Behavioral_Method._ID
           AND Relational_Procedure._ID = Behavioral_BehavioralFeature._ID
           AND Relational_Procedure._ID = Core_Feature._ID
           AND Relational_Procedure._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Procedure
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Procedure
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Procedure @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 84
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Procedure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Procedure
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Procedure @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Procedure
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 84
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Procedure
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 84
   RETURN @@Error
GO


PRINT 'Class Relational.Trigger'
GO

CREATE TABLE Relational_Trigger
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,eventManipulation VARCHAR(128) NOT NULL
   ,actionCondition_ID INT NOT NULL FOREIGN KEY REFERENCES Core_BooleanExpression(_ID)
   ,actionStatement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   ,actionOrientation VARCHAR(128) NOT NULL
   ,conditionTiming VARCHAR(128) NOT NULL
   ,conditionReferenceNewTable VARCHAR(256) NOT NULL
   ,conditionReferenceOldTable VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(85, 'Relational.Trigger')
GO

CREATE PROCEDURE Get_Relational_Trigger_eventManipulation
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_Trigger.eventManipulation
      FROM Relational_Trigger
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_eventManipulation
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_Trigger
      SET eventManipulation = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_EventManipulationType WHERE _EnumLiteral = @_Value)
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_actionCondition
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = actionCondition_ID FROM Relational_Trigger WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_actionCondition
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Relational_Trigger SET actionCondition_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_actionStatement
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = actionStatement_ID FROM Relational_Trigger WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_actionStatement
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Relational_Trigger SET actionStatement_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_actionOrientation
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_Trigger.actionOrientation
      FROM Relational_Trigger
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_actionOrientation
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_Trigger
      SET actionOrientation = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_ActionOrientationType WHERE _EnumLiteral = @_Value)
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_conditionTiming
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_Trigger.conditionTiming
      FROM Relational_Trigger
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_conditionTiming
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_Trigger
      SET conditionTiming = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_ConditionTimingType WHERE _EnumLiteral = @_Value)
      WHERE Relational_Trigger._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_conditionReferenceNewTable
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = conditionReferenceNewTable FROM Relational_Trigger WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_conditionReferenceNewTable
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Trigger SET conditionReferenceNewTable = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_conditionReferenceOldTable
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = conditionReferenceOldTable FROM Relational_Trigger WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_Trigger_conditionReferenceOldTable
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_Trigger SET conditionReferenceOldTable = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_Trigger_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Trigger_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Trigger_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Trigger
   @_ID INT OUTPUT
AS
   DECLARE @actionCondition_ID INT
   DECLARE @actionStatement_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Trigger WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Trigger
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_BooleanExpression @actionCondition_ID OUTPUT
      IF @Error = 0
         EXECUTE @Error = Create_Core_ProcedureExpression @actionStatement_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Relational_Trigger (_ID, eventManipulation, actionCondition_ID, actionStatement_ID, actionOrientation, conditionTiming, conditionReferenceNewTable, conditionReferenceOldTable)
            VALUES (@_ID, 'insert', @actionCondition_ID, @actionStatement_ID, 'row', 'before', '', '')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Relational_Trigger
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Trigger
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @actionCondition_ID INT
   DECLARE @actionStatement_ID INT
   EXECUTE @Error = Get_Relational_Trigger_actionCondition @_ID, @actionCondition_ID OUTPUT
   IF @Error = 0
      EXECUTE @Error = Get_Relational_Trigger_actionStatement @_ID, @actionStatement_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Relational_Trigger
      SELECT @Error = @@Error
      IF @Error = 0 AND @actionCondition_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_BooleanExpression @actionCondition_ID
      IF @Error = 0 AND @actionStatement_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @actionStatement_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_TriggerUsingColumnSet_usedColumnSet', 'Delete_Relational_TriggerUsingColumnSet', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Relational_TableOwningTrigger_table', 'Delete_Relational_TableOwningTrigger', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Relational_Trigger WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Relational_Trigger
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger
   @_ID INT
AS
   SELECT Relational_Trigger._ID AS _ID,
          Relational_Trigger.eventManipulation AS eventManipulation,
          Relational_Trigger.actionCondition_ID AS actionCondition_ID,
          Relational_Trigger.actionStatement_ID AS actionStatement_ID,
          Relational_Trigger.actionOrientation AS actionOrientation,
          Relational_Trigger.conditionTiming AS conditionTiming,
          Relational_Trigger.conditionReferenceNewTable AS conditionReferenceNewTable,
          Relational_Trigger.conditionReferenceOldTable AS conditionReferenceOldTable,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Trigger,
           Core_ModelElement
      WHERE Relational_Trigger._ID = @_ID
        AND Relational_Trigger._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Trigger
AS
   SELECT Relational_Trigger._ID AS _ID,
          Relational_Trigger.eventManipulation AS eventManipulation,
          Relational_Trigger.actionCondition_ID AS actionCondition_ID,
          Relational_Trigger.actionStatement_ID AS actionStatement_ID,
          Relational_Trigger.actionOrientation AS actionOrientation,
          Relational_Trigger.conditionTiming AS conditionTiming,
          Relational_Trigger.conditionReferenceNewTable AS conditionReferenceNewTable,
          Relational_Trigger.conditionReferenceOldTable AS conditionReferenceOldTable,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Trigger,
           Core_ModelElement
      WHERE Relational_Trigger._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Trigger
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Trigger._ID AS _ID,
             Relational_Trigger.eventManipulation AS eventManipulation,
             Relational_Trigger.actionCondition_ID AS actionCondition_ID,
             Relational_Trigger.actionStatement_ID AS actionStatement_ID,
             Relational_Trigger.actionOrientation AS actionOrientation,
             Relational_Trigger.conditionTiming AS conditionTiming,
             Relational_Trigger.conditionReferenceNewTable AS conditionReferenceNewTable,
             Relational_Trigger.conditionReferenceOldTable AS conditionReferenceOldTable,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Trigger,
              Core_ModelElement
         WHERE Relational_Trigger._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Trigger
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Trigger
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Trigger @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 85
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Trigger
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Trigger
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Trigger @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Trigger
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 85
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Trigger
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 85
   RETURN @@Error
GO


PRINT 'Class Relational.SQLIndex'
GO

CREATE TABLE Relational_SQLIndex
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,filterCondition VARCHAR(256) NOT NULL
   ,isNullable BIT NOT NULL
   ,autoUpdate BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(86, 'Relational.SQLIndex')
GO

CREATE PROCEDURE Get_Relational_SQLIndex_filterCondition
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = filterCondition FROM Relational_SQLIndex WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_filterCondition
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Relational_SQLIndex SET filterCondition = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_isNullable
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isNullable FROM Relational_SQLIndex WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_isNullable
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_SQLIndex SET isNullable = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_autoUpdate
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = autoUpdate FROM Relational_SQLIndex WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_autoUpdate
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Relational_SQLIndex SET autoUpdate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_isPartitioning
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_Index_isPartitioning @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_isPartitioning
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_KeysIndexes_Index_isPartitioning @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_isSorted
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_Index_isSorted @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_isSorted
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_KeysIndexes_Index_isSorted @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_isUnique
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_Index_isUnique @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_isUnique
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_KeysIndexes_Index_isUnique @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndex_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLIndex
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLIndex WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLIndex
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_Index @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLIndex (_ID, filterCondition, isNullable, autoUpdate)
         VALUES (@_ID, '', 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLIndex
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLIndex
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLIndex
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLIndex WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_KeysIndexes_Index @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLIndex
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex
   @_ID INT
AS
   SELECT Relational_SQLIndex._ID AS _ID,
          Relational_SQLIndex.filterCondition AS filterCondition,
          Relational_SQLIndex.isNullable AS isNullable,
          Relational_SQLIndex.autoUpdate AS autoUpdate,
          KeysIndexes_Index.isPartitioning AS isPartitioning,
          KeysIndexes_Index.isSorted AS isSorted,
          KeysIndexes_Index.isUnique AS isUnique,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLIndex,
           KeysIndexes_Index,
           Core_ModelElement
      WHERE Relational_SQLIndex._ID = @_ID
        AND Relational_SQLIndex._ID = KeysIndexes_Index._ID
        AND Relational_SQLIndex._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLIndex
AS
   SELECT Relational_SQLIndex._ID AS _ID,
          Relational_SQLIndex.filterCondition AS filterCondition,
          Relational_SQLIndex.isNullable AS isNullable,
          Relational_SQLIndex.autoUpdate AS autoUpdate,
          KeysIndexes_Index.isPartitioning AS isPartitioning,
          KeysIndexes_Index.isSorted AS isSorted,
          KeysIndexes_Index.isUnique AS isUnique,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLIndex,
           KeysIndexes_Index,
           Core_ModelElement
      WHERE Relational_SQLIndex._ID = KeysIndexes_Index._ID
        AND Relational_SQLIndex._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndex
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLIndex._ID AS _ID,
             Relational_SQLIndex.filterCondition AS filterCondition,
             Relational_SQLIndex.isNullable AS isNullable,
             Relational_SQLIndex.autoUpdate AS autoUpdate,
             KeysIndexes_Index.isPartitioning AS isPartitioning,
             KeysIndexes_Index.isSorted AS isSorted,
             KeysIndexes_Index.isUnique AS isUnique,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLIndex,
              KeysIndexes_Index,
              Core_ModelElement
         WHERE Relational_SQLIndex._ID = KeysIndexes_Index._ID
           AND Relational_SQLIndex._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLIndex
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_SQLIndex
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLIndex @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 86
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_SQLIndex
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLIndex
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLIndex @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLIndex
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 86
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLIndex
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 86
   RETURN @@Error
GO


PRINT 'Class Relational.UniqueConstraint'
GO

CREATE TABLE Relational_UniqueConstraint
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,deferrability VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(87, 'Relational.UniqueConstraint')
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_deferrability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_UniqueConstraint.deferrability
      FROM Relational_UniqueConstraint
      WHERE Relational_UniqueConstraint._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_UniqueConstraint_deferrability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_UniqueConstraint
      SET deferrability = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_DeferrabilityType WHERE _EnumLiteral = @_Value)
      WHERE Relational_UniqueConstraint._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_UniqueConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_UniqueConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_UniqueConstraint
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_UniqueConstraint WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_UniqueConstraint
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_UniqueKey @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_UniqueConstraint (_ID, deferrability)
         VALUES (@_ID, 'initiallyDeferred')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_UniqueConstraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_UniqueConstraint
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_UniqueConstraint
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (90)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_UniqueConstraint WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_KeysIndexes_UniqueKey @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_UniqueConstraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint
   @_ID INT
AS
   SELECT Relational_UniqueConstraint._ID AS _ID,
          Relational_UniqueConstraint.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_UniqueConstraint,
           Core_ModelElement
      WHERE Relational_UniqueConstraint._ID = @_ID
        AND Relational_UniqueConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_UniqueConstraint
AS
   SELECT Relational_UniqueConstraint._ID AS _ID,
          Relational_UniqueConstraint.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_UniqueConstraint,
           Core_ModelElement
      WHERE Relational_UniqueConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_UniqueConstraint._ID AS _ID,
             Relational_UniqueConstraint.deferrability AS deferrability,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_UniqueConstraint,
              Core_ModelElement
         WHERE Relational_UniqueConstraint._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_UniqueConstraint
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_U_E17483780EE0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_UniqueConstraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 87
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_U_E17483780EE0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_UniqueConstraint
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_UniqueConstraint @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_UniqueConstraint
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (87, 90)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_UniqueConstraint
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 87
   RETURN @@Error
GO


PRINT 'Class Relational.ForeignKey'
GO

CREATE TABLE Relational_ForeignKey
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,deleteRule VARCHAR(128) NOT NULL
   ,updateRule VARCHAR(128) NOT NULL
   ,deferrability VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(88, 'Relational.ForeignKey')
GO

CREATE PROCEDURE Get_Relational_ForeignKey_deleteRule
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_ForeignKey.deleteRule
      FROM Relational_ForeignKey
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_ForeignKey_deleteRule
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_ForeignKey
      SET deleteRule = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_ReferentialRuleType WHERE _EnumLiteral = @_Value)
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_updateRule
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_ForeignKey.updateRule
      FROM Relational_ForeignKey
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_ForeignKey_updateRule
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_ForeignKey
      SET updateRule = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_ReferentialRuleType WHERE _EnumLiteral = @_Value)
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_deferrability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_ForeignKey.deferrability
      FROM Relational_ForeignKey
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_ForeignKey_deferrability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_ForeignKey
      SET deferrability = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_DeferrabilityType WHERE _EnumLiteral = @_Value)
      WHERE Relational_ForeignKey._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ForeignKey_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ForeignKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_ForeignKey
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_ForeignKey WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_ForeignKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_KeyRelationship @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_ForeignKey (_ID, deleteRule, updateRule, deferrability)
         VALUES (@_ID, 'importedKeyNoAction', 'importedKeyNoAction', 'initiallyDeferred')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_ForeignKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_ForeignKey
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_ForeignKey
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_ForeignKey WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_KeysIndexes_KeyRelationship @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_ForeignKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey
   @_ID INT
AS
   SELECT Relational_ForeignKey._ID AS _ID,
          Relational_ForeignKey.deleteRule AS deleteRule,
          Relational_ForeignKey.updateRule AS updateRule,
          Relational_ForeignKey.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ForeignKey,
           Core_ModelElement
      WHERE Relational_ForeignKey._ID = @_ID
        AND Relational_ForeignKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_ForeignKey
AS
   SELECT Relational_ForeignKey._ID AS _ID,
          Relational_ForeignKey.deleteRule AS deleteRule,
          Relational_ForeignKey.updateRule AS updateRule,
          Relational_ForeignKey.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ForeignKey,
           Core_ModelElement
      WHERE Relational_ForeignKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ForeignKey
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_ForeignKey._ID AS _ID,
             Relational_ForeignKey.deleteRule AS deleteRule,
             Relational_ForeignKey.updateRule AS updateRule,
             Relational_ForeignKey.deferrability AS deferrability,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_ForeignKey,
              Core_ModelElement
         WHERE Relational_ForeignKey._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_ForeignKey
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_ForeignKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_ForeignKey @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 88
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_ForeignKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ForeignKey
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_ForeignKey @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_ForeignKey
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 88
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_ForeignKey
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 88
   RETURN @@Error
GO


PRINT 'Class Relational.SQLIndexColumn'
GO

CREATE TABLE Relational_SQLIndexColumn
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(89, 'Relational.SQLIndexColumn')
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_isAscending
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_IndexedFeature_isAscending @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndexColumn_isAscending
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_KeysIndexes_IndexedFeature_isAscending @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndexColumn_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLIndexColumn_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLIndexColumn
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLIndexColumn WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLIndexColumn
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_KeysIndexes_IndexedFeature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLIndexColumn (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLIndexColumn
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLIndexColumn
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLIndexColumn
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLIndexColumn WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_KeysIndexes_IndexedFeature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLIndexColumn
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn
   @_ID INT
AS
   SELECT Relational_SQLIndexColumn._ID AS _ID,
          KeysIndexes_IndexedFeature.isAscending AS isAscending,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLIndexColumn,
           KeysIndexes_IndexedFeature,
           Core_ModelElement
      WHERE Relational_SQLIndexColumn._ID = @_ID
        AND Relational_SQLIndexColumn._ID = KeysIndexes_IndexedFeature._ID
        AND Relational_SQLIndexColumn._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLIndexColumn
AS
   SELECT Relational_SQLIndexColumn._ID AS _ID,
          KeysIndexes_IndexedFeature.isAscending AS isAscending,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLIndexColumn,
           KeysIndexes_IndexedFeature,
           Core_ModelElement
      WHERE Relational_SQLIndexColumn._ID = KeysIndexes_IndexedFeature._ID
        AND Relational_SQLIndexColumn._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndexColumn
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLIndexColumn._ID AS _ID,
             KeysIndexes_IndexedFeature.isAscending AS isAscending,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLIndexColumn,
              KeysIndexes_IndexedFeature,
              Core_ModelElement
         WHERE Relational_SQLIndexColumn._ID = KeysIndexes_IndexedFeature._ID
           AND Relational_SQLIndexColumn._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLIndexColumn
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_SQLIndexColumn
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLIndexColumn @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 89
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_SQLIndexColumn
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLIndexColumn
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLIndexColumn @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLIndexColumn
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 89
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLIndexColumn
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 89
   RETURN @@Error
GO


PRINT 'Class Relational.PrimaryKey'
GO

CREATE TABLE Relational_PrimaryKey
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(90, 'Relational.PrimaryKey')
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_deferrability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_UniqueConstraint_deferrability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_PrimaryKey_deferrability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Relational_UniqueConstraint_deferrability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_PrimaryKey_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_PrimaryKey_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_PrimaryKey
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_PrimaryKey WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_PrimaryKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_UniqueConstraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_PrimaryKey (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_PrimaryKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_PrimaryKey
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_PrimaryKey
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_PrimaryKey WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Relational_UniqueConstraint @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_PrimaryKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey
   @_ID INT
AS
   SELECT Relational_PrimaryKey._ID AS _ID,
          Relational_UniqueConstraint.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_PrimaryKey,
           Relational_UniqueConstraint,
           Core_ModelElement
      WHERE Relational_PrimaryKey._ID = @_ID
        AND Relational_PrimaryKey._ID = Relational_UniqueConstraint._ID
        AND Relational_PrimaryKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_PrimaryKey
AS
   SELECT Relational_PrimaryKey._ID AS _ID,
          Relational_UniqueConstraint.deferrability AS deferrability,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_PrimaryKey,
           Relational_UniqueConstraint,
           Core_ModelElement
      WHERE Relational_PrimaryKey._ID = Relational_UniqueConstraint._ID
        AND Relational_PrimaryKey._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_PrimaryKey._ID AS _ID,
             Relational_UniqueConstraint.deferrability AS deferrability,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_PrimaryKey,
              Relational_UniqueConstraint,
              Core_ModelElement
         WHERE Relational_PrimaryKey._ID = Relational_UniqueConstraint._ID
           AND Relational_PrimaryKey._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_PrimaryKey
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_PrimaryKey
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_PrimaryKey @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 90
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_PrimaryKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_PrimaryKey
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_PrimaryKey @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_PrimaryKey
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 90
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_PrimaryKey
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 90
   RETURN @@Error
GO


PRINT 'Class Relational.Row'
GO

CREATE TABLE Relational_Row
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(91, 'Relational.Row')
GO

CREATE PROCEDURE Get_Relational_Row_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Row_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_Row_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_Row
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_Row WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_Row
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Object @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_Row (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_Row
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_Row
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_Row
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_Row WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Object @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_Row
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row
   @_ID INT
AS
   SELECT Relational_Row._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Row,
           Core_ModelElement
      WHERE Relational_Row._ID = @_ID
        AND Relational_Row._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_Row
AS
   SELECT Relational_Row._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_Row,
           Core_ModelElement
      WHERE Relational_Row._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Row
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_Row._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_Row,
              Core_ModelElement
         WHERE Relational_Row._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_Row
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_Row
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_Row @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 91
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_Row
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_Row
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_Row @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_Row
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 91
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_Row
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 91
   RETURN @@Error
GO


PRINT 'Class Relational.ColumnValue'
GO

CREATE TABLE Relational_ColumnValue
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(92, 'Relational.ColumnValue')
GO

CREATE PROCEDURE Get_Relational_ColumnValue_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_DataValue_value @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnValue_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Instance_DataValue_value @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnValue_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_ColumnValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_ColumnValue
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_ColumnValue WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_ColumnValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_DataValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_ColumnValue (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_ColumnValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_ColumnValue
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_ColumnValue
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_ColumnValue WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_DataValue @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_ColumnValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue
   @_ID INT
AS
   SELECT Relational_ColumnValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ColumnValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Relational_ColumnValue._ID = @_ID
        AND Relational_ColumnValue._ID = Instance_DataValue._ID
        AND Relational_ColumnValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_ColumnValue
AS
   SELECT Relational_ColumnValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_ColumnValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Relational_ColumnValue._ID = Instance_DataValue._ID
        AND Relational_ColumnValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnValue
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_ColumnValue._ID AS _ID,
             Instance_DataValue.[value] AS [value],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_ColumnValue,
              Instance_DataValue,
              Core_ModelElement
         WHERE Relational_ColumnValue._ID = Instance_DataValue._ID
           AND Relational_ColumnValue._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_ColumnValue
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_ColumnValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_ColumnValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 92
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_ColumnValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ColumnValue
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_ColumnValue @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_ColumnValue
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 92
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_ColumnValue
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 92
   RETURN @@Error
GO


PRINT 'Class Relational.CheckConstraint'
GO

CREATE TABLE Relational_CheckConstraint
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,deferrability VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(93, 'Relational.CheckConstraint')
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_deferrability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Relational_CheckConstraint.deferrability
      FROM Relational_CheckConstraint
      WHERE Relational_CheckConstraint._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Relational_CheckConstraint_deferrability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Relational_CheckConstraint
      SET deferrability = 
          (SELECT _EnumLiteral FROM Relational_Enumerations_DeferrabilityType WHERE _EnumLiteral = @_Value)
      WHERE Relational_CheckConstraint._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Constraint_body @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_CheckConstraint_body
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Constraint_body @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_CheckConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_CheckConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_CheckConstraint
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_CheckConstraint WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_CheckConstraint
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Constraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_CheckConstraint (_ID, deferrability)
         VALUES (@_ID, 'initiallyDeferred')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_CheckConstraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_CheckConstraint
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_CheckConstraint
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_CheckConstraint WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Constraint @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_CheckConstraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint
   @_ID INT
AS
   SELECT Relational_CheckConstraint._ID AS _ID,
          Relational_CheckConstraint.deferrability AS deferrability,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_CheckConstraint,
           Core_Constraint,
           Core_ModelElement
      WHERE Relational_CheckConstraint._ID = @_ID
        AND Relational_CheckConstraint._ID = Core_Constraint._ID
        AND Relational_CheckConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_CheckConstraint
AS
   SELECT Relational_CheckConstraint._ID AS _ID,
          Relational_CheckConstraint.deferrability AS deferrability,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_CheckConstraint,
           Core_Constraint,
           Core_ModelElement
      WHERE Relational_CheckConstraint._ID = Core_Constraint._ID
        AND Relational_CheckConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_CheckConstraint
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_CheckConstraint._ID AS _ID,
             Relational_CheckConstraint.deferrability AS deferrability,
             Core_Constraint.body_ID AS body_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_CheckConstraint,
              Core_Constraint,
              Core_ModelElement
         WHERE Relational_CheckConstraint._ID = Core_Constraint._ID
           AND Relational_CheckConstraint._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_CheckConstraint
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_C_E7F4FD62DFF0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_CheckConstraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 93
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_C_E7F4FD62DFF0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_CheckConstraint
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_CheckConstraint @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_CheckConstraint
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 93
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_CheckConstraint
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 93
   RETURN @@Error
GO


PRINT 'Class Relational.RowSet'
GO

CREATE TABLE Relational_RowSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(94, 'Relational.RowSet')
GO

CREATE PROCEDURE Get_Relational_RowSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_RowSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_RowSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_RowSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_RowSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_RowSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Extent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_RowSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_RowSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_RowSet
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_RowSet
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_RowSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Extent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_RowSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet
   @_ID INT
AS
   SELECT Relational_RowSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_RowSet,
           Core_ModelElement
      WHERE Relational_RowSet._ID = @_ID
        AND Relational_RowSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_RowSet
AS
   SELECT Relational_RowSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_RowSet,
           Core_ModelElement
      WHERE Relational_RowSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_RowSet._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_RowSet,
              Core_ModelElement
         WHERE Relational_RowSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_RowSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_RowSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_RowSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 94
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_RowSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_RowSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_RowSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_RowSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 94
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_RowSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 94
   RETURN @@Error
GO


PRINT 'Class Relational.SQLParameter'
GO

CREATE TABLE Relational_SQLParameter
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(95, 'Relational.SQLParameter')
GO

CREATE PROCEDURE Get_Relational_SQLParameter_defaultValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_Parameter_defaultValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLParameter_defaultValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_Parameter_defaultValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_kind
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_Parameter_kind @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLParameter_kind
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Behavioral_Parameter_kind @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLParameter_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Relational_SQLParameter_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Relational_SQLParameter
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Relational_SQLParameter WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Relational_SQLParameter
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Parameter @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Relational_SQLParameter (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Relational_SQLParameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Relational_SQLParameter
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Relational_SQLParameter
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Relational_SQLParameter WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Behavioral_Parameter @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Relational_SQLParameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter
   @_ID INT
AS
   SELECT Relational_SQLParameter._ID AS _ID,
          Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
          Behavioral_Parameter.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLParameter,
           Behavioral_Parameter,
           Core_ModelElement
      WHERE Relational_SQLParameter._ID = @_ID
        AND Relational_SQLParameter._ID = Behavioral_Parameter._ID
        AND Relational_SQLParameter._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Relational_SQLParameter
AS
   SELECT Relational_SQLParameter._ID AS _ID,
          Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
          Behavioral_Parameter.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Relational_SQLParameter,
           Behavioral_Parameter,
           Core_ModelElement
      WHERE Relational_SQLParameter._ID = Behavioral_Parameter._ID
        AND Relational_SQLParameter._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLParameter
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Relational_SQLParameter._ID AS _ID,
             Behavioral_Parameter.defaultValue_ID AS defaultValue_ID,
             Behavioral_Parameter.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Relational_SQLParameter,
              Behavioral_Parameter,
              Core_ModelElement
         WHERE Relational_SQLParameter._ID = Behavioral_Parameter._ID
           AND Relational_SQLParameter._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_SQLParameter
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Relational_SQLParameter
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Relational_SQLParameter @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 95
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Relational_SQLParameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_SQLParameter
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Relational_SQLParameter @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Relational_SQLParameter
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 95
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Relational_SQLParameter
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 95
   RETURN @@Error
GO


--
-- Record Classes
--

PRINT 'Class Record.Field'
GO

CREATE TABLE Record_Field
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,length INT
   ,[precision] INT
   ,scale INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(96, 'Record.Field')
GO

CREATE PROCEDURE Get_Record_Field_length
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = length FROM Record_Field WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_Field_length
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_Field SET length = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_Field_precision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [precision] FROM Record_Field WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_Field_precision
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_Field SET [precision] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_Field_scale
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = scale FROM Record_Field WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_Field_scale
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_Field SET scale = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_Field_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Field_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_Field
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_Field WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_Field
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_Field (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_Field
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_Field
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_Field
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (98)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Record_Field WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_Field
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field
   @_ID INT
AS
   SELECT Record_Field._ID AS _ID,
          Record_Field.length AS length,
          Record_Field.[precision] AS [precision],
          Record_Field.scale AS scale,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Field,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Record_Field._ID = @_ID
        AND Record_Field._ID = Core_Attribute._ID
        AND Record_Field._ID = Core_StructuralFeature._ID
        AND Record_Field._ID = Core_Feature._ID
        AND Record_Field._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_Field
AS
   SELECT Record_Field._ID AS _ID,
          Record_Field.length AS length,
          Record_Field.[precision] AS [precision],
          Record_Field.scale AS scale,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Field,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Record_Field._ID = Core_Attribute._ID
        AND Record_Field._ID = Core_StructuralFeature._ID
        AND Record_Field._ID = Core_Feature._ID
        AND Record_Field._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Field
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_Field._ID AS _ID,
             Record_Field.length AS length,
             Record_Field.[precision] AS [precision],
             Record_Field.scale AS scale,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_Field,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Record_Field._ID = Core_Attribute._ID
           AND Record_Field._ID = Core_StructuralFeature._ID
           AND Record_Field._ID = Core_Feature._ID
           AND Record_Field._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_Field
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_Field
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_Field @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 96
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_Field
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_Field
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_Field @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_Field
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (96, 98)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_Field
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 96
   RETURN @@Error
GO


PRINT 'Class Record.RecordDef'
GO

CREATE TABLE Record_RecordDef
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,fieldDelimiter VARCHAR(256) NOT NULL
   ,isFixedWidth BIT NOT NULL
   ,textDelimiter VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(97, 'Record.RecordDef')
GO

CREATE PROCEDURE Get_Record_RecordDef_fieldDelimiter
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = fieldDelimiter FROM Record_RecordDef WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordDef_fieldDelimiter
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Record_RecordDef SET fieldDelimiter = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordDef_isFixedWidth
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isFixedWidth FROM Record_RecordDef WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordDef_isFixedWidth
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Record_RecordDef SET isFixedWidth = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordDef_textDelimiter
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = textDelimiter FROM Record_RecordDef WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordDef_textDelimiter
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Record_RecordDef SET textDelimiter = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordDef_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordDef_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordDef_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordDef_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_RecordDef
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_RecordDef WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_RecordDef
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_RecordDef (_ID, fieldDelimiter, isFixedWidth, textDelimiter)
         VALUES (@_ID, '', 0, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_RecordDef
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_RecordDef
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_RecordDef
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Record_RecordToFile_file', 'Delete_Record_RecordToFile', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Record_RecordDef WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_RecordDef
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef
   @_ID INT
AS
   SELECT Record_RecordDef._ID AS _ID,
          Record_RecordDef.fieldDelimiter AS fieldDelimiter,
          Record_RecordDef.isFixedWidth AS isFixedWidth,
          Record_RecordDef.textDelimiter AS textDelimiter,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordDef,
           Core_Classifier,
           Core_ModelElement
      WHERE Record_RecordDef._ID = @_ID
        AND Record_RecordDef._ID = Core_Classifier._ID
        AND Record_RecordDef._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_RecordDef
AS
   SELECT Record_RecordDef._ID AS _ID,
          Record_RecordDef.fieldDelimiter AS fieldDelimiter,
          Record_RecordDef.isFixedWidth AS isFixedWidth,
          Record_RecordDef.textDelimiter AS textDelimiter,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordDef,
           Core_Classifier,
           Core_ModelElement
      WHERE Record_RecordDef._ID = Core_Classifier._ID
        AND Record_RecordDef._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_RecordDef._ID AS _ID,
             Record_RecordDef.fieldDelimiter AS fieldDelimiter,
             Record_RecordDef.isFixedWidth AS isFixedWidth,
             Record_RecordDef.textDelimiter AS textDelimiter,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_RecordDef,
              Core_Classifier,
              Core_ModelElement
         WHERE Record_RecordDef._ID = Core_Classifier._ID
           AND Record_RecordDef._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_RecordDef
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_RecordDef
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_RecordDef @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 97
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_RecordDef
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_RecordDef
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_RecordDef @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_RecordDef
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 97
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_RecordDef
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 97
   RETURN @@Error
GO


PRINT 'Class Record.FixedOffsetField'
GO

CREATE TABLE Record_FixedOffsetField
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,offset INT NOT NULL
   ,offsetUnitBits INT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(98, 'Record.FixedOffsetField')
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_offset
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = offset FROM Record_FixedOffsetField WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_offset
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_FixedOffsetField SET offset = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_offsetUnitBits
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = offsetUnitBits FROM Record_FixedOffsetField WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_offsetUnitBits
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_FixedOffsetField SET offsetUnitBits = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_length
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Record_Field_length @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_length
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Record_Field_length @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_precision
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Record_Field_precision @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_precision
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Record_Field_precision @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_scale
    @_ID INT
   ,@_Value INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Record_Field_scale @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_scale
    @_ID INT
   ,@_Value INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Record_Field_scale @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FixedOffsetField_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_FixedOffsetField
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_FixedOffsetField WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_FixedOffsetField
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_Field @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_FixedOffsetField (_ID, offset, offsetUnitBits)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_FixedOffsetField
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_FixedOffsetField
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_FixedOffsetField
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Record_FixedOffsetField WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Record_Field @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_FixedOffsetField
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField
   @_ID INT
AS
   SELECT Record_FixedOffsetField._ID AS _ID,
          Record_FixedOffsetField.offset AS offset,
          Record_FixedOffsetField.offsetUnitBits AS offsetUnitBits,
          Record_Field.length AS length,
          Record_Field.[precision] AS [precision],
          Record_Field.scale AS scale,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_FixedOffsetField,
           Record_Field,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Record_FixedOffsetField._ID = @_ID
        AND Record_FixedOffsetField._ID = Record_Field._ID
        AND Record_FixedOffsetField._ID = Core_Attribute._ID
        AND Record_FixedOffsetField._ID = Core_StructuralFeature._ID
        AND Record_FixedOffsetField._ID = Core_Feature._ID
        AND Record_FixedOffsetField._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_FixedOffsetField
AS
   SELECT Record_FixedOffsetField._ID AS _ID,
          Record_FixedOffsetField.offset AS offset,
          Record_FixedOffsetField.offsetUnitBits AS offsetUnitBits,
          Record_Field.length AS length,
          Record_Field.[precision] AS [precision],
          Record_Field.scale AS scale,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_FixedOffsetField,
           Record_Field,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Record_FixedOffsetField._ID = Record_Field._ID
        AND Record_FixedOffsetField._ID = Core_Attribute._ID
        AND Record_FixedOffsetField._ID = Core_StructuralFeature._ID
        AND Record_FixedOffsetField._ID = Core_Feature._ID
        AND Record_FixedOffsetField._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FixedOffsetField
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_FixedOffsetField._ID AS _ID,
             Record_FixedOffsetField.offset AS offset,
             Record_FixedOffsetField.offsetUnitBits AS offsetUnitBits,
             Record_Field.length AS length,
             Record_Field.[precision] AS [precision],
             Record_Field.scale AS scale,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_FixedOffsetField,
              Record_Field,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Record_FixedOffsetField._ID = Record_Field._ID
           AND Record_FixedOffsetField._ID = Core_Attribute._ID
           AND Record_FixedOffsetField._ID = Core_StructuralFeature._ID
           AND Record_FixedOffsetField._ID = Core_Feature._ID
           AND Record_FixedOffsetField._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_FixedOffsetField
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_FixedOffsetField
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_FixedOffsetField @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 98
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_FixedOffsetField
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_FixedOffsetField
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_FixedOffsetField @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_FixedOffsetField
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 98
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_FixedOffsetField
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 98
   RETURN @@Error
GO


PRINT 'Class Record.RecordFile'
GO

CREATE TABLE Record_RecordFile
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isSelfDescribing BIT NOT NULL
   ,recordDelimiter INT
   ,skipRecords INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(99, 'Record.RecordFile')
GO

CREATE PROCEDURE Get_Record_RecordFile_isSelfDescribing
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isSelfDescribing FROM Record_RecordFile WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordFile_isSelfDescribing
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Record_RecordFile SET isSelfDescribing = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordFile_recordDelimiter
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = recordDelimiter FROM Record_RecordFile WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordFile_recordDelimiter
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_RecordFile SET recordDelimiter = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordFile_skipRecords
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = skipRecords FROM Record_RecordFile WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Record_RecordFile_skipRecords
    @_ID INT
   ,@_Value INT
AS
   UPDATE Record_RecordFile SET skipRecords = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Record_RecordFile_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordFile_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordFile_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_RecordFile
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_RecordFile WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_RecordFile
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_RecordFile (_ID, isSelfDescribing)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_RecordFile
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_RecordFile
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_RecordFile
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Record_RecordToFile_record', 'Delete_Record_RecordToFile', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Record_RecordFile WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_RecordFile
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile
   @_ID INT
AS
   SELECT Record_RecordFile._ID AS _ID,
          Record_RecordFile.isSelfDescribing AS isSelfDescribing,
          Record_RecordFile.recordDelimiter AS recordDelimiter,
          Record_RecordFile.skipRecords AS skipRecords,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordFile,
           Core_ModelElement
      WHERE Record_RecordFile._ID = @_ID
        AND Record_RecordFile._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_RecordFile
AS
   SELECT Record_RecordFile._ID AS _ID,
          Record_RecordFile.isSelfDescribing AS isSelfDescribing,
          Record_RecordFile.recordDelimiter AS recordDelimiter,
          Record_RecordFile.skipRecords AS skipRecords,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordFile,
           Core_ModelElement
      WHERE Record_RecordFile._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_RecordFile._ID AS _ID,
             Record_RecordFile.isSelfDescribing AS isSelfDescribing,
             Record_RecordFile.recordDelimiter AS recordDelimiter,
             Record_RecordFile.skipRecords AS skipRecords,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_RecordFile,
              Core_ModelElement
         WHERE Record_RecordFile._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_RecordFile
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_RecordFile
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_RecordFile @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 99
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_RecordFile
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_RecordFile
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_RecordFile @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_RecordFile
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 99
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_RecordFile
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 99
   RETURN @@Error
GO


PRINT 'Class Record.FieldValue'
GO

CREATE TABLE Record_FieldValue
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(100, 'Record.FieldValue')
GO

CREATE PROCEDURE Get_Record_FieldValue_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_DataValue_value @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FieldValue_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Instance_DataValue_value @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FieldValue_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_FieldValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_FieldValue
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_FieldValue WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_FieldValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_DataValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_FieldValue (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_FieldValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_FieldValue
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_FieldValue
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Record_FieldValue WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_DataValue @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_FieldValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue
   @_ID INT
AS
   SELECT Record_FieldValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_FieldValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Record_FieldValue._ID = @_ID
        AND Record_FieldValue._ID = Instance_DataValue._ID
        AND Record_FieldValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_FieldValue
AS
   SELECT Record_FieldValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_FieldValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Record_FieldValue._ID = Instance_DataValue._ID
        AND Record_FieldValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FieldValue
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_FieldValue._ID AS _ID,
             Instance_DataValue.[value] AS [value],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_FieldValue,
              Instance_DataValue,
              Core_ModelElement
         WHERE Record_FieldValue._ID = Instance_DataValue._ID
           AND Record_FieldValue._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_FieldValue
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_FieldValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_FieldValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 100
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_FieldValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_FieldValue
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_FieldValue @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_FieldValue
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 100
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_FieldValue
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 100
   RETURN @@Error
GO


PRINT 'Class Record.Record'
GO

CREATE TABLE Record_Record
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(101, 'Record.Record')
GO

CREATE PROCEDURE Get_Record_Record_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Record_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Record_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_Record
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_Record WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_Record
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Object @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_Record (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_Record
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_Record
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_Record
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Record_Record WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Object @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_Record
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record
   @_ID INT
AS
   SELECT Record_Record._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Record,
           Core_ModelElement
      WHERE Record_Record._ID = @_ID
        AND Record_Record._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_Record
AS
   SELECT Record_Record._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Record,
           Core_ModelElement
      WHERE Record_Record._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Record
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_Record._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_Record,
              Core_ModelElement
         WHERE Record_Record._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_Record
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_Record
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_Record @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 101
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_Record
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_Record
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_Record @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_Record
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 101
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_Record
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 101
   RETURN @@Error
GO


PRINT 'Class Record.RecordSet'
GO

CREATE TABLE Record_RecordSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(102, 'Record.RecordSet')
GO

CREATE PROCEDURE Get_Record_RecordSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_RecordSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_RecordSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_RecordSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_RecordSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Extent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_RecordSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_RecordSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_RecordSet
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_RecordSet
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Record_RecordSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Extent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_RecordSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet
   @_ID INT
AS
   SELECT Record_RecordSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordSet,
           Core_ModelElement
      WHERE Record_RecordSet._ID = @_ID
        AND Record_RecordSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_RecordSet
AS
   SELECT Record_RecordSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_RecordSet,
           Core_ModelElement
      WHERE Record_RecordSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_RecordSet._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_RecordSet,
              Core_ModelElement
         WHERE Record_RecordSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_RecordSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_RecordSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_RecordSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 102
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_RecordSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_RecordSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_RecordSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_RecordSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 102
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_RecordSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 102
   RETURN @@Error
GO


PRINT 'Class Record.Group'
GO

CREATE TABLE Record_Group
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(103, 'Record.Group')
GO

CREATE PROCEDURE Get_Record_Group_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Group_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Group_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Record_Group_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Record_Group
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Record_Group WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Record_Group
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Record_Group (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Record_Group
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Record_Group
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Record_Group
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Record_Group WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Record_Group
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group
   @_ID INT
AS
   SELECT Record_Group._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Group,
           Core_Classifier,
           Core_ModelElement
      WHERE Record_Group._ID = @_ID
        AND Record_Group._ID = Core_Classifier._ID
        AND Record_Group._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Record_Group
AS
   SELECT Record_Group._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Record_Group,
           Core_Classifier,
           Core_ModelElement
      WHERE Record_Group._ID = Core_Classifier._ID
        AND Record_Group._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Record_Group._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Record_Group,
              Core_Classifier,
              Core_ModelElement
         WHERE Record_Group._ID = Core_Classifier._ID
           AND Record_Group._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_Group
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Record_Group
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Record_Group @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 103
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Record_Group
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_Group
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Record_Group @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Record_Group
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 103
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Record_Group
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 103
   RETURN @@Error
GO


--
-- Multidimensional Classes
--

PRINT 'Class Multidimensional.Dimension'
GO

CREATE TABLE Multidimensional_Dimension
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(104, 'Multidimensional.Dimension')
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Dimension_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Dimension_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Dimension_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_Dimension
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_Dimension WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensional_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_Dimension (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensional_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_Dimension
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimensional_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimensionedObject', 'Delete_Multidimensional_DimensionsReferenceDimensionedObjects', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_CompositesReferenceComponents_component', 'Delete_Multidimensional_CompositesReferenceComponents', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_CompositesReferenceComponents_composite', 'Delete_Multidimensional_CompositesReferenceComponents', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_MDSchemaOwnsDimensions_schema', 'Delete_Multidimensional_MDSchemaOwnsDimensions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_DimensionOwnsMemberSets_memberSet', 'Delete_Multidimensional_DimensionOwnsMemberSets', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_Dimension WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimensional_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension
   @_ID INT
AS
   SELECT Multidimensional_Dimension._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Dimension,
           Core_Classifier,
           Core_ModelElement
      WHERE Multidimensional_Dimension._ID = @_ID
        AND Multidimensional_Dimension._ID = Core_Classifier._ID
        AND Multidimensional_Dimension._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_Dimension
AS
   SELECT Multidimensional_Dimension._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Dimension,
           Core_Classifier,
           Core_ModelElement
      WHERE Multidimensional_Dimension._ID = Core_Classifier._ID
        AND Multidimensional_Dimension._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_Dimension._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_Dimension,
              Core_Classifier,
              Core_ModelElement
         WHERE Multidimensional_Dimension._ID = Core_Classifier._ID
           AND Multidimensional_Dimension._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_Dimension
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensi_1B38DF61C02B
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_Dimension @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 104
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensi_1B38DF61C02B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_Dimension
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_Dimension @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_Dimension
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 104
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_Dimension
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 104
   RETURN @@Error
GO


PRINT 'Class Multidimensional.DimensionedObject'
GO

CREATE TABLE Multidimensional_DimensionedObject
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(105, 'Multidimensional.DimensionedObject')
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_DimensionedObject_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_DimensionedObject
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_DimensionedObject WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensiona_4C99009613AF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_DimensionedObject (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensiona_4C99009613AF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_DimensionedObject
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimension_392ABD48AA1E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimension', 'Delete_Multidimensional_DimensionsReferenceDimensionedObjects', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_MDSchemaOwnsDimensionedObjects_schema', 'Delete_Multidimensional_MDSchemaOwnsDimensionedObjects', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_DimensionedObject WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimension_392ABD48AA1E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject
   @_ID INT
AS
   SELECT Multidimensional_DimensionedObject._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_DimensionedObject,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Multidimensional_DimensionedObject._ID = @_ID
        AND Multidimensional_DimensionedObject._ID = Core_Attribute._ID
        AND Multidimensional_DimensionedObject._ID = Core_StructuralFeature._ID
        AND Multidimensional_DimensionedObject._ID = Core_Feature._ID
        AND Multidimensional_DimensionedObject._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_DimensionedObject
AS
   SELECT Multidimensional_DimensionedObject._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_DimensionedObject,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Multidimensional_DimensionedObject._ID = Core_Attribute._ID
        AND Multidimensional_DimensionedObject._ID = Core_StructuralFeature._ID
        AND Multidimensional_DimensionedObject._ID = Core_Feature._ID
        AND Multidimensional_DimensionedObject._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionedObject
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_DimensionedObject._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_DimensionedObject,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Multidimensional_DimensionedObject._ID = Core_Attribute._ID
           AND Multidimensional_DimensionedObject._ID = Core_StructuralFeature._ID
           AND Multidimensional_DimensionedObject._ID = Core_Feature._ID
           AND Multidimensional_DimensionedObject._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_DimensionedObject
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensi_11A735FB4762
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_DimensionedObject @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 105
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensi_11A735FB4762
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_DimensionedObject
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_DimensionedObject @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_DimensionedObject
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 105
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_DimensionedObject
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 105
   RETURN @@Error
GO


PRINT 'Class Multidimensional.Member'
GO

CREATE TABLE Multidimensional_Member
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(106, 'Multidimensional.Member')
GO

CREATE PROCEDURE Get_Multidimensional_Member_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Member_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Member_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_Member
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_Member WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensional_Member
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Object @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_Member (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensional_Member
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_Member
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimensional_Member
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_Member WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Object @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimensional_Member
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member
   @_ID INT
AS
   SELECT Multidimensional_Member._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Member,
           Core_ModelElement
      WHERE Multidimensional_Member._ID = @_ID
        AND Multidimensional_Member._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_Member
AS
   SELECT Multidimensional_Member._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Member,
           Core_ModelElement
      WHERE Multidimensional_Member._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Member
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_Member._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_Member,
              Core_ModelElement
         WHERE Multidimensional_Member._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_Member
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensional_Member
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_Member @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 106
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensional_Member
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_Member
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_Member @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_Member
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 106
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_Member
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 106
   RETURN @@Error
GO


PRINT 'Class Multidimensional.MemberSet'
GO

CREATE TABLE Multidimensional_MemberSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(107, 'Multidimensional.MemberSet')
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_MemberSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_MemberSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_MemberSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_MemberSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensional_MemberSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Extent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_MemberSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensional_MemberSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_MemberSet
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimensional_MemberSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_DimensionOwnsMemberSets_dimension', 'Delete_Multidimensional_DimensionOwnsMemberSets', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_MemberSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Extent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimensional_MemberSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet
   @_ID INT
AS
   SELECT Multidimensional_MemberSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_MemberSet,
           Core_ModelElement
      WHERE Multidimensional_MemberSet._ID = @_ID
        AND Multidimensional_MemberSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_MemberSet
AS
   SELECT Multidimensional_MemberSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_MemberSet,
           Core_ModelElement
      WHERE Multidimensional_MemberSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_MemberSet._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_MemberSet,
              Core_ModelElement
         WHERE Multidimensional_MemberSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_MemberSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensi_9F68485A87F3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_MemberSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 107
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensi_9F68485A87F3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_MemberSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_MemberSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_MemberSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 107
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_MemberSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 107
   RETURN @@Error
GO


PRINT 'Class Multidimensional.MemberValue'
GO

CREATE TABLE Multidimensional_MemberValue
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(108, 'Multidimensional.MemberValue')
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_DataValue_value @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_MemberValue_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Instance_DataValue_value @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_MemberValue_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_MemberValue_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_MemberValue
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_MemberValue WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensional_MemberValue
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_DataValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_MemberValue (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensional_MemberValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_MemberValue
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimension_4A2354C511EE
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_MemberValue WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_DataValue @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimension_4A2354C511EE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue
   @_ID INT
AS
   SELECT Multidimensional_MemberValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_MemberValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Multidimensional_MemberValue._ID = @_ID
        AND Multidimensional_MemberValue._ID = Instance_DataValue._ID
        AND Multidimensional_MemberValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_MemberValue
AS
   SELECT Multidimensional_MemberValue._ID AS _ID,
          Instance_DataValue.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_MemberValue,
           Instance_DataValue,
           Core_ModelElement
      WHERE Multidimensional_MemberValue._ID = Instance_DataValue._ID
        AND Multidimensional_MemberValue._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberValue
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_MemberValue._ID AS _ID,
             Instance_DataValue.[value] AS [value],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_MemberValue,
              Instance_DataValue,
              Core_ModelElement
         WHERE Multidimensional_MemberValue._ID = Instance_DataValue._ID
           AND Multidimensional_MemberValue._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_MemberValue
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensi_DBF4B6742CDB
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_MemberValue @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 108
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensi_DBF4B6742CDB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_MemberValue
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_MemberValue @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_MemberValue
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 108
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_MemberValue
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 108
   RETURN @@Error
GO


PRINT 'Class Multidimensional.Schema'
GO

CREATE TABLE Multidimensional_Schema
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(109, 'Multidimensional.Schema')
GO

CREATE PROCEDURE Get_Multidimensional_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Multidimensional_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Multidimensional_Schema
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Multidimensional_Schema WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Multidimensional_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_Schema (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Multidimensional_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Multidimensional_Schema
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Multidimensional_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_MDSchemaOwnsDimensionedObjects_dimensionedObject', 'Delete_Multidimensional_MDSchemaOwnsDimensionedObjects', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Multidimensional_MDSchemaOwnsDimensions_dimension', 'Delete_Multidimensional_MDSchemaOwnsDimensions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Multidimensional_Schema WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Multidimensional_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema
   @_ID INT
AS
   SELECT Multidimensional_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Schema,
           Core_ModelElement
      WHERE Multidimensional_Schema._ID = @_ID
        AND Multidimensional_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Multidimensional_Schema
AS
   SELECT Multidimensional_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Multidimensional_Schema,
           Core_ModelElement
      WHERE Multidimensional_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Multidimensional_Schema._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Multidimensional_Schema,
              Core_ModelElement
         WHERE Multidimensional_Schema._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_Schema
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Multidimensional_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Multidimensional_Schema @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 109
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Multidimensional_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_Schema
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Multidimensional_Schema @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Multidimensional_Schema
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 109
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Multidimensional_Schema
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 109
   RETURN @@Error
GO


--
-- XML Classes
--

PRINT 'Class XML.Schema'
GO

CREATE TABLE XML_Schema
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,version VARCHAR(256) NOT NULL
   ,xmlNamespace VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(110, 'XML.Schema')
GO

CREATE PROCEDURE Get_XML_Schema_version
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = version FROM XML_Schema WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_Schema_version
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE XML_Schema SET version = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_Schema_xmlNamespace
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = xmlNamespace FROM XML_Schema WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_Schema_xmlNamespace
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE XML_Schema SET xmlNamespace = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Schema
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Schema WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Schema (_ID, version, xmlNamespace)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Schema
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Schema WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema
   @_ID INT
AS
   SELECT XML_Schema._ID AS _ID,
          XML_Schema.version AS version,
          XML_Schema.xmlNamespace AS xmlNamespace,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Schema,
           Core_ModelElement
      WHERE XML_Schema._ID = @_ID
        AND XML_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Schema
AS
   SELECT XML_Schema._ID AS _ID,
          XML_Schema.version AS version,
          XML_Schema.xmlNamespace AS xmlNamespace,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Schema,
           Core_ModelElement
      WHERE XML_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Schema._ID AS _ID,
             XML_Schema.version AS version,
             XML_Schema.xmlNamespace AS xmlNamespace,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Schema,
              Core_ModelElement
         WHERE XML_Schema._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Schema
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Schema @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 110
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Schema
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Schema @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Schema
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 110
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Schema
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 110
   RETURN @@Error
GO


PRINT 'Class XML.ElementType'
GO

CREATE TABLE XML_ElementType
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(111, 'XML.ElementType')
GO

CREATE PROCEDURE Get_XML_ElementType_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementType_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementType_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementType_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_ElementType
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_ElementType WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_ElementType (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_ElementType
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_ElementTypeContent_content', 'Delete_XML_ElementTypeContent', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_ElementType WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType
   @_ID INT
AS
   SELECT XML_ElementType._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementType,
           Core_Classifier,
           Core_ModelElement
      WHERE XML_ElementType._ID = @_ID
        AND XML_ElementType._ID = Core_Classifier._ID
        AND XML_ElementType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_ElementType
AS
   SELECT XML_ElementType._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementType,
           Core_Classifier,
           Core_ModelElement
      WHERE XML_ElementType._ID = Core_Classifier._ID
        AND XML_ElementType._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_ElementType._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_ElementType,
              Core_Classifier,
              Core_ModelElement
         WHERE XML_ElementType._ID = Core_Classifier._ID
           AND XML_ElementType._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_ElementType
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_ElementType @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 111
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_ElementType
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_ElementType @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_ElementType
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 111
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_ElementType
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 111
   RETURN @@Error
GO


PRINT 'Class XML.Attribute'
GO

CREATE TABLE XML_Attribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,defaultKind VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(112, 'XML.Attribute')
GO

CREATE PROCEDURE Get_XML_Attribute_defaultKind
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = XML_Attribute.defaultKind
      FROM XML_Attribute
      WHERE XML_Attribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_Attribute_defaultKind
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE XML_Attribute
      SET defaultKind = 
          (SELECT _EnumLiteral FROM XML_AttributeDefault WHERE _EnumLiteral = @_Value)
      WHERE XML_Attribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_Attribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Attribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Attribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Attribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Attribute (_ID, defaultKind)
         VALUES (@_ID, 'xml_required')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Attribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Attribute
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Attribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Attribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute
   @_ID INT
AS
   SELECT XML_Attribute._ID AS _ID,
          XML_Attribute.defaultKind AS defaultKind,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Attribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_Attribute._ID = @_ID
        AND XML_Attribute._ID = Core_Attribute._ID
        AND XML_Attribute._ID = Core_StructuralFeature._ID
        AND XML_Attribute._ID = Core_Feature._ID
        AND XML_Attribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Attribute
AS
   SELECT XML_Attribute._ID AS _ID,
          XML_Attribute.defaultKind AS defaultKind,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Attribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_Attribute._ID = Core_Attribute._ID
        AND XML_Attribute._ID = Core_StructuralFeature._ID
        AND XML_Attribute._ID = Core_Feature._ID
        AND XML_Attribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Attribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Attribute._ID AS _ID,
             XML_Attribute.defaultKind AS defaultKind,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Attribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE XML_Attribute._ID = Core_Attribute._ID
           AND XML_Attribute._ID = Core_StructuralFeature._ID
           AND XML_Attribute._ID = Core_Feature._ID
           AND XML_Attribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Attribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 112
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Attribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Attribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Attribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Attribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 112
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Attribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 112
   RETURN @@Error
GO


PRINT 'Class XML.Content'
GO

CREATE TABLE XML_Content
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(128) NOT NULL
   ,occurrence VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(113, 'XML.Content')
GO

CREATE PROCEDURE Get_XML_Content_type
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = XML_Content.type
      FROM XML_Content
      WHERE XML_Content._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_Content_type
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE XML_Content
      SET type = 
          (SELECT _EnumLiteral FROM XML_ContentType WHERE _EnumLiteral = @_Value)
      WHERE XML_Content._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_Content_occurrence
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = XML_Content.occurrence
      FROM XML_Content
      WHERE XML_Content._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_Content_occurrence
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE XML_Content
      SET occurrence = 
          (SELECT _EnumLiteral FROM XML_OccurrenceType WHERE _EnumLiteral = @_Value)
      WHERE XML_Content._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_Content_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Content_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Content_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Content
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Content WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Content
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Content (_ID, type, occurrence)
         VALUES (@_ID, 'xml_empty', 'xml_one')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Content
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Content
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Content
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (114, 115)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_ElementTypeContent_elementType', 'Delete_XML_ElementTypeContent', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_ContentElementTypeReference_ownedElementType', 'Delete_XML_ContentElementTypeReference', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Content WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Content
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content
   @_ID INT
AS
   SELECT XML_Content._ID AS _ID,
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Content,
           Core_ModelElement
      WHERE XML_Content._ID = @_ID
        AND XML_Content._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Content
AS
   SELECT XML_Content._ID AS _ID,
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Content,
           Core_ModelElement
      WHERE XML_Content._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Content._ID AS _ID,
             XML_Content.type AS type,
             XML_Content.occurrence AS occurrence,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Content,
              Core_ModelElement
         WHERE XML_Content._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Content
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Content
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Content @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 113
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Content
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Content
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Content @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Content
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (113, 114, 115)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Content
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 113
   RETURN @@Error
GO


PRINT 'Class XML.ElementContent'
GO

CREATE TABLE XML_ElementContent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[order] VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(114, 'XML.ElementContent')
GO

CREATE PROCEDURE Get_XML_ElementContent_order
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = XML_ElementContent.[order]
      FROM XML_ElementContent
      WHERE XML_ElementContent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_ElementContent_order
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE XML_ElementContent
      SET [order] = 
          (SELECT _EnumLiteral FROM XML_ElementOrderType WHERE _EnumLiteral = @_Value)
      WHERE XML_ElementContent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_ElementContent_type
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_Content_type @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementContent_type
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_XML_Content_type @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_occurrence
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_Content_occurrence @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementContent_occurrence
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_XML_Content_occurrence @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementContent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementContent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_ElementContent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_ElementContent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_ElementContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Content @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_ElementContent (_ID, [order])
         VALUES (@_ID, 'xml_choice')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_ElementContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_ElementContent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_ElementContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_OwnedElementContent_ownedContent', 'Delete_XML_OwnedElementContent', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_OwnedElementContent_ownerContent', 'Delete_XML_OwnedElementContent', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_ElementContent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_XML_Content @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_ElementContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent
   @_ID INT
AS
   SELECT XML_ElementContent._ID AS _ID,
          XML_ElementContent.[order] AS [order],
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementContent,
           XML_Content,
           Core_ModelElement
      WHERE XML_ElementContent._ID = @_ID
        AND XML_ElementContent._ID = XML_Content._ID
        AND XML_ElementContent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_ElementContent
AS
   SELECT XML_ElementContent._ID AS _ID,
          XML_ElementContent.[order] AS [order],
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementContent,
           XML_Content,
           Core_ModelElement
      WHERE XML_ElementContent._ID = XML_Content._ID
        AND XML_ElementContent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_ElementContent._ID AS _ID,
             XML_ElementContent.[order] AS [order],
             XML_Content.type AS type,
             XML_Content.occurrence AS occurrence,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_ElementContent,
              XML_Content,
              Core_ModelElement
         WHERE XML_ElementContent._ID = XML_Content._ID
           AND XML_ElementContent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_ElementContent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_ElementContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_ElementContent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 114
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_ElementContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_ElementContent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_ElementContent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_ElementContent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 114
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_ElementContent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 114
   RETURN @@Error
GO


PRINT 'Class XML.MixedContent'
GO

CREATE TABLE XML_MixedContent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(115, 'XML.MixedContent')
GO

CREATE PROCEDURE Get_XML_MixedContent_type
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_Content_type @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_MixedContent_type
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_XML_Content_type @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_occurrence
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_Content_occurrence @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_MixedContent_occurrence
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_XML_Content_occurrence @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_MixedContent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_MixedContent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_MixedContent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_MixedContent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_MixedContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Content @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_MixedContent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_MixedContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_MixedContent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_MixedContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_MixedContentText_text', 'Delete_XML_MixedContentText', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_MixedContent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_XML_Content @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_MixedContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent
   @_ID INT
AS
   SELECT XML_MixedContent._ID AS _ID,
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_MixedContent,
           XML_Content,
           Core_ModelElement
      WHERE XML_MixedContent._ID = @_ID
        AND XML_MixedContent._ID = XML_Content._ID
        AND XML_MixedContent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_MixedContent
AS
   SELECT XML_MixedContent._ID AS _ID,
          XML_Content.type AS type,
          XML_Content.occurrence AS occurrence,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_MixedContent,
           XML_Content,
           Core_ModelElement
      WHERE XML_MixedContent._ID = XML_Content._ID
        AND XML_MixedContent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_MixedContent._ID AS _ID,
             XML_Content.type AS type,
             XML_Content.occurrence AS occurrence,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_MixedContent,
              XML_Content,
              Core_ModelElement
         WHERE XML_MixedContent._ID = XML_Content._ID
           AND XML_MixedContent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_MixedContent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_MixedContent
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_MixedContent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 115
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_MixedContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_MixedContent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_MixedContent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_MixedContent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 115
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_MixedContent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 115
   RETURN @@Error
GO


PRINT 'Class XML.ElementTypeReference'
GO

CREATE TABLE XML_ElementTypeReference
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,occurrence VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(116, 'XML.ElementTypeReference')
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_occurrence
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = XML_ElementTypeReference.occurrence
      FROM XML_ElementTypeReference
      WHERE XML_ElementTypeReference._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_occurrence
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE XML_ElementTypeReference
      SET occurrence = 
          (SELECT _EnumLiteral FROM XML_OccurrenceType WHERE _EnumLiteral = @_Value)
      WHERE XML_ElementTypeReference._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_ElementTypeReference_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_ElementTypeReference
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_ElementTypeReference WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_ElementTypeReference
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_ElementTypeReference (_ID, occurrence)
         VALUES (@_ID, 'xml_one')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_ElementTypeReference
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_ElementTypeReference
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_ElementTypeReference
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_ContentElementTypeReference_ownerContent', 'Delete_XML_ContentElementTypeReference', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_ElementTypeReference WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_ElementTypeReference
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference
   @_ID INT
AS
   SELECT XML_ElementTypeReference._ID AS _ID,
          XML_ElementTypeReference.occurrence AS occurrence,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementTypeReference,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_ElementTypeReference._ID = @_ID
        AND XML_ElementTypeReference._ID = Core_Attribute._ID
        AND XML_ElementTypeReference._ID = Core_StructuralFeature._ID
        AND XML_ElementTypeReference._ID = Core_Feature._ID
        AND XML_ElementTypeReference._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_ElementTypeReference
AS
   SELECT XML_ElementTypeReference._ID AS _ID,
          XML_ElementTypeReference.occurrence AS occurrence,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_ElementTypeReference,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_ElementTypeReference._ID = Core_Attribute._ID
        AND XML_ElementTypeReference._ID = Core_StructuralFeature._ID
        AND XML_ElementTypeReference._ID = Core_Feature._ID
        AND XML_ElementTypeReference._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeReference
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_ElementTypeReference._ID AS _ID,
             XML_ElementTypeReference.occurrence AS occurrence,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_ElementTypeReference,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE XML_ElementTypeReference._ID = Core_Attribute._ID
           AND XML_ElementTypeReference._ID = Core_StructuralFeature._ID
           AND XML_ElementTypeReference._ID = Core_Feature._ID
           AND XML_ElementTypeReference._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_ElementTypeReference
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_ElementTypeReference
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_ElementTypeReference @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 116
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_ElementTypeReference
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_ElementTypeReference
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_ElementTypeReference @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_ElementTypeReference
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 116
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_ElementTypeReference
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 116
   RETURN @@Error
GO


PRINT 'Class XML.Text'
GO

CREATE TABLE XML_Text
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(117, 'XML.Text')
GO

CREATE PROCEDURE Get_XML_Text_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Text_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Text
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Text WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Text
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Text (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Text
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Text
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Text
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_XML_MixedContentText_ownerContent', 'Delete_XML_MixedContentText', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Text WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Text
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text
   @_ID INT
AS
   SELECT XML_Text._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Text,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_Text._ID = @_ID
        AND XML_Text._ID = Core_Attribute._ID
        AND XML_Text._ID = Core_StructuralFeature._ID
        AND XML_Text._ID = Core_Feature._ID
        AND XML_Text._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Text
AS
   SELECT XML_Text._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Text,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE XML_Text._ID = Core_Attribute._ID
        AND XML_Text._ID = Core_StructuralFeature._ID
        AND XML_Text._ID = Core_Feature._ID
        AND XML_Text._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Text
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Text._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Text,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE XML_Text._ID = Core_Attribute._ID
           AND XML_Text._ID = Core_StructuralFeature._ID
           AND XML_Text._ID = Core_Feature._ID
           AND XML_Text._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Text
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Text
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Text @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 117
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Text
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Text
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Text @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Text
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 117
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Text
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 117
   RETURN @@Error
GO


PRINT 'Class XML.Element'
GO

CREATE TABLE XML_Element
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(118, 'XML.Element')
GO

CREATE PROCEDURE Get_XML_Element_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Element_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Element_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Element
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Element WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Element
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Object @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Element (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Element
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Element
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Element
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Element WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Object @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Element
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element
   @_ID INT
AS
   SELECT XML_Element._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Element,
           Core_ModelElement
      WHERE XML_Element._ID = @_ID
        AND XML_Element._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Element
AS
   SELECT XML_Element._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Element,
           Core_ModelElement
      WHERE XML_Element._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Element
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Element._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Element,
              Core_ModelElement
         WHERE XML_Element._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Element
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Element
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Element @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 118
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Element
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Element
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Element @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Element
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 118
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Element
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 118
   RETURN @@Error
GO


PRINT 'Class XML.Document'
GO

CREATE TABLE XML_Document
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(119, 'XML.Document')
GO

CREATE PROCEDURE Get_XML_Document_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Document_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_XML_Document_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_XML_Document
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM XML_Document WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_XML_Document
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Instance_Extent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT XML_Document (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_XML_Document
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_XML_Document
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_XML_Document
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM XML_Document WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Instance_Extent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_XML_Document
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document
   @_ID INT
AS
   SELECT XML_Document._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Document,
           Core_ModelElement
      WHERE XML_Document._ID = @_ID
        AND XML_Document._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_XML_Document
AS
   SELECT XML_Document._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM XML_Document,
           Core_ModelElement
      WHERE XML_Document._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT XML_Document._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM XML_Document,
              Core_ModelElement
         WHERE XML_Document._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_Document
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_XML_Document
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_XML_Document @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 119
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_XML_Document
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_Document
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_XML_Document @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_XML_Document
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 119
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_XML_Document
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 119
   RETURN @@Error
GO


--
-- Transformation Classes
--

PRINT 'Class Transformation.Transformation'
GO

CREATE TABLE Transformation_Transformation
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,function_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   ,functionDescription VARCHAR(256) NOT NULL
   ,isPrimary BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(120, 'Transformation.Transformation')
GO

CREATE PROCEDURE Get_Transformation_Transformation_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = function_ID FROM Transformation_Transformation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_Transformation_function
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Transformation_Transformation SET function_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = functionDescription FROM Transformation_Transformation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_Transformation_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_Transformation SET functionDescription = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_isPrimary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isPrimary FROM Transformation_Transformation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_Transformation_isPrimary
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Transformation_Transformation SET isPrimary = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_Transformation_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_Transformation_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_Transformation
   @_ID INT OUTPUT
AS
   DECLARE @function_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_Transformation WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__CB9F12747F80
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_ProcedureExpression @function_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Transformation_Transformation (_ID, function_ID, functionDescription, isPrimary)
            VALUES (@_ID, @function_ID, '', 0)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Transformation__CB9F12747F80
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_Transformation
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @function_ID INT
   EXECUTE @Error = Get_Transformation_Transformation_function @_ID, @function_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Transformation_8889918FEF59
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (127, 133, 151, 128)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @function_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @function_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationSource_source', 'Delete_Transformation_TransformationSource', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationTarget_target', 'Delete_Transformation_TransformationTarget', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationTaskElement_task', 'Delete_Transformation_TransformationTaskElement', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Transformation_Transformation WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Transformation_8889918FEF59
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation
   @_ID INT
AS
   SELECT Transformation_Transformation._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_Transformation._ID = @_ID
        AND Transformation_Transformation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_Transformation
AS
   SELECT Transformation_Transformation._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_Transformation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_Transformation._ID AS _ID,
             Transformation_Transformation.function_ID AS function_ID,
             Transformation_Transformation.functionDescription AS functionDescription,
             Transformation_Transformation.isPrimary AS isPrimary,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_Transformation,
              Core_ModelElement
         WHERE Transformation_Transformation._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_Transformation
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_529AC597765A
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_Transformation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 120
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_529AC597765A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_Transformation
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_Transformation @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_Transformation
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (120, 127, 133, 151, 128)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_Transformation
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 120
   RETURN @@Error
GO


PRINT 'Class Transformation.DataObjectSet'
GO

CREATE TABLE Transformation_DataObjectSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(121, 'Transformation.DataObjectSet')
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_DataObjectSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_DataObjectSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_DataObjectSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_DataObjectSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation_DataObjectSet
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_DataObjectSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation_DataObjectSet
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_DataObjectSet
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_1367F40D54FE
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationSource_sourceTransformation', 'Delete_Transformation_TransformationSource', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationTarget_targetTransformation', 'Delete_Transformation_TransformationTarget', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_DataObjectSetElement_element', 'Delete_Transformation_DataObjectSetElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_DataObjectSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_1367F40D54FE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet
   @_ID INT
AS
   SELECT Transformation_DataObjectSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_DataObjectSet,
           Core_ModelElement
      WHERE Transformation_DataObjectSet._ID = @_ID
        AND Transformation_DataObjectSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_DataObjectSet
AS
   SELECT Transformation_DataObjectSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_DataObjectSet,
           Core_ModelElement
      WHERE Transformation_DataObjectSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_DataObjectSet._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_DataObjectSet,
              Core_ModelElement
         WHERE Transformation_DataObjectSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_DataObjectSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_36CC58F4CD7C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_DataObjectSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 121
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_36CC58F4CD7C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_DataObjectSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_DataObjectSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_DataObjectSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 121
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_DataObjectSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 121
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationTask'
GO

CREATE TABLE Transformation_TransformationTask
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(122, 'Transformation.TransformationTask')
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTask_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTask_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTask_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationTask
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationTask WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__97FDE94B258C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_SoftwareDeployment_Component @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_TransformationTask (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__97FDE94B258C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationTask
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_D1846BA8F7CB
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationStepTask_step', 'Delete_Transformation_TransformationStepTask', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_InverseTransformationTask_inverseTask', 'Delete_Transformation_InverseTransformationTask', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_InverseTransformationTask_originalTask', 'Delete_Transformation_InverseTransformationTask', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationTaskElement_transformation', 'Delete_Transformation_TransformationTaskElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_TransformationTask WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_SoftwareDeployment_Component @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_D1846BA8F7CB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask
   @_ID INT
AS
   SELECT Transformation_TransformationTask._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationTask,
           Core_Classifier,
           Core_ModelElement
      WHERE Transformation_TransformationTask._ID = @_ID
        AND Transformation_TransformationTask._ID = Core_Classifier._ID
        AND Transformation_TransformationTask._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationTask
AS
   SELECT Transformation_TransformationTask._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationTask,
           Core_Classifier,
           Core_ModelElement
      WHERE Transformation_TransformationTask._ID = Core_Classifier._ID
        AND Transformation_TransformationTask._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationTask._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_TransformationTask,
              Core_Classifier,
              Core_ModelElement
         WHERE Transformation_TransformationTask._ID = Core_Classifier._ID
           AND Transformation_TransformationTask._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationTask
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_FE2DE2E9ACD5
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationTask @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 122
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_FE2DE2E9ACD5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationTask
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationTask @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationTask
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 122
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationTask
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 122
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationStep'
GO

CREATE TABLE Transformation_TransformationStep
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(123, 'Transformation.TransformationStep')
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationStep_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationStep_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationStep
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationStep WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__5AAFFA6C9014
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_TransformationStep (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__5AAFFA6C9014
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationStep
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_AEC9F6DCBB16
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_TransformationStepTask_task', 'Delete_Transformation_TransformationStepTask', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseStepRunsTransformationStep_warehouseStep', 'Delete_WarehouseProcess_WarehouseStepRunsTransformationStep', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_TransformationStepExecutions_execution', 'Delete_WarehouseOperation_TransformationStepExecutions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_TransformationStep WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_AEC9F6DCBB16
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep
   @_ID INT
AS
   SELECT Transformation_TransformationStep._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationStep,
           Core_ModelElement
      WHERE Transformation_TransformationStep._ID = @_ID
        AND Transformation_TransformationStep._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationStep
AS
   SELECT Transformation_TransformationStep._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationStep,
           Core_ModelElement
      WHERE Transformation_TransformationStep._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationStep._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_TransformationStep,
              Core_ModelElement
         WHERE Transformation_TransformationStep._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationStep
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_A2FF14598CE8
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationStep @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 123
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_A2FF14598CE8
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationStep
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationStep @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationStep
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 123
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationStep
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 123
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationActivity'
GO

CREATE TABLE Transformation_TransformationActivity
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,creationDate VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(124, 'Transformation.TransformationActivity')
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_creationDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = creationDate FROM Transformation_TransformationActivity WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_TransformationActivity_creationDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_TransformationActivity SET creationDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationActivity_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationActivity_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationActivity_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationActivity
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationActivity WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__5BD5628E8D35
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Subsystem @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_TransformationActivity (_ID, creationDate)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__5BD5628E8D35
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationActivity
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_2DDC61FD199E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseActivityRunsTransformationActivity_warehouseActivity', 'Delete_WarehouseProcess_WarehouseActivityRunsTransformationActivity', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_TransformationActivityExecutions_execution', 'Delete_WarehouseOperation_TransformationActivityExecutions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_TransformationActivity WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Subsystem @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_2DDC61FD199E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity
   @_ID INT
AS
   SELECT Transformation_TransformationActivity._ID AS _ID,
          Transformation_TransformationActivity.creationDate AS creationDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM Transformation_TransformationActivity,
           Core_ModelElement,
           Core_Classifier
      WHERE Transformation_TransformationActivity._ID = @_ID
        AND Transformation_TransformationActivity._ID = Core_ModelElement._ID
        AND Transformation_TransformationActivity._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationActivity
AS
   SELECT Transformation_TransformationActivity._ID AS _ID,
          Transformation_TransformationActivity.creationDate AS creationDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility,
          Core_Classifier.isAbstract AS isAbstract
      FROM Transformation_TransformationActivity,
           Core_ModelElement,
           Core_Classifier
      WHERE Transformation_TransformationActivity._ID = Core_ModelElement._ID
        AND Transformation_TransformationActivity._ID = Core_Classifier._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationActivity._ID AS _ID,
             Transformation_TransformationActivity.creationDate AS creationDate,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility,
             Core_Classifier.isAbstract AS isAbstract
         FROM Transformation_TransformationActivity,
              Core_ModelElement,
              Core_Classifier
         WHERE Transformation_TransformationActivity._ID = Core_ModelElement._ID
           AND Transformation_TransformationActivity._ID = Core_Classifier._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationActivity
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_8018DA88F435
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationActivity @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 124
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_8018DA88F435
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationActivity
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationActivity @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationActivity
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 124
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationActivity
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 124
   RETURN @@Error
GO


PRINT 'Class Transformation.PrecedenceConstraint'
GO

CREATE TABLE Transformation_PrecedenceConstraint
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(125, 'Transformation.PrecedenceConstraint')
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Constraint_body @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_PrecedenceConstraint_body
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Constraint_body @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_PrecedenceConstraint_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_PrecedenceConstraint_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_PrecedenceConstraint
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_PrecedenceConstraint WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__3E3287751597
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Constraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_PrecedenceConstraint (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__3E3287751597
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_PrecedenceConstraint
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_C1111B0A58D6
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_PrecedenceConstraint WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Constraint @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_C1111B0A58D6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint
   @_ID INT
AS
   SELECT Transformation_PrecedenceConstraint._ID AS _ID,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_PrecedenceConstraint,
           Core_Constraint,
           Core_ModelElement
      WHERE Transformation_PrecedenceConstraint._ID = @_ID
        AND Transformation_PrecedenceConstraint._ID = Core_Constraint._ID
        AND Transformation_PrecedenceConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_PrecedenceConstraint
AS
   SELECT Transformation_PrecedenceConstraint._ID AS _ID,
          Core_Constraint.body_ID AS body_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_PrecedenceConstraint,
           Core_Constraint,
           Core_ModelElement
      WHERE Transformation_PrecedenceConstraint._ID = Core_Constraint._ID
        AND Transformation_PrecedenceConstraint._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_PrecedenceConstraint
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_PrecedenceConstraint._ID AS _ID,
             Core_Constraint.body_ID AS body_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_PrecedenceConstraint,
              Core_Constraint,
              Core_ModelElement
         WHERE Transformation_PrecedenceConstraint._ID = Core_Constraint._ID
           AND Transformation_PrecedenceConstraint._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_PrecedenceConstraint
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_67A8E2B96B7F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_PrecedenceConstraint @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 125
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_67A8E2B96B7F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_PrecedenceConstraint
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_PrecedenceConstraint @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_PrecedenceConstraint
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 125
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_PrecedenceConstraint
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 125
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationUse'
GO

CREATE TABLE Transformation_TransformationUse
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(126, 'Transformation.TransformationUse')
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM Transformation_TransformationUse WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_TransformationUse_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_TransformationUse SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_kind
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Dependency_kind @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationUse_kind
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Dependency_kind @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationUse_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationUse_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationUse
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationUse WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__54C78ACC6B4C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Dependency @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_TransformationUse (_ID, type)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__54C78ACC6B4C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationUse
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_33AEABE977F4
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_TransformationUse WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Dependency @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_33AEABE977F4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse
   @_ID INT
AS
   SELECT Transformation_TransformationUse._ID AS _ID,
          Transformation_TransformationUse.type AS type,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationUse,
           Core_Dependency,
           Core_ModelElement
      WHERE Transformation_TransformationUse._ID = @_ID
        AND Transformation_TransformationUse._ID = Core_Dependency._ID
        AND Transformation_TransformationUse._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationUse
AS
   SELECT Transformation_TransformationUse._ID AS _ID,
          Transformation_TransformationUse.type AS type,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationUse,
           Core_Dependency,
           Core_ModelElement
      WHERE Transformation_TransformationUse._ID = Core_Dependency._ID
        AND Transformation_TransformationUse._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationUse._ID AS _ID,
             Transformation_TransformationUse.type AS type,
             Core_Dependency.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_TransformationUse,
              Core_Dependency,
              Core_ModelElement
         WHERE Transformation_TransformationUse._ID = Core_Dependency._ID
           AND Transformation_TransformationUse._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationUse
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_1B55A1A23639
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationUse @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 126
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_1B55A1A23639
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationUse
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationUse @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationUse
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 126
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationUse
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 126
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationMap'
GO

CREATE TABLE Transformation_TransformationMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(127, 'Transformation.TransformationMap')
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_function @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_function @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_functionDescription @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_functionDescription @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_isPrimary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_isPrimary @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationMap_isPrimary
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_isPrimary @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationMap
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__C6D52CD9AA36
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_Transformation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_TransformationMap (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__C6D52CD9AA36
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationMap
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_4140DEB5E6A2
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (133, 151)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_TransformationMap WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Transformation_Transformation @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_4140DEB5E6A2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap
   @_ID INT
AS
   SELECT Transformation_TransformationMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_TransformationMap._ID = @_ID
        AND Transformation_TransformationMap._ID = Transformation_Transformation._ID
        AND Transformation_TransformationMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationMap
AS
   SELECT Transformation_TransformationMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_TransformationMap._ID = Transformation_Transformation._ID
        AND Transformation_TransformationMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationMap._ID AS _ID,
             Transformation_Transformation.function_ID AS function_ID,
             Transformation_Transformation.functionDescription AS functionDescription,
             Transformation_Transformation.isPrimary AS isPrimary,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_TransformationMap,
              Transformation_Transformation,
              Core_ModelElement
         WHERE Transformation_TransformationMap._ID = Transformation_Transformation._ID
           AND Transformation_TransformationMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_136ABC6B51ED
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 127
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_136ABC6B51ED
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (127, 133, 151)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 127
   RETURN @@Error
GO


PRINT 'Class Transformation.TransformationTree'
GO

CREATE TABLE Transformation_TransformationTree
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(128) NOT NULL
   ,body_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_ExpressionNode(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(128, 'Transformation.TransformationTree')
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_type
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = Transformation_TransformationTree.type
      FROM Transformation_TransformationTree
      WHERE Transformation_TransformationTree._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_type
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE Transformation_TransformationTree
      SET type = 
          (SELECT _EnumLiteral FROM Transformation_TreeType WHERE _EnumLiteral = @_Value)
      WHERE Transformation_TransformationTree._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_body
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = body_ID FROM Transformation_TransformationTree WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_body
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Transformation_TransformationTree SET body_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_function @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_function
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_function @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_functionDescription @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_functionDescription @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_isPrimary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_isPrimary @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_isPrimary
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_isPrimary @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_TransformationTree_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_TransformationTree
   @_ID INT OUTPUT
AS
   DECLARE @body_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_TransformationTree WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__E3D5B077222E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_Transformation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Expressions_ExpressionNode @body_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Transformation_TransformationTree (_ID, type, body_ID)
            VALUES (@_ID, 'tfm_unary', @body_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Transformation__E3D5B077222E
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_TransformationTree
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @body_ID INT
   EXECUTE @Error = Get_Transformation_TransformationTree_body @_ID, @body_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Transformation_DC32F7CF8385
      SELECT @Error = @@Error
      IF @Error = 0 AND @body_ID IS NOT NULL
         EXECUTE @Error = Drop_Expressions_ExpressionNode @body_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Transformation_TransformationTree WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Transformation_Transformation @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Transformation_DC32F7CF8385
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree
   @_ID INT
AS
   SELECT Transformation_TransformationTree._ID AS _ID,
          Transformation_TransformationTree.type AS type,
          Transformation_TransformationTree.body_ID AS body_ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationTree,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_TransformationTree._ID = @_ID
        AND Transformation_TransformationTree._ID = Transformation_Transformation._ID
        AND Transformation_TransformationTree._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_TransformationTree
AS
   SELECT Transformation_TransformationTree._ID AS _ID,
          Transformation_TransformationTree.type AS type,
          Transformation_TransformationTree.body_ID AS body_ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_TransformationTree,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Transformation_TransformationTree._ID = Transformation_Transformation._ID
        AND Transformation_TransformationTree._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_TransformationTree._ID AS _ID,
             Transformation_TransformationTree.type AS type,
             Transformation_TransformationTree.body_ID AS body_ID,
             Transformation_Transformation.function_ID AS function_ID,
             Transformation_Transformation.functionDescription AS functionDescription,
             Transformation_Transformation.isPrimary AS isPrimary,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_TransformationTree,
              Transformation_Transformation,
              Core_ModelElement
         WHERE Transformation_TransformationTree._ID = Transformation_Transformation._ID
           AND Transformation_TransformationTree._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationTree
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_EB1647DE2C3B
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationTree @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 128
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_EB1647DE2C3B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationTree
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_TransformationTree @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_TransformationTree
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 128
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_TransformationTree
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 128
   RETURN @@Error
GO


PRINT 'Class Transformation.ClassifierMap'
GO

CREATE TABLE Transformation_ClassifierMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,function_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   ,functionDescription VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(129, 'Transformation.ClassifierMap')
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = function_ID FROM Transformation_ClassifierMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Transformation_ClassifierMap SET function_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = functionDescription FROM Transformation_ClassifierMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_ClassifierMap SET functionDescription = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_ClassifierMap
   @_ID INT OUTPUT
AS
   DECLARE @function_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_ClassifierMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation_ClassifierMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Namespace @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_ProcedureExpression @function_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Transformation_ClassifierMap (_ID, function_ID, functionDescription)
            VALUES (@_ID, @function_ID, '')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Transformation_ClassifierMap
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_ClassifierMap
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @function_ID INT
   EXECUTE @Error = Get_Transformation_ClassifierMap_function @_ID, @function_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Transformation_B1128C740166
      SELECT @Error = @@Error
      IF @Error = 0 AND @function_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @function_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapToFeatureMap_featureMap', 'Delete_Transformation_ClassifierMapToFeatureMap', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapToCFMap_cfMap', 'Delete_Transformation_ClassifierMapToCFMap', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapSource_source', 'Delete_Transformation_ClassifierMapSource', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapTarget_target', 'Delete_Transformation_ClassifierMapTarget', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Transformation_ClassifierMap WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Namespace @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Transformation_B1128C740166
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap
   @_ID INT
AS
   SELECT Transformation_ClassifierMap._ID AS _ID,
          Transformation_ClassifierMap.function_ID AS function_ID,
          Transformation_ClassifierMap.functionDescription AS functionDescription,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_ClassifierMap,
           Core_ModelElement
      WHERE Transformation_ClassifierMap._ID = @_ID
        AND Transformation_ClassifierMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_ClassifierMap
AS
   SELECT Transformation_ClassifierMap._ID AS _ID,
          Transformation_ClassifierMap.function_ID AS function_ID,
          Transformation_ClassifierMap.functionDescription AS functionDescription,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_ClassifierMap,
           Core_ModelElement
      WHERE Transformation_ClassifierMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_ClassifierMap._ID AS _ID,
             Transformation_ClassifierMap.function_ID AS function_ID,
             Transformation_ClassifierMap.functionDescription AS functionDescription,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_ClassifierMap,
              Core_ModelElement
         WHERE Transformation_ClassifierMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_79E5852FA001
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_ClassifierMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 129
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_79E5852FA001
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_ClassifierMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_ClassifierMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 129
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_ClassifierMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 129
   RETURN @@Error
GO


PRINT 'Class Transformation.FeatureMap'
GO

CREATE TABLE Transformation_FeatureMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,function_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   ,functionDescription VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(130, 'Transformation.FeatureMap')
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = function_ID FROM Transformation_FeatureMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_FeatureMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Transformation_FeatureMap SET function_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = functionDescription FROM Transformation_FeatureMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_FeatureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_FeatureMap SET functionDescription = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_FeatureMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_FeatureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_FeatureMap
   @_ID INT OUTPUT
AS
   DECLARE @function_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_FeatureMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation_FeatureMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_ProcedureExpression @function_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Transformation_FeatureMap (_ID, function_ID, functionDescription)
            VALUES (@_ID, @function_ID, '')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Transformation_FeatureMap
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_FeatureMap
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @function_ID INT
   EXECUTE @Error = Get_Transformation_FeatureMap_function @_ID, @function_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Transformation_FeatureMap
      SELECT @Error = @@Error
      IF @Error = 0 AND @function_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @function_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapToFeatureMap_classifierMap', 'Delete_Transformation_ClassifierMapToFeatureMap', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_FeatureMapTarget_target', 'Delete_Transformation_FeatureMapTarget', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_FeatureMapSource_source', 'Delete_Transformation_FeatureMapSource', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Transformation_FeatureMap WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Transformation_FeatureMap
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap
   @_ID INT
AS
   SELECT Transformation_FeatureMap._ID AS _ID,
          Transformation_FeatureMap.function_ID AS function_ID,
          Transformation_FeatureMap.functionDescription AS functionDescription,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_FeatureMap,
           Core_ModelElement
      WHERE Transformation_FeatureMap._ID = @_ID
        AND Transformation_FeatureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_FeatureMap
AS
   SELECT Transformation_FeatureMap._ID AS _ID,
          Transformation_FeatureMap.function_ID AS function_ID,
          Transformation_FeatureMap.functionDescription AS functionDescription,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_FeatureMap,
           Core_ModelElement
      WHERE Transformation_FeatureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_FeatureMap._ID AS _ID,
             Transformation_FeatureMap.function_ID AS function_ID,
             Transformation_FeatureMap.functionDescription AS functionDescription,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_FeatureMap,
              Core_ModelElement
         WHERE Transformation_FeatureMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_FeatureMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformation_FeatureMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_FeatureMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 130
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformation_FeatureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_FeatureMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_FeatureMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_FeatureMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 130
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_FeatureMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 130
   RETURN @@Error
GO


PRINT 'Class Transformation.StepPrecedence'
GO

CREATE TABLE Transformation_StepPrecedence
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(131, 'Transformation.StepPrecedence')
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_kind
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Dependency_kind @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_StepPrecedence_kind
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Dependency_kind @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_StepPrecedence_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_StepPrecedence_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_StepPrecedence
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_StepPrecedence WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__942DC6692562
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Dependency @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Transformation_StepPrecedence (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Transformation__942DC6692562
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_StepPrecedence
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Transformation_006D4F33F00B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Transformation_StepPrecedence WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Dependency @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Transformation_006D4F33F00B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence
   @_ID INT
AS
   SELECT Transformation_StepPrecedence._ID AS _ID,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_StepPrecedence,
           Core_Dependency,
           Core_ModelElement
      WHERE Transformation_StepPrecedence._ID = @_ID
        AND Transformation_StepPrecedence._ID = Core_Dependency._ID
        AND Transformation_StepPrecedence._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_StepPrecedence
AS
   SELECT Transformation_StepPrecedence._ID AS _ID,
          Core_Dependency.kind AS kind,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_StepPrecedence,
           Core_Dependency,
           Core_ModelElement
      WHERE Transformation_StepPrecedence._ID = Core_Dependency._ID
        AND Transformation_StepPrecedence._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_StepPrecedence._ID AS _ID,
             Core_Dependency.kind AS kind,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_StepPrecedence,
              Core_Dependency,
              Core_ModelElement
         WHERE Transformation_StepPrecedence._ID = Core_Dependency._ID
           AND Transformation_StepPrecedence._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_StepPrecedence
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_A09B29E5E612
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_StepPrecedence @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 131
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_A09B29E5E612
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_StepPrecedence
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_StepPrecedence @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_StepPrecedence
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 131
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_StepPrecedence
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 131
   RETURN @@Error
GO


PRINT 'Class Transformation.ClassifierFeatureMap'
GO

CREATE TABLE Transformation_ClassifierFeatureMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,function_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ProcedureExpression(_ID)
   ,functionDescription VARCHAR(256) NOT NULL
   ,classifierToFeature BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(132, 'Transformation.ClassifierFeatureMap')
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = function_ID FROM Transformation_ClassifierFeatureMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierFeatureMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Transformation_ClassifierFeatureMap SET function_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = functionDescription FROM Transformation_ClassifierFeatureMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierFeatureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE Transformation_ClassifierFeatureMap SET functionDescription = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_classifierToFeature
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = classifierToFeature FROM Transformation_ClassifierFeatureMap WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierFeatureMap_classifierToFeature
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Transformation_ClassifierFeatureMap SET classifierToFeature = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierFeatureMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Transformation_ClassifierFeatureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Transformation_ClassifierFeatureMap
   @_ID INT OUTPUT
AS
   DECLARE @function_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Transformation_ClassifierFeatureMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Transformation__7E6EA6F4D42E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_ProcedureExpression @function_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Transformation_ClassifierFeatureMap (_ID, function_ID, functionDescription, classifierToFeature)
            VALUES (@_ID, @function_ID, '', 0)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Transformation__7E6EA6F4D42E
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Transformation_ClassifierFeatureMap
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @function_ID INT
   EXECUTE @Error = Get_Transformation_ClassifierFeatureMap_function @_ID, @function_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Transformation_04627E167A8A
      SELECT @Error = @@Error
      IF @Error = 0 AND @function_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_ProcedureExpression @function_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_ClassifierMapToCFMap_classifierMap', 'Delete_Transformation_ClassifierMapToCFMap', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_CFMapClassifier_classifier', 'Delete_Transformation_CFMapClassifier', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Transformation_CFMapFeature_feature', 'Delete_Transformation_CFMapFeature', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Transformation_ClassifierFeatureMap WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Transformation_04627E167A8A
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap
   @_ID INT
AS
   SELECT Transformation_ClassifierFeatureMap._ID AS _ID,
          Transformation_ClassifierFeatureMap.function_ID AS function_ID,
          Transformation_ClassifierFeatureMap.functionDescription AS functionDescription,
          Transformation_ClassifierFeatureMap.classifierToFeature AS classifierToFeature,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_ClassifierFeatureMap,
           Core_ModelElement
      WHERE Transformation_ClassifierFeatureMap._ID = @_ID
        AND Transformation_ClassifierFeatureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Transformation_ClassifierFeatureMap
AS
   SELECT Transformation_ClassifierFeatureMap._ID AS _ID,
          Transformation_ClassifierFeatureMap.function_ID AS function_ID,
          Transformation_ClassifierFeatureMap.functionDescription AS functionDescription,
          Transformation_ClassifierFeatureMap.classifierToFeature AS classifierToFeature,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Transformation_ClassifierFeatureMap,
           Core_ModelElement
      WHERE Transformation_ClassifierFeatureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Transformation_ClassifierFeatureMap._ID AS _ID,
             Transformation_ClassifierFeatureMap.function_ID AS function_ID,
             Transformation_ClassifierFeatureMap.functionDescription AS functionDescription,
             Transformation_ClassifierFeatureMap.classifierToFeature AS classifierToFeature,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Transformation_ClassifierFeatureMap,
              Core_ModelElement
         WHERE Transformation_ClassifierFeatureMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierFeatureMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Transformati_1F927F2441C2
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_ClassifierFeatureMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 132
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Transformati_1F927F2441C2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierFeatureMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Transformation_ClassifierFeatureMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Transformation_ClassifierFeatureMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 132
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Transformation_ClassifierFeatureMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 132
   RETURN @@Error
GO


--
-- Olap Classes
--

PRINT 'Class Olap.ContentMap'
GO

CREATE TABLE Olap_ContentMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(133, 'Olap.ContentMap')
GO

CREATE PROCEDURE Get_Olap_ContentMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_function @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ContentMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_function @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_functionDescription @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ContentMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_functionDescription @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_isPrimary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_isPrimary @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ContentMap_isPrimary
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_isPrimary @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ContentMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ContentMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_ContentMap
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_ContentMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_ContentMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_ContentMap (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_ContentMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_ContentMap
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_ContentMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDeploymentOwnsContentMaps_cubeDeployment', 'Delete_Olap_CubeDeploymentOwnsContentMaps', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_ContentMap WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Transformation_TransformationMap @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_ContentMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap
   @_ID INT
AS
   SELECT Olap_ContentMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_ContentMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Olap_ContentMap._ID = @_ID
        AND Olap_ContentMap._ID = Transformation_Transformation._ID
        AND Olap_ContentMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_ContentMap
AS
   SELECT Olap_ContentMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_ContentMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Olap_ContentMap._ID = Transformation_Transformation._ID
        AND Olap_ContentMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_ContentMap._ID AS _ID,
             Transformation_Transformation.function_ID AS function_ID,
             Transformation_Transformation.functionDescription AS functionDescription,
             Transformation_Transformation.isPrimary AS isPrimary,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_ContentMap,
              Transformation_Transformation,
              Core_ModelElement
         WHERE Olap_ContentMap._ID = Transformation_Transformation._ID
           AND Olap_ContentMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_ContentMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_ContentMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_ContentMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 133
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_ContentMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_ContentMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_ContentMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_ContentMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 133
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_ContentMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 133
   RETURN @@Error
GO


PRINT 'Class Olap.Cube'
GO

CREATE TABLE Olap_Cube
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isVirtual BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(134, 'Olap.Cube')
GO

CREATE PROCEDURE Get_Olap_Cube_isVirtual
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isVirtual FROM Olap_Cube WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_Cube_isVirtual
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Olap_Cube SET isVirtual = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_Cube_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Cube_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Cube_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Cube_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Cube
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Cube WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Cube (_ID, isVirtual)
         VALUES (@_ID, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Cube
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeOwnsCubeDimensionAssociations_cubeDimensionAssociation', 'Delete_Olap_CubeOwnsCubeDimensionAssociations', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsCubes_schema', 'Delete_Olap_SchemaOwnsCubes', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeOwnsCubeRegions_cubeRegion', 'Delete_Olap_CubeOwnsCubeRegions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Cube WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube
   @_ID INT
AS
   SELECT Olap_Cube._ID AS _ID,
          Olap_Cube.isVirtual AS isVirtual,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Cube,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Cube._ID = @_ID
        AND Olap_Cube._ID = Core_Classifier._ID
        AND Olap_Cube._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Cube
AS
   SELECT Olap_Cube._ID AS _ID,
          Olap_Cube.isVirtual AS isVirtual,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Cube,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Cube._ID = Core_Classifier._ID
        AND Olap_Cube._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Cube._ID AS _ID,
             Olap_Cube.isVirtual AS isVirtual,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Cube,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_Cube._ID = Core_Classifier._ID
           AND Olap_Cube._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_Cube
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Cube @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 134
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_Cube
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_Cube @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Cube
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 134
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Cube
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 134
   RETURN @@Error
GO


PRINT 'Class Olap.CubeDeployment'
GO

CREATE TABLE Olap_CubeDeployment
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(135, 'Olap.CubeDeployment')
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDeployment_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDeployment_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDeployment_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_CubeDeployment
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_CubeDeployment WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_CubeDeployment (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_CubeDeployment
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeRegionOwnsCubeDeployments_cubeRegion', 'Delete_Olap_CubeRegionOwnsCubeDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DeploymentGroupReferencesCubeDeployments_deploymentGroup', 'Delete_Olap_DeploymentGroupReferencesCubeDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDeploymentOwnsContentMaps_contentMap', 'Delete_Olap_CubeDeploymentOwnsContentMaps', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_CubeDeployment WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment
   @_ID INT
AS
   SELECT Olap_CubeDeployment._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeDeployment,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeDeployment._ID = @_ID
        AND Olap_CubeDeployment._ID = Core_Classifier._ID
        AND Olap_CubeDeployment._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_CubeDeployment
AS
   SELECT Olap_CubeDeployment._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeDeployment,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeDeployment._ID = Core_Classifier._ID
        AND Olap_CubeDeployment._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_CubeDeployment._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_CubeDeployment,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_CubeDeployment._ID = Core_Classifier._ID
           AND Olap_CubeDeployment._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeDeployment
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_CubeDeployment @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 135
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeDeployment
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_CubeDeployment @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_CubeDeployment
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 135
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_CubeDeployment
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 135
   RETURN @@Error
GO


PRINT 'Class Olap.CubeDimensionAssociation'
GO

CREATE TABLE Olap_CubeDimensionAssociation
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(136, 'Olap.CubeDimensionAssociation')
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDimensionAssociation_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDimensionAssociation_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeDimensionAssociation_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_CubeDimensionAssociation
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_CubeDimensionAssociation WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_CubeDimens_079ABAFAE48C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_CubeDimensionAssociation (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_CubeDimens_079ABAFAE48C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_CubeDimensionAssociation
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_CubeDimen_2C06CE312ECB
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeOwnsCubeDimensionAssociations_cube', 'Delete_Olap_CubeOwnsCubeDimensionAssociations', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDimensionAssociationsReferenceDimension_dimension', 'Delete_Olap_CubeDimensionAssociationsReferenceDimension', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_calcHierarchy', 'Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_CubeDimensionAssociation WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_CubeDimen_2C06CE312ECB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation
   @_ID INT
AS
   SELECT Olap_CubeDimensionAssociation._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeDimensionAssociation,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeDimensionAssociation._ID = @_ID
        AND Olap_CubeDimensionAssociation._ID = Core_Classifier._ID
        AND Olap_CubeDimensionAssociation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_CubeDimensionAssociation
AS
   SELECT Olap_CubeDimensionAssociation._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeDimensionAssociation,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeDimensionAssociation._ID = Core_Classifier._ID
        AND Olap_CubeDimensionAssociation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_CubeDimensionAssociation._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_CubeDimensionAssociation,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_CubeDimensionAssociation._ID = Core_Classifier._ID
           AND Olap_CubeDimensionAssociation._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeDimensionAssociation
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_CubeDim_9FFE8F434D59
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_CubeDimensionAssociation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 136
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_CubeDim_9FFE8F434D59
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeDimensionAssociation
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_CubeDimensionAssociation @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_CubeDimensionAssociation
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 136
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_CubeDimensionAssociation
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 136
   RETURN @@Error
GO


PRINT 'Class Olap.CubeRegion'
GO

CREATE TABLE Olap_CubeRegion
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isReadOnly BIT NOT NULL
   ,isFullyRealized BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(137, 'Olap.CubeRegion')
GO

CREATE PROCEDURE Get_Olap_CubeRegion_isReadOnly
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isReadOnly FROM Olap_CubeRegion WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_CubeRegion_isReadOnly
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Olap_CubeRegion SET isReadOnly = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_isFullyRealized
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isFullyRealized FROM Olap_CubeRegion WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_CubeRegion_isFullyRealized
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Olap_CubeRegion SET isFullyRealized = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeRegion_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeRegion_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CubeRegion_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_CubeRegion
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_CubeRegion WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_CubeRegion (_ID, isReadOnly, isFullyRealized)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_CubeRegion
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeOwnsCubeRegions_cube', 'Delete_Olap_CubeOwnsCubeRegions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeRegionOwnsMemberSelectionGroups_memberSelectionGroup', 'Delete_Olap_CubeRegionOwnsMemberSelectionGroups', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeRegionOwnsCubeDeployments_cubeDeployment', 'Delete_Olap_CubeRegionOwnsCubeDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_CubeRegion WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion
   @_ID INT
AS
   SELECT Olap_CubeRegion._ID AS _ID,
          Olap_CubeRegion.isReadOnly AS isReadOnly,
          Olap_CubeRegion.isFullyRealized AS isFullyRealized,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeRegion,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeRegion._ID = @_ID
        AND Olap_CubeRegion._ID = Core_Classifier._ID
        AND Olap_CubeRegion._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_CubeRegion
AS
   SELECT Olap_CubeRegion._ID AS _ID,
          Olap_CubeRegion.isReadOnly AS isReadOnly,
          Olap_CubeRegion.isFullyRealized AS isFullyRealized,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CubeRegion,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CubeRegion._ID = Core_Classifier._ID
        AND Olap_CubeRegion._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_CubeRegion._ID AS _ID,
             Olap_CubeRegion.isReadOnly AS isReadOnly,
             Olap_CubeRegion.isFullyRealized AS isFullyRealized,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_CubeRegion,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_CubeRegion._ID = Core_Classifier._ID
           AND Olap_CubeRegion._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeRegion
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_CubeRegion @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 137
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeRegion
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_CubeRegion @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_CubeRegion
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 137
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_CubeRegion
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 137
   RETURN @@Error
GO


PRINT 'Class Olap.DeploymentGroup'
GO

CREATE TABLE Olap_DeploymentGroup
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(138, 'Olap.DeploymentGroup')
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_DeploymentGroup_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_DeploymentGroup_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_DeploymentGroup
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_DeploymentGroup WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_DeploymentGroup (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_DeploymentGroup
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsDeploymentGroups_schema', 'Delete_Olap_SchemaOwnsDeploymentGroups', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DeploymentGroupReferencesCubeDeployments_cubeDeployment', 'Delete_Olap_DeploymentGroupReferencesCubeDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DeploymentGroupReferencesDimensionDeployments_dimensionDeployment', 'Delete_Olap_DeploymentGroupReferencesDimensionDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_DeploymentGroup WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup
   @_ID INT
AS
   SELECT Olap_DeploymentGroup._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_DeploymentGroup,
           Core_ModelElement
      WHERE Olap_DeploymentGroup._ID = @_ID
        AND Olap_DeploymentGroup._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_DeploymentGroup
AS
   SELECT Olap_DeploymentGroup._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_DeploymentGroup,
           Core_ModelElement
      WHERE Olap_DeploymentGroup._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_DeploymentGroup._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_DeploymentGroup,
              Core_ModelElement
         WHERE Olap_DeploymentGroup._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_DeploymentGroup
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_DeploymentGroup @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 138
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DeploymentGroup
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_DeploymentGroup @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_DeploymentGroup
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 138
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_DeploymentGroup
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 138
   RETURN @@Error
GO


PRINT 'Class Olap.Dimension'
GO

CREATE TABLE Olap_Dimension
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isTime BIT NOT NULL
   ,isMeasure BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(139, 'Olap.Dimension')
GO

CREATE PROCEDURE Get_Olap_Dimension_isTime
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isTime FROM Olap_Dimension WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_Dimension_isTime
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Olap_Dimension SET isTime = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_Dimension_isMeasure
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isMeasure FROM Olap_Dimension WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_Dimension_isMeasure
    @_ID INT
   ,@_Value BIT
AS
   UPDATE Olap_Dimension SET isMeasure = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_Dimension_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Dimension_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Dimension_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Dimension_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Dimension
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Dimension WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Dimension (_ID, isTime, isMeasure)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Dimension
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionOwnsMemberSelections_memberSelection', 'Delete_Olap_DimensionOwnsMemberSelections', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDimensionAssociationsReferenceDimension_cubeDimensionAssociation', 'Delete_Olap_CubeDimensionAssociationsReferenceDimension', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionOwnsHierarchies_hierarchy', 'Delete_Olap_DimensionOwnsHierarchies', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionHasDefaultHierarchy_displayDefault', 'Delete_Olap_DimensionHasDefaultHierarchy', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsDimensions_schema', 'Delete_Olap_SchemaOwnsDimensions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Dimension WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension
   @_ID INT
AS
   SELECT Olap_Dimension._ID AS _ID,
          Olap_Dimension.isTime AS isTime,
          Olap_Dimension.isMeasure AS isMeasure,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Dimension,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Dimension._ID = @_ID
        AND Olap_Dimension._ID = Core_Classifier._ID
        AND Olap_Dimension._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Dimension
AS
   SELECT Olap_Dimension._ID AS _ID,
          Olap_Dimension.isTime AS isTime,
          Olap_Dimension.isMeasure AS isMeasure,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Dimension,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Dimension._ID = Core_Classifier._ID
        AND Olap_Dimension._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Dimension._ID AS _ID,
             Olap_Dimension.isTime AS isTime,
             Olap_Dimension.isMeasure AS isMeasure,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Dimension,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_Dimension._ID = Core_Classifier._ID
           AND Olap_Dimension._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_Dimension
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Dimension @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 139
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_Dimension
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_Dimension @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Dimension
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 139
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Dimension
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 139
   RETURN @@Error
GO


PRINT 'Class Olap.DimensionDeployment'
GO

CREATE TABLE Olap_DimensionDeployment
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(140, 'Olap.DimensionDeployment')
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_DimensionDeployment_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_DimensionDeployment_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_DimensionDeployment_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_DimensionDeployment
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_DimensionDeployment WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_DimensionDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_DimensionDeployment (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_DimensionDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_DimensionDeployment
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_DimensionDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_hierarchyLevelAssociation', 'Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_ValueBasedHierarchyOwnsDimensionDeployments_valueBasedHierarchy', 'Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentOwnsStructureMaps_structureMap', 'Delete_Olap_DimensionDeploymentOwnsStructureMaps', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentHasListOfValues_listOfValues', 'Delete_Olap_DimensionDeploymentHasListOfValues', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentHasImmediateParent_immediateParent', 'Delete_Olap_DimensionDeploymentHasImmediateParent', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DeploymentGroupReferencesDimensionDeployments_deploymentGroup', 'Delete_Olap_DeploymentGroupReferencesDimensionDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_DimensionDeployment WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_DimensionDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment
   @_ID INT
AS
   SELECT Olap_DimensionDeployment._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_DimensionDeployment,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_DimensionDeployment._ID = @_ID
        AND Olap_DimensionDeployment._ID = Core_Classifier._ID
        AND Olap_DimensionDeployment._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_DimensionDeployment
AS
   SELECT Olap_DimensionDeployment._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_DimensionDeployment,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_DimensionDeployment._ID = Core_Classifier._ID
        AND Olap_DimensionDeployment._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_DimensionDeployment._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_DimensionDeployment,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_DimensionDeployment._ID = Core_Classifier._ID
           AND Olap_DimensionDeployment._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_DimensionDeployment
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_DimensionDeployment
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_DimensionDeployment @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 140
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_DimensionDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionDeployment
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_DimensionDeployment @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_DimensionDeployment
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 140
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_DimensionDeployment
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 140
   RETURN @@Error
GO


PRINT 'Class Olap.Hierarchy'
GO

CREATE TABLE Olap_Hierarchy
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(141, 'Olap.Hierarchy')
GO

CREATE PROCEDURE Get_Olap_Hierarchy_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Hierarchy_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Hierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Hierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Hierarchy
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Hierarchy WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Hierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Hierarchy (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Hierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Hierarchy
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Hierarchy
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (143, 147)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionOwnsHierarchies_dimension', 'Delete_Olap_DimensionOwnsHierarchies', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionHasDefaultHierarchy_defaultedDimension', 'Delete_Olap_DimensionHasDefaultHierarchy', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_cubeDimensionAssociation', 'Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Hierarchy WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Hierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy
   @_ID INT
AS
   SELECT Olap_Hierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Hierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Hierarchy._ID = @_ID
        AND Olap_Hierarchy._ID = Core_Classifier._ID
        AND Olap_Hierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Hierarchy
AS
   SELECT Olap_Hierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Hierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Hierarchy._ID = Core_Classifier._ID
        AND Olap_Hierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Hierarchy._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Hierarchy,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_Hierarchy._ID = Core_Classifier._ID
           AND Olap_Hierarchy._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Hierarchy
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (141, 143, 147)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Hierarchy
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 141
   RETURN @@Error
GO


PRINT 'Class Olap.HierarchyLevelAssociation'
GO

CREATE TABLE Olap_HierarchyLevelAssociation
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(142, 'Olap.HierarchyLevelAssociation')
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_HierarchyLevelAssociation_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_HierarchyLevelAssociation_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_HierarchyLevelAssociation_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_HierarchyLevelAssociation
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_HierarchyLevelAssociation WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_HierarchyL_E17A849A60E0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_HierarchyLevelAssociation (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_HierarchyL_E17A849A60E0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_HierarchyLevelAssociation
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Hierarchy_7C02A97913B3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_levelBasedHierarchy', 'Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_HierarchyLevelAssocsReferenceLevel_currentLevel', 'Delete_Olap_HierarchyLevelAssocsReferenceLevel', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_dimensionDeployment', 'Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_HierarchyLevelAssociation WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Hierarchy_7C02A97913B3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation
   @_ID INT
AS
   SELECT Olap_HierarchyLevelAssociation._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_HierarchyLevelAssociation,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_HierarchyLevelAssociation._ID = @_ID
        AND Olap_HierarchyLevelAssociation._ID = Core_Classifier._ID
        AND Olap_HierarchyLevelAssociation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_HierarchyLevelAssociation
AS
   SELECT Olap_HierarchyLevelAssociation._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_HierarchyLevelAssociation,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_HierarchyLevelAssociation._ID = Core_Classifier._ID
        AND Olap_HierarchyLevelAssociation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_HierarchyLevelAssociation._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_HierarchyLevelAssociation,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_HierarchyLevelAssociation._ID = Core_Classifier._ID
           AND Olap_HierarchyLevelAssociation._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_HierarchyLevelAssociation
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Hierarc_50619A7BD554
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_HierarchyLevelAssociation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 142
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Hierarc_50619A7BD554
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_HierarchyLevelAssociation
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_HierarchyLevelAssociation @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_HierarchyLevelAssociation
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 142
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_HierarchyLevelAssociation
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 142
   RETURN @@Error
GO


PRINT 'Class Olap.LevelBasedHierarchy'
GO

CREATE TABLE Olap_LevelBasedHierarchy
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(143, 'Olap.LevelBasedHierarchy')
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_LevelBasedHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_LevelBasedHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_LevelBasedHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_LevelBasedHierarchy
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_LevelBasedHierarchy WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_LevelBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Hierarchy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_LevelBasedHierarchy (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_LevelBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_LevelBasedHierarchy
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_LevelBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_hierarchyLevelAssociation', 'Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_LevelBasedHierarchy WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Olap_Hierarchy @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_LevelBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy
   @_ID INT
AS
   SELECT Olap_LevelBasedHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_LevelBasedHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_LevelBasedHierarchy._ID = @_ID
        AND Olap_LevelBasedHierarchy._ID = Core_Classifier._ID
        AND Olap_LevelBasedHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_LevelBasedHierarchy
AS
   SELECT Olap_LevelBasedHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_LevelBasedHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_LevelBasedHierarchy._ID = Core_Classifier._ID
        AND Olap_LevelBasedHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_LevelBasedHierarchy._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_LevelBasedHierarchy,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_LevelBasedHierarchy._ID = Core_Classifier._ID
           AND Olap_LevelBasedHierarchy._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_LevelBasedHierarchy
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_LevelBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_LevelBasedHierarchy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 143
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_LevelBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_LevelBasedHierarchy
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_LevelBasedHierarchy @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_LevelBasedHierarchy
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 143
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_LevelBasedHierarchy
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 143
   RETURN @@Error
GO


PRINT 'Class Olap.MemberSelectionGroup'
GO

CREATE TABLE Olap_MemberSelectionGroup
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(144, 'Olap.MemberSelectionGroup')
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelectionGroup_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelectionGroup_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelectionGroup_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_MemberSelectionGroup
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_MemberSelectionGroup WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_MemberSelectionGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_MemberSelectionGroup (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_MemberSelectionGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_MemberSelectionGroup
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_MemberSelectionGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelection', 'Delete_Olap_MemberSelectionGroupReferencesMemberSelections', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_CubeRegionOwnsMemberSelectionGroups_cubeRegion', 'Delete_Olap_CubeRegionOwnsMemberSelectionGroups', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_MemberSelectionGroup WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_MemberSelectionGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup
   @_ID INT
AS
   SELECT Olap_MemberSelectionGroup._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_MemberSelectionGroup,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_MemberSelectionGroup._ID = @_ID
        AND Olap_MemberSelectionGroup._ID = Core_Classifier._ID
        AND Olap_MemberSelectionGroup._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_MemberSelectionGroup
AS
   SELECT Olap_MemberSelectionGroup._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_MemberSelectionGroup,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_MemberSelectionGroup._ID = Core_Classifier._ID
        AND Olap_MemberSelectionGroup._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_MemberSelectionGroup._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_MemberSelectionGroup,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_MemberSelectionGroup._ID = Core_Classifier._ID
           AND Olap_MemberSelectionGroup._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_MemberSelectionGroup
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_MemberSelectionGroup
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_MemberSelectionGroup @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 144
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_MemberSelectionGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_MemberSelectionGroup
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_MemberSelectionGroup @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_MemberSelectionGroup
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 144
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_MemberSelectionGroup
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 144
   RETURN @@Error
GO


PRINT 'Class Olap.MemberSelection'
GO

CREATE TABLE Olap_MemberSelection
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(145, 'Olap.MemberSelection')
GO

CREATE PROCEDURE Get_Olap_MemberSelection_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelection_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelection_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_MemberSelection_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_MemberSelection
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_MemberSelection WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_MemberSelection
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_MemberSelection (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_MemberSelection
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_MemberSelection
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_MemberSelection
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (148, 149)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionOwnsMemberSelections_dimension', 'Delete_Olap_DimensionOwnsMemberSelections', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelectionGroup', 'Delete_Olap_MemberSelectionGroupReferencesMemberSelections', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_MemberSelection WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_MemberSelection
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection
   @_ID INT
AS
   SELECT Olap_MemberSelection._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_MemberSelection,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_MemberSelection._ID = @_ID
        AND Olap_MemberSelection._ID = Core_Classifier._ID
        AND Olap_MemberSelection._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_MemberSelection
AS
   SELECT Olap_MemberSelection._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_MemberSelection,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_MemberSelection._ID = Core_Classifier._ID
        AND Olap_MemberSelection._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_MemberSelection._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_MemberSelection,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_MemberSelection._ID = Core_Classifier._ID
           AND Olap_MemberSelection._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_MemberSelection
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_MemberSelection
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_MemberSelection @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 145
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_MemberSelection
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_MemberSelection
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_MemberSelection @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_MemberSelection
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (145, 148, 149)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_MemberSelection
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 145
   RETURN @@Error
GO


PRINT 'Class Olap.Schema'
GO

CREATE TABLE Olap_Schema
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(146, 'Olap.Schema')
GO

CREATE PROCEDURE Get_Olap_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Schema_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Schema_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Schema
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Schema WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Schema (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Schema
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsCubes_cube', 'Delete_Olap_SchemaOwnsCubes', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsDimensions_dimension', 'Delete_Olap_SchemaOwnsDimensions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_SchemaOwnsDeploymentGroups_deploymentGroup', 'Delete_Olap_SchemaOwnsDeploymentGroups', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Schema WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema
   @_ID INT
AS
   SELECT Olap_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Schema,
           Core_ModelElement
      WHERE Olap_Schema._ID = @_ID
        AND Olap_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Schema
AS
   SELECT Olap_Schema._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Schema,
           Core_ModelElement
      WHERE Olap_Schema._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Schema._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Schema,
              Core_ModelElement
         WHERE Olap_Schema._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_Schema
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Schema @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 146
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_Schema
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_Schema @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Schema
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 146
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Schema
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 146
   RETURN @@Error
GO


PRINT 'Class Olap.ValueBasedHierarchy'
GO

CREATE TABLE Olap_ValueBasedHierarchy
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(147, 'Olap.ValueBasedHierarchy')
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ValueBasedHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ValueBasedHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_ValueBasedHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_ValueBasedHierarchy
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_ValueBasedHierarchy WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_ValueBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Hierarchy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_ValueBasedHierarchy (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_ValueBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_ValueBasedHierarchy
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_ValueBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_ValueBasedHierarchyOwnsDimensionDeployments_dimensionDeployment', 'Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_ValueBasedHierarchy WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Olap_Hierarchy @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_ValueBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy
   @_ID INT
AS
   SELECT Olap_ValueBasedHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_ValueBasedHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_ValueBasedHierarchy._ID = @_ID
        AND Olap_ValueBasedHierarchy._ID = Core_Classifier._ID
        AND Olap_ValueBasedHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_ValueBasedHierarchy
AS
   SELECT Olap_ValueBasedHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_ValueBasedHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_ValueBasedHierarchy._ID = Core_Classifier._ID
        AND Olap_ValueBasedHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_ValueBasedHierarchy._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_ValueBasedHierarchy,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_ValueBasedHierarchy._ID = Core_Classifier._ID
           AND Olap_ValueBasedHierarchy._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_ValueBasedHierarchy
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_ValueBasedHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_ValueBasedHierarchy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 147
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_ValueBasedHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_ValueBasedHierarchy
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_ValueBasedHierarchy @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_ValueBasedHierarchy
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 147
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_ValueBasedHierarchy
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 147
   RETURN @@Error
GO


PRINT 'Class Olap.Level'
GO

CREATE TABLE Olap_Level
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(148, 'Olap.Level')
GO

CREATE PROCEDURE Get_Olap_Level_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Level_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Level_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Level_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Level
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Level WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Level
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_MemberSelection @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Level (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Level
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Level
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Level
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (149)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_HierarchyLevelAssocsReferenceLevel_hierarchyLevelAssociation', 'Delete_Olap_HierarchyLevelAssocsReferenceLevel', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Level WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Olap_MemberSelection @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Level
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level
   @_ID INT
AS
   SELECT Olap_Level._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Level,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Level._ID = @_ID
        AND Olap_Level._ID = Core_Classifier._ID
        AND Olap_Level._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Level
AS
   SELECT Olap_Level._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Level,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_Level._ID = Core_Classifier._ID
        AND Olap_Level._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Level._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Level,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_Level._ID = Core_Classifier._ID
           AND Olap_Level._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_Level
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Level
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Level @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 148
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Level
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_Level
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_Level @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Level
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (148, 149)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Level
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 148
   RETURN @@Error
GO


PRINT 'Class Olap.CodedLevel'
GO

CREATE TABLE Olap_CodedLevel
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,encoding_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_ExpressionNode(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(149, 'Olap.CodedLevel')
GO

CREATE PROCEDURE Get_Olap_CodedLevel_encoding
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = encoding_ID FROM Olap_CodedLevel WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_Olap_CodedLevel_encoding
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE Olap_CodedLevel SET encoding_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CodedLevel_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CodedLevel_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_CodedLevel_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_CodedLevel
   @_ID INT OUTPUT
AS
   DECLARE @encoding_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_CodedLevel WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_CodedLevel
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Level @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Expressions_ExpressionNode @encoding_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT Olap_CodedLevel (_ID, encoding_ID)
            VALUES (@_ID, @encoding_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_Olap_CodedLevel
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_CodedLevel
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @encoding_ID INT
   EXECUTE @Error = Get_Olap_CodedLevel_encoding @_ID, @encoding_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_Olap_CodedLevel
      SELECT @Error = @@Error
      IF @Error = 0 AND @encoding_ID IS NOT NULL
         EXECUTE @Error = Drop_Expressions_ExpressionNode @encoding_ID
      IF @Error = 0
      BEGIN
         DELETE FROM Olap_CodedLevel WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Olap_Level @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_Olap_CodedLevel
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel
   @_ID INT
AS
   SELECT Olap_CodedLevel._ID AS _ID,
          Olap_CodedLevel.encoding_ID AS encoding_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CodedLevel,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CodedLevel._ID = @_ID
        AND Olap_CodedLevel._ID = Core_Classifier._ID
        AND Olap_CodedLevel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_CodedLevel
AS
   SELECT Olap_CodedLevel._ID AS _ID,
          Olap_CodedLevel.encoding_ID AS encoding_ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_CodedLevel,
           Core_Classifier,
           Core_ModelElement
      WHERE Olap_CodedLevel._ID = Core_Classifier._ID
        AND Olap_CodedLevel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_CodedLevel._ID AS _ID,
             Olap_CodedLevel.encoding_ID AS encoding_ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_CodedLevel,
              Core_Classifier,
              Core_ModelElement
         WHERE Olap_CodedLevel._ID = Core_Classifier._ID
           AND Olap_CodedLevel._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CodedLevel
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_CodedLevel
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_CodedLevel @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 149
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_CodedLevel
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CodedLevel
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_CodedLevel @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_CodedLevel
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 149
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_CodedLevel
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 149
   RETURN @@Error
GO


PRINT 'Class Olap.Measure'
GO

CREATE TABLE Olap_Measure
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(150, 'Olap.Measure')
GO

CREATE PROCEDURE Get_Olap_Measure_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_Measure_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_Measure
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_Measure WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_Measure
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_Measure (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_Measure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_Measure
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_Measure
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_Measure WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_Measure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure
   @_ID INT
AS
   SELECT Olap_Measure._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Measure,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Olap_Measure._ID = @_ID
        AND Olap_Measure._ID = Core_Attribute._ID
        AND Olap_Measure._ID = Core_StructuralFeature._ID
        AND Olap_Measure._ID = Core_Feature._ID
        AND Olap_Measure._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_Measure
AS
   SELECT Olap_Measure._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_Measure,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE Olap_Measure._ID = Core_Attribute._ID
        AND Olap_Measure._ID = Core_StructuralFeature._ID
        AND Olap_Measure._ID = Core_Feature._ID
        AND Olap_Measure._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Measure
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_Measure._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_Measure,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE Olap_Measure._ID = Core_Attribute._ID
           AND Olap_Measure._ID = Core_StructuralFeature._ID
           AND Olap_Measure._ID = Core_Feature._ID
           AND Olap_Measure._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_Measure
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_Measure
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_Measure @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 150
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_Measure
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_Measure
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_Measure @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_Measure
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 150
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_Measure
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 150
   RETURN @@Error
GO


PRINT 'Class Olap.StructureMap'
GO

CREATE TABLE Olap_StructureMap
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(151, 'Olap.StructureMap')
GO

CREATE PROCEDURE Get_Olap_StructureMap_function
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_function @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_StructureMap_function
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_function @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_functionDescription @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_StructureMap_functionDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_functionDescription @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_isPrimary
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_Transformation_isPrimary @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_StructureMap_isPrimary
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Transformation_Transformation_isPrimary @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_StructureMap_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_Olap_StructureMap_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_Olap_StructureMap
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM Olap_StructureMap WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Transformation_TransformationMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT Olap_StructureMap (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_Olap_StructureMap
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentOwnsStructureMaps_dimensionDeployment', 'Delete_Olap_DimensionDeploymentOwnsStructureMaps', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentHasListOfValues_dimensionDeploymentLV', 'Delete_Olap_DimensionDeploymentHasListOfValues', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_Olap_DimensionDeploymentHasImmediateParent_dimensionDeploymentIP', 'Delete_Olap_DimensionDeploymentHasImmediateParent', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM Olap_StructureMap WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Transformation_TransformationMap @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap
   @_ID INT
AS
   SELECT Olap_StructureMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_StructureMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Olap_StructureMap._ID = @_ID
        AND Olap_StructureMap._ID = Transformation_Transformation._ID
        AND Olap_StructureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_Olap_StructureMap
AS
   SELECT Olap_StructureMap._ID AS _ID,
          Transformation_Transformation.function_ID AS function_ID,
          Transformation_Transformation.functionDescription AS functionDescription,
          Transformation_Transformation.isPrimary AS isPrimary,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM Olap_StructureMap,
           Transformation_Transformation,
           Core_ModelElement
      WHERE Olap_StructureMap._ID = Transformation_Transformation._ID
        AND Olap_StructureMap._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT Olap_StructureMap._ID AS _ID,
             Transformation_Transformation.function_ID AS function_ID,
             Transformation_Transformation.functionDescription AS functionDescription,
             Transformation_Transformation.isPrimary AS isPrimary,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM Olap_StructureMap,
              Transformation_Transformation,
              Core_ModelElement
         WHERE Olap_StructureMap._ID = Transformation_Transformation._ID
           AND Olap_StructureMap._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_StructureMap
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Olap_StructureMap @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 151
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_StructureMap
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_Olap_StructureMap @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_Olap_StructureMap
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 151
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_Olap_StructureMap
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 151
   RETURN @@Error
GO


--
-- DataMining Classes
--

PRINT 'Class DataMining.ApplicationInputSpecification'
GO

CREATE TABLE DataMining_ApplicationInputSpecification
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(152, 'DataMining.ApplicationInputSpecification')
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationInputSpecification_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationInputSpecification_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationInputSpecification_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_ApplicationInputSpecification
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_ApplicationInputSpecification WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Appl_F912342FA2AF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_ApplicationInputSpecification (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Appl_F912342FA2AF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_ApplicationInputSpecification
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_App_7D3930C0620A
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_InputSpecOwnsAttributes_inputAttribute', 'Delete_DataMining_InputSpecOwnsAttributes', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_MiningModelOwnsInputSpecification_miningModel', 'Delete_DataMining_MiningModelOwnsInputSpecification', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_ApplicationInputSpecification WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_App_7D3930C0620A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification
   @_ID INT
AS
   SELECT DataMining_ApplicationInputSpecification._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ApplicationInputSpecification,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ApplicationInputSpecification._ID = @_ID
        AND DataMining_ApplicationInputSpecification._ID = Core_Classifier._ID
        AND DataMining_ApplicationInputSpecification._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_ApplicationInputSpecification
AS
   SELECT DataMining_ApplicationInputSpecification._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ApplicationInputSpecification,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ApplicationInputSpecification._ID = Core_Classifier._ID
        AND DataMining_ApplicationInputSpecification._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_ApplicationInputSpecification._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_ApplicationInputSpecification,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_ApplicationInputSpecification._ID = Core_Classifier._ID
           AND DataMining_ApplicationInputSpecification._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ApplicationInputSpecification
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_A_7A4A75B82029
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_ApplicationInputSpecification @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 152
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_A_7A4A75B82029
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ApplicationInputSpecification
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_ApplicationInputSpecification @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_ApplicationInputSpecification
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 152
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_ApplicationInputSpecification
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 152
   RETURN @@Error
GO


PRINT 'Class DataMining.AttributeUsageRelation'
GO

CREATE TABLE DataMining_AttributeUsageRelation
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,usageType VARCHAR(128) NOT NULL
   ,includeInApplyResult BIT NOT NULL
   ,weight FLOAT NOT NULL
   ,suppressNormalization BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(153, 'DataMining.AttributeUsageRelation')
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_usageType
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = DataMining_AttributeUsageRelation.usageType
      FROM DataMining_AttributeUsageRelation
      WHERE DataMining_AttributeUsageRelation._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_usageType
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE DataMining_AttributeUsageRelation
      SET usageType = 
          (SELECT _EnumLiteral FROM DataMining_AttributeUsage WHERE _EnumLiteral = @_Value)
      WHERE DataMining_AttributeUsageRelation._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_includeInApplyResult
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = includeInApplyResult FROM DataMining_AttributeUsageRelation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_includeInApplyResult
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataMining_AttributeUsageRelation SET includeInApplyResult = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_weight
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = weight FROM DataMining_AttributeUsageRelation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_weight
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE DataMining_AttributeUsageRelation SET weight = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_suppressNormalization
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = suppressNormalization FROM DataMining_AttributeUsageRelation WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_suppressNormalization
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataMining_AttributeUsageRelation SET suppressNormalization = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AttributeUsageRelation_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_AttributeUsageRelation
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_AttributeUsageRelation WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Attr_2B9F4C8375B4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_AttributeUsageRelation (_ID, usageType, includeInApplyResult, weight, suppressNormalization)
         VALUES (@_ID, 'active', 0, 0.0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Attr_2B9F4C8375B4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_AttributeUsageRelation
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Att_51BAFFA45FF4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ContainsAttributeUsage_settings', 'Delete_DataMining_ContainsAttributeUsage', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_PertainsToAttribute_attribute', 'Delete_DataMining_PertainsToAttribute', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_AttributeUsageRelation WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Att_51BAFFA45FF4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation
   @_ID INT
AS
   SELECT DataMining_AttributeUsageRelation._ID AS _ID,
          DataMining_AttributeUsageRelation.usageType AS usageType,
          DataMining_AttributeUsageRelation.includeInApplyResult AS includeInApplyResult,
          DataMining_AttributeUsageRelation.weight AS weight,
          DataMining_AttributeUsageRelation.suppressNormalization AS suppressNormalization,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_AttributeUsageRelation,
           Core_ModelElement
      WHERE DataMining_AttributeUsageRelation._ID = @_ID
        AND DataMining_AttributeUsageRelation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_AttributeUsageRelation
AS
   SELECT DataMining_AttributeUsageRelation._ID AS _ID,
          DataMining_AttributeUsageRelation.usageType AS usageType,
          DataMining_AttributeUsageRelation.includeInApplyResult AS includeInApplyResult,
          DataMining_AttributeUsageRelation.weight AS weight,
          DataMining_AttributeUsageRelation.suppressNormalization AS suppressNormalization,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_AttributeUsageRelation,
           Core_ModelElement
      WHERE DataMining_AttributeUsageRelation._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AttributeUsageRelation
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_AttributeUsageRelation._ID AS _ID,
             DataMining_AttributeUsageRelation.usageType AS usageType,
             DataMining_AttributeUsageRelation.includeInApplyResult AS includeInApplyResult,
             DataMining_AttributeUsageRelation.weight AS weight,
             DataMining_AttributeUsageRelation.suppressNormalization AS suppressNormalization,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_AttributeUsageRelation,
              Core_ModelElement
         WHERE DataMining_AttributeUsageRelation._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_AttributeUsageRelation
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_A_40F0BEE7C9BD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_AttributeUsageRelation @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 153
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_A_40F0BEE7C9BD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_AttributeUsageRelation
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_AttributeUsageRelation @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_AttributeUsageRelation
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 153
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_AttributeUsageRelation
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 153
   RETURN @@Error
GO


PRINT 'Class DataMining.Category'
GO

CREATE TABLE DataMining_Category
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,displayValue VARCHAR(256) NOT NULL
   ,property VARCHAR(128) NOT NULL
   ,[value] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(154, 'DataMining.Category')
GO

CREATE PROCEDURE Get_DataMining_Category_displayValue
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = displayValue FROM DataMining_Category WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_Category_displayValue
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_Category SET displayValue = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_Category_property
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = DataMining_Category.property
      FROM DataMining_Category
      WHERE DataMining_Category._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_Category_property
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE DataMining_Category
      SET property = 
          (SELECT _EnumLiteral FROM DataMining_CategoryProperty WHERE _EnumLiteral = @_Value)
      WHERE DataMining_Category._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_Category_value
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [value] FROM DataMining_Category WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_Category_value
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_Category SET [value] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_Category_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_Category_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_Category_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_Category
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_Category WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Category
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_Category (_ID, displayValue, property, [value])
         VALUES (@_ID, '', 'missing', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Category
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_Category
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Category
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ContainsCategory_categoricalAttribute', 'Delete_DataMining_ContainsCategory', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_OrdersCategory_ordinalAttribute', 'Delete_DataMining_OrdersCategory', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_Category WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Category
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category
   @_ID INT
AS
   SELECT DataMining_Category._ID AS _ID,
          DataMining_Category.displayValue AS displayValue,
          DataMining_Category.property AS property,
          DataMining_Category.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_Category,
           Core_ModelElement
      WHERE DataMining_Category._ID = @_ID
        AND DataMining_Category._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_Category
AS
   SELECT DataMining_Category._ID AS _ID,
          DataMining_Category.displayValue AS displayValue,
          DataMining_Category.property AS property,
          DataMining_Category.[value] AS [value],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_Category,
           Core_ModelElement
      WHERE DataMining_Category._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_Category
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_Category._ID AS _ID,
             DataMining_Category.displayValue AS displayValue,
             DataMining_Category.property AS property,
             DataMining_Category.[value] AS [value],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_Category,
              Core_ModelElement
         WHERE DataMining_Category._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_Category
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_Category
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_Category @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 154
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_Category
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_Category
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_Category @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_Category
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 154
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_Category
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 154
   RETURN @@Error
GO


PRINT 'Class DataMining.CategoryHierarchy'
GO

CREATE TABLE DataMining_CategoryHierarchy
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(155, 'DataMining.CategoryHierarchy')
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoryHierarchy_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoryHierarchy_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoryHierarchy_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_CategoryHierarchy
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_CategoryHierarchy WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_CategoryHierarchy
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_CategoryHierarchy (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_CategoryHierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_CategoryHierarchy
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Cat_172303D526C6
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsTaxonomy_categoricalAttribute', 'Delete_DataMining_UsesAsTaxonomy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_CategoryHierarchy WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Cat_172303D526C6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy
   @_ID INT
AS
   SELECT DataMining_CategoryHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CategoryHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_CategoryHierarchy._ID = @_ID
        AND DataMining_CategoryHierarchy._ID = Core_Classifier._ID
        AND DataMining_CategoryHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_CategoryHierarchy
AS
   SELECT DataMining_CategoryHierarchy._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CategoryHierarchy,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_CategoryHierarchy._ID = Core_Classifier._ID
        AND DataMining_CategoryHierarchy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_CategoryHierarchy._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_CategoryHierarchy,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_CategoryHierarchy._ID = Core_Classifier._ID
           AND DataMining_CategoryHierarchy._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_CategoryHierarchy
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_C_F813E72A522C
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_CategoryHierarchy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 155
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_C_F813E72A522C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_CategoryHierarchy
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_CategoryHierarchy @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_CategoryHierarchy
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 155
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_CategoryHierarchy
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 155
   RETURN @@Error
GO


PRINT 'Class DataMining.CostMatrix'
GO

CREATE TABLE DataMining_CostMatrix
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(156, 'DataMining.CostMatrix')
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CostMatrix_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CostMatrix_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CostMatrix_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_CostMatrix
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_CostMatrix WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_CostMatrix
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_CostMatrix (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_CostMatrix
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_CostMatrix
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_CostMatrix
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesCostMatrix_settings', 'Delete_DataMining_UsesCostMatrix', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_CostMatrix WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_CostMatrix
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix
   @_ID INT
AS
   SELECT DataMining_CostMatrix._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CostMatrix,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_CostMatrix._ID = @_ID
        AND DataMining_CostMatrix._ID = Core_Classifier._ID
        AND DataMining_CostMatrix._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_CostMatrix
AS
   SELECT DataMining_CostMatrix._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CostMatrix,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_CostMatrix._ID = Core_Classifier._ID
        AND DataMining_CostMatrix._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_CostMatrix._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_CostMatrix,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_CostMatrix._ID = Core_Classifier._ID
           AND DataMining_CostMatrix._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_CostMatrix
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_CostMatrix
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_CostMatrix @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 156
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_CostMatrix
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_CostMatrix
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_CostMatrix @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_CostMatrix
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 156
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_CostMatrix
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 156
   RETURN @@Error
GO


PRINT 'Class DataMining.MiningAttribute'
GO

CREATE TABLE DataMining_MiningAttribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(157, 'DataMining.MiningAttribute')
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_MiningAttribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_MiningAttribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_MiningAttribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_MiningAttribute (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_MiningAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_MiningAttribute
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_MiningAttribute
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (161, 163, 164)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_HasAttribute_dataSpecification', 'Delete_DataMining_HasAttribute', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_PertainsToAttribute_attributeUsage', 'Delete_DataMining_PertainsToAttribute', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesItemId_settings', 'Delete_DataMining_UsesItemId', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesTransactionId_settings', 'Delete_DataMining_UsesTransactionId', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsTarget_settings', 'Delete_DataMining_UsesAsTarget', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_MiningAttribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_MiningAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute
   @_ID INT
AS
   SELECT DataMining_MiningAttribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_MiningAttribute._ID = @_ID
        AND DataMining_MiningAttribute._ID = Core_Attribute._ID
        AND DataMining_MiningAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_MiningAttribute._ID = Core_Feature._ID
        AND DataMining_MiningAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_MiningAttribute
AS
   SELECT DataMining_MiningAttribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_MiningAttribute._ID = Core_Attribute._ID
        AND DataMining_MiningAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_MiningAttribute._ID = Core_Feature._ID
        AND DataMining_MiningAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningAttribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_MiningAttribute._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_MiningAttribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataMining_MiningAttribute._ID = Core_Attribute._ID
           AND DataMining_MiningAttribute._ID = Core_StructuralFeature._ID
           AND DataMining_MiningAttribute._ID = Core_Feature._ID
           AND DataMining_MiningAttribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningAttribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_M_AC1DF71383AE
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 157
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_M_AC1DF71383AE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningAttribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_MiningAttribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_MiningAttribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (157, 161, 163, 164)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_MiningAttribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 157
   RETURN @@Error
GO


PRINT 'Class DataMining.MiningDataSpecification'
GO

CREATE TABLE DataMining_MiningDataSpecification
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(158, 'DataMining.MiningDataSpecification')
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningDataSpecification_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningDataSpecification_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningDataSpecification_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_MiningDataSpecification
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_MiningDataSpecification WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Mini_1457375E811F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_MiningDataSpecification (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Mini_1457375E811F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_MiningDataSpecification
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Min_A3921F472B20
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_HasAttribute_attribute', 'Delete_DataMining_HasAttribute', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsInput_settings', 'Delete_DataMining_UsesAsInput', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_MiningDataSpecification WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Min_A3921F472B20
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification
   @_ID INT
AS
   SELECT DataMining_MiningDataSpecification._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningDataSpecification,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningDataSpecification._ID = @_ID
        AND DataMining_MiningDataSpecification._ID = Core_Classifier._ID
        AND DataMining_MiningDataSpecification._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_MiningDataSpecification
AS
   SELECT DataMining_MiningDataSpecification._ID AS _ID,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningDataSpecification,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningDataSpecification._ID = Core_Classifier._ID
        AND DataMining_MiningDataSpecification._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_MiningDataSpecification._ID AS _ID,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_MiningDataSpecification,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_MiningDataSpecification._ID = Core_Classifier._ID
           AND DataMining_MiningDataSpecification._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningDataSpecification
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_M_C13739ADF546
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningDataSpecification @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 158
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_M_C13739ADF546
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningDataSpecification
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_MiningDataSpecification @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_MiningDataSpecification
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 158
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_MiningDataSpecification
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 158
   RETURN @@Error
GO


PRINT 'Class DataMining.MiningModel'
GO

CREATE TABLE DataMining_MiningModel
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[function] VARCHAR(256) NOT NULL
   ,algorithm VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(159, 'DataMining.MiningModel')
GO

CREATE PROCEDURE Get_DataMining_MiningModel_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [function] FROM DataMining_MiningModel WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_MiningModel_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_MiningModel SET [function] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = algorithm FROM DataMining_MiningModel WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_MiningModel_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_MiningModel SET algorithm = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModel_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModel_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModel_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_MiningModel
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_MiningModel WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_MiningModel
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_MiningModel (_ID, [function], algorithm)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_MiningModel
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_MiningModel
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_MiningModel
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (162)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_DerivedFromSettings_settings', 'Delete_DataMining_DerivedFromSettings', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ProducedByModel_miningResult', 'Delete_DataMining_ProducedByModel', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_MiningModelOwnsInputSpecification_inputSpec', 'Delete_DataMining_MiningModelOwnsInputSpecification', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_MiningModel WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_MiningModel
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel
   @_ID INT
AS
   SELECT DataMining_MiningModel._ID AS _ID,
          DataMining_MiningModel.[function] AS [function],
          DataMining_MiningModel.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningModel,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningModel._ID = @_ID
        AND DataMining_MiningModel._ID = Core_Classifier._ID
        AND DataMining_MiningModel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_MiningModel
AS
   SELECT DataMining_MiningModel._ID AS _ID,
          DataMining_MiningModel.[function] AS [function],
          DataMining_MiningModel.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningModel,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningModel._ID = Core_Classifier._ID
        AND DataMining_MiningModel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_MiningModel._ID AS _ID,
             DataMining_MiningModel.[function] AS [function],
             DataMining_MiningModel.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_MiningModel,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_MiningModel._ID = Core_Classifier._ID
           AND DataMining_MiningModel._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningModel
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_MiningModel
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningModel @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 159
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_MiningModel
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningModel
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_MiningModel @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_MiningModel
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (159, 162)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_MiningModel
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 159
   RETURN @@Error
GO


PRINT 'Class DataMining.MiningModelResult'
GO

CREATE TABLE DataMining_MiningModelResult
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,type VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(160, 'DataMining.MiningModelResult')
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM DataMining_MiningModelResult WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_MiningModelResult_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_MiningModelResult SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModelResult_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModelResult_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningModelResult_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_MiningModelResult
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_MiningModelResult WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_MiningModelResult
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_MiningModelResult (_ID, type)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_MiningModelResult
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_MiningModelResult
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Min_702E26DEFC6A
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ProducedByModel_model', 'Delete_DataMining_ProducedByModel', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_MiningModelResult WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Min_702E26DEFC6A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult
   @_ID INT
AS
   SELECT DataMining_MiningModelResult._ID AS _ID,
          DataMining_MiningModelResult.type AS type,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningModelResult,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningModelResult._ID = @_ID
        AND DataMining_MiningModelResult._ID = Core_Classifier._ID
        AND DataMining_MiningModelResult._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_MiningModelResult
AS
   SELECT DataMining_MiningModelResult._ID AS _ID,
          DataMining_MiningModelResult.type AS type,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningModelResult,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningModelResult._ID = Core_Classifier._ID
        AND DataMining_MiningModelResult._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_MiningModelResult._ID AS _ID,
             DataMining_MiningModelResult.type AS type,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_MiningModelResult,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_MiningModelResult._ID = Core_Classifier._ID
           AND DataMining_MiningModelResult._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningModelResult
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_M_E13117EA6371
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningModelResult @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 160
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_M_E13117EA6371
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningModelResult
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_MiningModelResult @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_MiningModelResult
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 160
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_MiningModelResult
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 160
   RETURN @@Error
GO


PRINT 'Class DataMining.NumericAttribute'
GO

CREATE TABLE DataMining_NumericAttribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,lowerBound FLOAT NOT NULL
   ,upperBound FLOAT NOT NULL
   ,isCyclic BIT NOT NULL
   ,isDiscrete BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(161, 'DataMining.NumericAttribute')
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_lowerBound
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = lowerBound FROM DataMining_NumericAttribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_lowerBound
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE DataMining_NumericAttribute SET lowerBound = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_upperBound
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = upperBound FROM DataMining_NumericAttribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_upperBound
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE DataMining_NumericAttribute SET upperBound = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_isCyclic
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isCyclic FROM DataMining_NumericAttribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_isCyclic
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataMining_NumericAttribute SET isCyclic = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_isDiscrete
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isDiscrete FROM DataMining_NumericAttribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_isDiscrete
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataMining_NumericAttribute SET isDiscrete = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_NumericAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_NumericAttribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_NumericAttribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_NumericAttribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_NumericAttribute (_ID, lowerBound, upperBound, isCyclic, isDiscrete)
         VALUES (@_ID, 0.0, 0.0, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_NumericAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_NumericAttribute
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_NumericAttribute
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_NumericAttribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningAttribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_NumericAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute
   @_ID INT
AS
   SELECT DataMining_NumericAttribute._ID AS _ID,
          DataMining_NumericAttribute.lowerBound AS lowerBound,
          DataMining_NumericAttribute.upperBound AS upperBound,
          DataMining_NumericAttribute.isCyclic AS isCyclic,
          DataMining_NumericAttribute.isDiscrete AS isDiscrete,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_NumericAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_NumericAttribute._ID = @_ID
        AND DataMining_NumericAttribute._ID = Core_Attribute._ID
        AND DataMining_NumericAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_NumericAttribute._ID = Core_Feature._ID
        AND DataMining_NumericAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_NumericAttribute
AS
   SELECT DataMining_NumericAttribute._ID AS _ID,
          DataMining_NumericAttribute.lowerBound AS lowerBound,
          DataMining_NumericAttribute.upperBound AS upperBound,
          DataMining_NumericAttribute.isCyclic AS isCyclic,
          DataMining_NumericAttribute.isDiscrete AS isDiscrete,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_NumericAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_NumericAttribute._ID = Core_Attribute._ID
        AND DataMining_NumericAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_NumericAttribute._ID = Core_Feature._ID
        AND DataMining_NumericAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_NumericAttribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_NumericAttribute._ID AS _ID,
             DataMining_NumericAttribute.lowerBound AS lowerBound,
             DataMining_NumericAttribute.upperBound AS upperBound,
             DataMining_NumericAttribute.isCyclic AS isCyclic,
             DataMining_NumericAttribute.isDiscrete AS isDiscrete,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_NumericAttribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataMining_NumericAttribute._ID = Core_Attribute._ID
           AND DataMining_NumericAttribute._ID = Core_StructuralFeature._ID
           AND DataMining_NumericAttribute._ID = Core_Feature._ID
           AND DataMining_NumericAttribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_NumericAttribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_N_2116C3EFF7A1
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_NumericAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 161
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_N_2116C3EFF7A1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_NumericAttribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_NumericAttribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_NumericAttribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 161
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_NumericAttribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 161
   RETURN @@Error
GO


PRINT 'Class DataMining.SupervisedMiningModel'
GO

CREATE TABLE DataMining_SupervisedMiningModel
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(162, 'DataMining.SupervisedMiningModel')
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningModel_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningModel_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningModel_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningModel_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningModel_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningModel_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningModel_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningModel_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningModel_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_SupervisedMiningModel
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_SupervisedMiningModel WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Supe_BA0D11060167
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningModel @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_SupervisedMiningModel (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Supe_BA0D11060167
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_SupervisedMiningModel
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Sup_980288A852ED
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_SupervisedMiningModelReferencesTargetAttribute_target', 'Delete_DataMining_SupervisedMiningModelReferencesTargetAttribute', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_SupervisedMiningModel WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningModel @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Sup_980288A852ED
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel
   @_ID INT
AS
   SELECT DataMining_SupervisedMiningModel._ID AS _ID,
          DataMining_MiningModel.[function] AS [function],
          DataMining_MiningModel.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_SupervisedMiningModel,
           DataMining_MiningModel,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_SupervisedMiningModel._ID = @_ID
        AND DataMining_SupervisedMiningModel._ID = DataMining_MiningModel._ID
        AND DataMining_SupervisedMiningModel._ID = Core_Classifier._ID
        AND DataMining_SupervisedMiningModel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_SupervisedMiningModel
AS
   SELECT DataMining_SupervisedMiningModel._ID AS _ID,
          DataMining_MiningModel.[function] AS [function],
          DataMining_MiningModel.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_SupervisedMiningModel,
           DataMining_MiningModel,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_SupervisedMiningModel._ID = DataMining_MiningModel._ID
        AND DataMining_SupervisedMiningModel._ID = Core_Classifier._ID
        AND DataMining_SupervisedMiningModel._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_SupervisedMiningModel._ID AS _ID,
             DataMining_MiningModel.[function] AS [function],
             DataMining_MiningModel.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_SupervisedMiningModel,
              DataMining_MiningModel,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_SupervisedMiningModel._ID = DataMining_MiningModel._ID
           AND DataMining_SupervisedMiningModel._ID = Core_Classifier._ID
           AND DataMining_SupervisedMiningModel._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_SupervisedMiningModel
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_S_CFFC403B50B0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_SupervisedMiningModel @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 162
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_S_CFFC403B50B0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_SupervisedMiningModel
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_SupervisedMiningModel @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_SupervisedMiningModel
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 162
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_SupervisedMiningModel
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 162
   RETURN @@Error
GO


PRINT 'Class DataMining.CategoricalAttribute'
GO

CREATE TABLE DataMining_CategoricalAttribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(163, 'DataMining.CategoricalAttribute')
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_CategoricalAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_CategoricalAttribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_CategoricalAttribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Cate_BAD86531B3B4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_CategoricalAttribute (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Cate_BAD86531B3B4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_CategoricalAttribute
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Cat_89D034785C30
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (164)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsTaxonomy_taxonomy', 'Delete_DataMining_UsesAsTaxonomy', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ContainsCategory_category', 'Delete_DataMining_ContainsCategory', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_CategoricalAttribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningAttribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Cat_89D034785C30
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute
   @_ID INT
AS
   SELECT DataMining_CategoricalAttribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CategoricalAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_CategoricalAttribute._ID = @_ID
        AND DataMining_CategoricalAttribute._ID = Core_Attribute._ID
        AND DataMining_CategoricalAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_CategoricalAttribute._ID = Core_Feature._ID
        AND DataMining_CategoricalAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_CategoricalAttribute
AS
   SELECT DataMining_CategoricalAttribute._ID AS _ID,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_CategoricalAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_CategoricalAttribute._ID = Core_Attribute._ID
        AND DataMining_CategoricalAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_CategoricalAttribute._ID = Core_Feature._ID
        AND DataMining_CategoricalAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoricalAttribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_CategoricalAttribute._ID AS _ID,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_CategoricalAttribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataMining_CategoricalAttribute._ID = Core_Attribute._ID
           AND DataMining_CategoricalAttribute._ID = Core_StructuralFeature._ID
           AND DataMining_CategoricalAttribute._ID = Core_Feature._ID
           AND DataMining_CategoricalAttribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_CategoricalAttribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_C_775480F099F5
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_CategoricalAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 163
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_C_775480F099F5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_CategoricalAttribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_CategoricalAttribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_CategoricalAttribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (163, 164)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_CategoricalAttribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 163
   RETURN @@Error
GO


PRINT 'Class DataMining.OrdinalAttribute'
GO

CREATE TABLE DataMining_OrdinalAttribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,isCyclic BIT NOT NULL
   ,orderingType VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(164, 'DataMining.OrdinalAttribute')
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_isCyclic
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isCyclic FROM DataMining_OrdinalAttribute WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_isCyclic
    @_ID INT
   ,@_Value BIT
AS
   UPDATE DataMining_OrdinalAttribute SET isCyclic = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_orderingType
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = DataMining_OrdinalAttribute.orderingType
      FROM DataMining_OrdinalAttribute
      WHERE DataMining_OrdinalAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_orderingType
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE DataMining_OrdinalAttribute
      SET orderingType = 
          (SELECT _EnumLiteral FROM DataMining_OrderType WHERE _EnumLiteral = @_Value)
      WHERE DataMining_OrdinalAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_OrdinalAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_OrdinalAttribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_OrdinalAttribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_OrdinalAttribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_CategoricalAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_OrdinalAttribute (_ID, isCyclic, orderingType)
         VALUES (@_ID, 0, 'alphabetic')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_OrdinalAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_OrdinalAttribute
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_OrdinalAttribute
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_OrdersCategory_category', 'Delete_DataMining_OrdersCategory', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_OrdinalAttribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_CategoricalAttribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_OrdinalAttribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute
   @_ID INT
AS
   SELECT DataMining_OrdinalAttribute._ID AS _ID,
          DataMining_OrdinalAttribute.isCyclic AS isCyclic,
          DataMining_OrdinalAttribute.orderingType AS orderingType,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_OrdinalAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_OrdinalAttribute._ID = @_ID
        AND DataMining_OrdinalAttribute._ID = Core_Attribute._ID
        AND DataMining_OrdinalAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_OrdinalAttribute._ID = Core_Feature._ID
        AND DataMining_OrdinalAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_OrdinalAttribute
AS
   SELECT DataMining_OrdinalAttribute._ID AS _ID,
          DataMining_OrdinalAttribute.isCyclic AS isCyclic,
          DataMining_OrdinalAttribute.orderingType AS orderingType,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_OrdinalAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_OrdinalAttribute._ID = Core_Attribute._ID
        AND DataMining_OrdinalAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_OrdinalAttribute._ID = Core_Feature._ID
        AND DataMining_OrdinalAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdinalAttribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_OrdinalAttribute._ID AS _ID,
             DataMining_OrdinalAttribute.isCyclic AS isCyclic,
             DataMining_OrdinalAttribute.orderingType AS orderingType,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_OrdinalAttribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataMining_OrdinalAttribute._ID = Core_Attribute._ID
           AND DataMining_OrdinalAttribute._ID = Core_StructuralFeature._ID
           AND DataMining_OrdinalAttribute._ID = Core_Feature._ID
           AND DataMining_OrdinalAttribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_OrdinalAttribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_O_349A6E550741
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_OrdinalAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 164
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_O_349A6E550741
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_OrdinalAttribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_OrdinalAttribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_OrdinalAttribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 164
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_OrdinalAttribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 164
   RETURN @@Error
GO


PRINT 'Class DataMining.MiningSettings'
GO

CREATE TABLE DataMining_MiningSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[function] VARCHAR(256) NOT NULL
   ,algorithm VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(165, 'DataMining.MiningSettings')
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [function] FROM DataMining_MiningSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_MiningSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_MiningSettings SET [function] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = algorithm FROM DataMining_MiningSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_MiningSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_MiningSettings SET algorithm = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_MiningSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_MiningSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_MiningSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_MiningSettings
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Class @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_MiningSettings (_ID, [function], algorithm)
         VALUES (@_ID, '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_MiningSettings
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_MiningSettings
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_MiningSettings
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (166, 167, 168, 169, 170, 171)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_DerivedFromSettings_miningModel', 'Delete_DataMining_DerivedFromSettings', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_ContainsAttributeUsage_attributeUsage', 'Delete_DataMining_ContainsAttributeUsage', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsInput_dataSpecification', 'Delete_DataMining_UsesAsInput', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_MiningSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Class @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_MiningSettings
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings
   @_ID INT
AS
   SELECT DataMining_MiningSettings._ID AS _ID,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningSettings._ID = @_ID
        AND DataMining_MiningSettings._ID = Core_Classifier._ID
        AND DataMining_MiningSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_MiningSettings
AS
   SELECT DataMining_MiningSettings._ID AS _ID,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_MiningSettings._ID = Core_Classifier._ID
        AND DataMining_MiningSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_MiningSettings._ID AS _ID,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_MiningSettings._ID = Core_Classifier._ID
           AND DataMining_MiningSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_MiningSettings
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 165
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_MiningSettings
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_MiningSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_MiningSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (165, 166, 167, 168, 169, 170, 171)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_MiningSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 165
   RETURN @@Error
GO


PRINT 'Class DataMining.ClusteringSettings'
GO

CREATE TABLE DataMining_ClusteringSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,maxNumberOfClusters INT NOT NULL
   ,clusterIdAttributeName VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(166, 'DataMining.ClusteringSettings')
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_maxNumberOfClusters
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = maxNumberOfClusters FROM DataMining_ClusteringSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_maxNumberOfClusters
    @_ID INT
   ,@_Value INT
AS
   UPDATE DataMining_ClusteringSettings SET maxNumberOfClusters = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_clusterIdAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = clusterIdAttributeName FROM DataMining_ClusteringSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_clusterIdAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_ClusteringSettings SET clusterIdAttributeName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClusteringSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_ClusteringSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_ClusteringSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Clus_7C5D8330DCEB
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_ClusteringSettings (_ID, maxNumberOfClusters, clusterIdAttributeName)
         VALUES (@_ID, 0, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Clus_7C5D8330DCEB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_ClusteringSettings
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Clu_BC2805619251
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_ClusteringSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Clu_BC2805619251
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings
   @_ID INT
AS
   SELECT DataMining_ClusteringSettings._ID AS _ID,
          DataMining_ClusteringSettings.maxNumberOfClusters AS maxNumberOfClusters,
          DataMining_ClusteringSettings.clusterIdAttributeName AS clusterIdAttributeName,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ClusteringSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ClusteringSettings._ID = @_ID
        AND DataMining_ClusteringSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_ClusteringSettings._ID = Core_Classifier._ID
        AND DataMining_ClusteringSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_ClusteringSettings
AS
   SELECT DataMining_ClusteringSettings._ID AS _ID,
          DataMining_ClusteringSettings.maxNumberOfClusters AS maxNumberOfClusters,
          DataMining_ClusteringSettings.clusterIdAttributeName AS clusterIdAttributeName,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ClusteringSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ClusteringSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_ClusteringSettings._ID = Core_Classifier._ID
        AND DataMining_ClusteringSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_ClusteringSettings._ID AS _ID,
             DataMining_ClusteringSettings.maxNumberOfClusters AS maxNumberOfClusters,
             DataMining_ClusteringSettings.clusterIdAttributeName AS clusterIdAttributeName,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_ClusteringSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_ClusteringSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_ClusteringSettings._ID = Core_Classifier._ID
           AND DataMining_ClusteringSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ClusteringSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_C_D22945D9CCD4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_ClusteringSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 166
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_C_D22945D9CCD4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ClusteringSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_ClusteringSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_ClusteringSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 166
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_ClusteringSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 166
   RETURN @@Error
GO


PRINT 'Class DataMining.StatisticsSettings'
GO

CREATE TABLE DataMining_StatisticsSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(167, 'DataMining.StatisticsSettings')
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_StatisticsSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_StatisticsSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_StatisticsSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_StatisticsSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_StatisticsSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_StatisticsSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_StatisticsSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Stat_054EA58F345F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_StatisticsSettings (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Stat_054EA58F345F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_StatisticsSettings
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Sta_E07BA0E3220D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_StatisticsSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Sta_E07BA0E3220D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings
   @_ID INT
AS
   SELECT DataMining_StatisticsSettings._ID AS _ID,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_StatisticsSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_StatisticsSettings._ID = @_ID
        AND DataMining_StatisticsSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_StatisticsSettings._ID = Core_Classifier._ID
        AND DataMining_StatisticsSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_StatisticsSettings
AS
   SELECT DataMining_StatisticsSettings._ID AS _ID,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_StatisticsSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_StatisticsSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_StatisticsSettings._ID = Core_Classifier._ID
        AND DataMining_StatisticsSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_StatisticsSettings._ID AS _ID,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_StatisticsSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_StatisticsSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_StatisticsSettings._ID = Core_Classifier._ID
           AND DataMining_StatisticsSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_StatisticsSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_S_6E723883100F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_StatisticsSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 167
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_S_6E723883100F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_StatisticsSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_StatisticsSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_StatisticsSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 167
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_StatisticsSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 167
   RETURN @@Error
GO


PRINT 'Class DataMining.SupervisedMiningSettings'
GO

CREATE TABLE DataMining_SupervisedMiningSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,confidenceAttributeName VARCHAR(256) NOT NULL
   ,predictedAttributeName VARCHAR(256) NOT NULL
   ,costFunction VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(168, 'DataMining.SupervisedMiningSettings')
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = confidenceAttributeName FROM DataMining_SupervisedMiningSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_SupervisedMiningSettings SET confidenceAttributeName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = predictedAttributeName FROM DataMining_SupervisedMiningSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_SupervisedMiningSettings SET predictedAttributeName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = costFunction FROM DataMining_SupervisedMiningSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE DataMining_SupervisedMiningSettings SET costFunction = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_SupervisedMiningSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_SupervisedMiningSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_SupervisedMiningSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Supe_FA9CD1FD38DA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_SupervisedMiningSettings (_ID, confidenceAttributeName, predictedAttributeName, costFunction)
         VALUES (@_ID, '', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Supe_FA9CD1FD38DA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_SupervisedMiningSettings
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Sup_D5087167AFA0
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (169, 170)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesAsTarget_target', 'Delete_DataMining_UsesAsTarget', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_SupervisedMiningSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Sup_D5087167AFA0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings
   @_ID INT
AS
   SELECT DataMining_SupervisedMiningSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_SupervisedMiningSettings._ID = @_ID
        AND DataMining_SupervisedMiningSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_SupervisedMiningSettings._ID = Core_Classifier._ID
        AND DataMining_SupervisedMiningSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_SupervisedMiningSettings
AS
   SELECT DataMining_SupervisedMiningSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_SupervisedMiningSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_SupervisedMiningSettings._ID = Core_Classifier._ID
        AND DataMining_SupervisedMiningSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_SupervisedMiningSettings._ID AS _ID,
             DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
             DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
             DataMining_SupervisedMiningSettings.costFunction AS costFunction,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_SupervisedMiningSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_SupervisedMiningSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_SupervisedMiningSettings._ID = Core_Classifier._ID
           AND DataMining_SupervisedMiningSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_SupervisedMiningSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_S_B1832D1873FE
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_SupervisedMiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 168
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_S_B1832D1873FE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_SupervisedMiningSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_SupervisedMiningSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_SupervisedMiningSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (168, 169, 170)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_SupervisedMiningSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 168
   RETURN @@Error
GO


PRINT 'Class DataMining.ClassificationSettings'
GO

CREATE TABLE DataMining_ClassificationSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(169, 'DataMining.ClassificationSettings')
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_confidenceAttributeName @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_confidenceAttributeName @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_predictedAttributeName @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_predictedAttributeName @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_costFunction @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_costFunction @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ClassificationSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_ClassificationSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_ClassificationSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Clas_B83E6707FFC3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_SupervisedMiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_ClassificationSettings (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Clas_B83E6707FFC3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_ClassificationSettings
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Cla_4566EED8528D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesCostMatrix_costMatrix', 'Delete_DataMining_UsesCostMatrix', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_ClassificationSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_SupervisedMiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Cla_4566EED8528D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings
   @_ID INT
AS
   SELECT DataMining_ClassificationSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ClassificationSettings,
           DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ClassificationSettings._ID = @_ID
        AND DataMining_ClassificationSettings._ID = DataMining_SupervisedMiningSettings._ID
        AND DataMining_ClassificationSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_ClassificationSettings._ID = Core_Classifier._ID
        AND DataMining_ClassificationSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_ClassificationSettings
AS
   SELECT DataMining_ClassificationSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ClassificationSettings,
           DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_ClassificationSettings._ID = DataMining_SupervisedMiningSettings._ID
        AND DataMining_ClassificationSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_ClassificationSettings._ID = Core_Classifier._ID
        AND DataMining_ClassificationSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_ClassificationSettings._ID AS _ID,
             DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
             DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
             DataMining_SupervisedMiningSettings.costFunction AS costFunction,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_ClassificationSettings,
              DataMining_SupervisedMiningSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_ClassificationSettings._ID = DataMining_SupervisedMiningSettings._ID
           AND DataMining_ClassificationSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_ClassificationSettings._ID = Core_Classifier._ID
           AND DataMining_ClassificationSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ClassificationSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_C_6A582F12C974
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_ClassificationSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 169
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_C_6A582F12C974
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ClassificationSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_ClassificationSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_ClassificationSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 169
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_ClassificationSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 169
   RETURN @@Error
GO


PRINT 'Class DataMining.RegressionSettings'
GO

CREATE TABLE DataMining_RegressionSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(170, 'DataMining.RegressionSettings')
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_confidenceAttributeName @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_confidenceAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_confidenceAttributeName @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_predictedAttributeName @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_predictedAttributeName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_predictedAttributeName @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningSettings_costFunction @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_costFunction
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_SupervisedMiningSettings_costFunction @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_RegressionSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_RegressionSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_RegressionSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Regr_293C3CA7D4EA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_SupervisedMiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_RegressionSettings (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Regr_293C3CA7D4EA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_RegressionSettings
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Reg_C765A8C4AB8C
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_RegressionSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_SupervisedMiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Reg_C765A8C4AB8C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings
   @_ID INT
AS
   SELECT DataMining_RegressionSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_RegressionSettings,
           DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_RegressionSettings._ID = @_ID
        AND DataMining_RegressionSettings._ID = DataMining_SupervisedMiningSettings._ID
        AND DataMining_RegressionSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_RegressionSettings._ID = Core_Classifier._ID
        AND DataMining_RegressionSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_RegressionSettings
AS
   SELECT DataMining_RegressionSettings._ID AS _ID,
          DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
          DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
          DataMining_SupervisedMiningSettings.costFunction AS costFunction,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_RegressionSettings,
           DataMining_SupervisedMiningSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_RegressionSettings._ID = DataMining_SupervisedMiningSettings._ID
        AND DataMining_RegressionSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_RegressionSettings._ID = Core_Classifier._ID
        AND DataMining_RegressionSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_RegressionSettings._ID AS _ID,
             DataMining_SupervisedMiningSettings.confidenceAttributeName AS confidenceAttributeName,
             DataMining_SupervisedMiningSettings.predictedAttributeName AS predictedAttributeName,
             DataMining_SupervisedMiningSettings.costFunction AS costFunction,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_RegressionSettings,
              DataMining_SupervisedMiningSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_RegressionSettings._ID = DataMining_SupervisedMiningSettings._ID
           AND DataMining_RegressionSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_RegressionSettings._ID = Core_Classifier._ID
           AND DataMining_RegressionSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_RegressionSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_R_3E5C5748DAE4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_RegressionSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 170
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_R_3E5C5748DAE4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_RegressionSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_RegressionSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_RegressionSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 170
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_RegressionSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 170
   RETURN @@Error
GO


PRINT 'Class DataMining.AssociationRulesSettings'
GO

CREATE TABLE DataMining_AssociationRulesSettings
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,minimumSupport FLOAT NOT NULL
   ,minimumConfidence FLOAT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(171, 'DataMining.AssociationRulesSettings')
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_minimumSupport
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = minimumSupport FROM DataMining_AssociationRulesSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_minimumSupport
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE DataMining_AssociationRulesSettings SET minimumSupport = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_minimumConfidence
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = minimumConfidence FROM DataMining_AssociationRulesSettings WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_minimumConfidence
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE DataMining_AssociationRulesSettings SET minimumConfidence = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_function
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_function @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_function
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_function @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningSettings_algorithm @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_algorithm
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_DataMining_MiningSettings_algorithm @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_AssociationRulesSettings_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_AssociationRulesSettings
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_AssociationRulesSettings WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Asso_AF4BD8BB69E1
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_MiningSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_AssociationRulesSettings (_ID, minimumSupport, minimumConfidence)
         VALUES (@_ID, 0.0, 0.0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Asso_AF4BD8BB69E1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_AssociationRulesSettings
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_Ass_132BE4CDB2AD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesItemId_itemId', 'Delete_DataMining_UsesItemId', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_UsesTransactionId_transactionId', 'Delete_DataMining_UsesTransactionId', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_AssociationRulesSettings WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_DataMining_MiningSettings @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_Ass_132BE4CDB2AD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings
   @_ID INT
AS
   SELECT DataMining_AssociationRulesSettings._ID AS _ID,
          DataMining_AssociationRulesSettings.minimumSupport AS minimumSupport,
          DataMining_AssociationRulesSettings.minimumConfidence AS minimumConfidence,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_AssociationRulesSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_AssociationRulesSettings._ID = @_ID
        AND DataMining_AssociationRulesSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_AssociationRulesSettings._ID = Core_Classifier._ID
        AND DataMining_AssociationRulesSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_AssociationRulesSettings
AS
   SELECT DataMining_AssociationRulesSettings._ID AS _ID,
          DataMining_AssociationRulesSettings.minimumSupport AS minimumSupport,
          DataMining_AssociationRulesSettings.minimumConfidence AS minimumConfidence,
          DataMining_MiningSettings.[function] AS [function],
          DataMining_MiningSettings.algorithm AS algorithm,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_AssociationRulesSettings,
           DataMining_MiningSettings,
           Core_Classifier,
           Core_ModelElement
      WHERE DataMining_AssociationRulesSettings._ID = DataMining_MiningSettings._ID
        AND DataMining_AssociationRulesSettings._ID = Core_Classifier._ID
        AND DataMining_AssociationRulesSettings._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_AssociationRulesSettings._ID AS _ID,
             DataMining_AssociationRulesSettings.minimumSupport AS minimumSupport,
             DataMining_AssociationRulesSettings.minimumConfidence AS minimumConfidence,
             DataMining_MiningSettings.[function] AS [function],
             DataMining_MiningSettings.algorithm AS algorithm,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_AssociationRulesSettings,
              DataMining_MiningSettings,
              Core_Classifier,
              Core_ModelElement
         WHERE DataMining_AssociationRulesSettings._ID = DataMining_MiningSettings._ID
           AND DataMining_AssociationRulesSettings._ID = Core_Classifier._ID
           AND DataMining_AssociationRulesSettings._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_AssociationRulesSettings
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_A_6077B91CB5AF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_AssociationRulesSettings @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 171
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_A_6077B91CB5AF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_AssociationRulesSettings
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_AssociationRulesSettings @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_AssociationRulesSettings
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 171
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_AssociationRulesSettings
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 171
   RETURN @@Error
GO


PRINT 'Class DataMining.ApplicationAttribute'
GO

CREATE TABLE DataMining_ApplicationAttribute
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,usageType VARCHAR(128) NOT NULL
   ,attributeType VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(172, 'DataMining.ApplicationAttribute')
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_usageType
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = DataMining_ApplicationAttribute.usageType
      FROM DataMining_ApplicationAttribute
      WHERE DataMining_ApplicationAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_usageType
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE DataMining_ApplicationAttribute
      SET usageType = 
          (SELECT _EnumLiteral FROM DataMining_AttributeUsage WHERE _EnumLiteral = @_Value)
      WHERE DataMining_ApplicationAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_attributeType
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = DataMining_ApplicationAttribute.attributeType
      FROM DataMining_ApplicationAttribute
      WHERE DataMining_ApplicationAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_attributeType
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE DataMining_ApplicationAttribute
      SET attributeType = 
          (SELECT _EnumLiteral FROM DataMining_AttributeType WHERE _EnumLiteral = @_Value)
      WHERE DataMining_ApplicationAttribute._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Attribute_initialValue @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_initialValue
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Attribute_initialValue @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_changeability @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_changeability
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_changeability @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_multiplicity @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_multiplicity
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_multiplicity @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_ordering @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_ordering
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_ordering @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeature_targetScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_targetScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_StructuralFeature_targetScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_DataMining_ApplicationAttribute_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_DataMining_ApplicationAttribute
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM DataMining_ApplicationAttribute WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_DataMining_Appl_1A85FC5233A3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Attribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT DataMining_ApplicationAttribute (_ID, usageType, attributeType)
         VALUES (@_ID, 'active', 'categorical')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_DataMining_Appl_1A85FC5233A3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_DataMining_ApplicationAttribute
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_DataMining_App_40A8F5C67B53
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_InputSpecOwnsAttributes_inputSpec', 'Delete_DataMining_InputSpecOwnsAttributes', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_DataMining_SupervisedMiningModelReferencesTargetAttribute_supervisedMiningModel', 'Delete_DataMining_SupervisedMiningModelReferencesTargetAttribute', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM DataMining_ApplicationAttribute WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Attribute @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_DataMining_App_40A8F5C67B53
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute
   @_ID INT
AS
   SELECT DataMining_ApplicationAttribute._ID AS _ID,
          DataMining_ApplicationAttribute.usageType AS usageType,
          DataMining_ApplicationAttribute.attributeType AS attributeType,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ApplicationAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_ApplicationAttribute._ID = @_ID
        AND DataMining_ApplicationAttribute._ID = Core_Attribute._ID
        AND DataMining_ApplicationAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_ApplicationAttribute._ID = Core_Feature._ID
        AND DataMining_ApplicationAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_DataMining_ApplicationAttribute
AS
   SELECT DataMining_ApplicationAttribute._ID AS _ID,
          DataMining_ApplicationAttribute.usageType AS usageType,
          DataMining_ApplicationAttribute.attributeType AS attributeType,
          Core_Attribute.initialValue_ID AS initialValue_ID,
          Core_StructuralFeature.changeability AS changeability,
          Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
          Core_StructuralFeature.ordering AS ordering,
          Core_StructuralFeature.targetScope AS targetScope,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM DataMining_ApplicationAttribute,
           Core_Attribute,
           Core_StructuralFeature,
           Core_Feature,
           Core_ModelElement
      WHERE DataMining_ApplicationAttribute._ID = Core_Attribute._ID
        AND DataMining_ApplicationAttribute._ID = Core_StructuralFeature._ID
        AND DataMining_ApplicationAttribute._ID = Core_Feature._ID
        AND DataMining_ApplicationAttribute._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationAttribute
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT DataMining_ApplicationAttribute._ID AS _ID,
             DataMining_ApplicationAttribute.usageType AS usageType,
             DataMining_ApplicationAttribute.attributeType AS attributeType,
             Core_Attribute.initialValue_ID AS initialValue_ID,
             Core_StructuralFeature.changeability AS changeability,
             Core_StructuralFeature.multiplicity_ID AS multiplicity_ID,
             Core_StructuralFeature.ordering AS ordering,
             Core_StructuralFeature.targetScope AS targetScope,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM DataMining_ApplicationAttribute,
              Core_Attribute,
              Core_StructuralFeature,
              Core_Feature,
              Core_ModelElement
         WHERE DataMining_ApplicationAttribute._ID = Core_Attribute._ID
           AND DataMining_ApplicationAttribute._ID = Core_StructuralFeature._ID
           AND DataMining_ApplicationAttribute._ID = Core_Feature._ID
           AND DataMining_ApplicationAttribute._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ApplicationAttribute
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_DataMining_A_8372E0370875
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_DataMining_ApplicationAttribute @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 172
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_DataMining_A_8372E0370875
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ApplicationAttribute
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_DataMining_ApplicationAttribute @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_DataMining_ApplicationAttribute
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 172
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_DataMining_ApplicationAttribute
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 172
   RETURN @@Error
GO


--
-- InformationVisualization Classes
--

PRINT 'Class InformationVisualization.RenderedObject'
GO

CREATE TABLE InformationVisualization_RenderedObject
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,formula_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_ExpressionNode(_ID)
   ,[action] VARCHAR(256) NOT NULL
   ,fileName VARCHAR(256) NOT NULL
   ,type VARCHAR(256) NOT NULL
   ,url VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(173, 'InformationVisualization.RenderedObject')
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_formula
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = formula_ID FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_formula
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE InformationVisualization_RenderedObject SET formula_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_action
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [action] FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_action
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_RenderedObject SET [action] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_fileName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = fileName FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_fileName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_RenderedObject SET fileName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_RenderedObject SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_url
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = url FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_url
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_RenderedObject SET url = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_isAbstract
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Classifier_isAbstract @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_isAbstract
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Classifier_isAbstract @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObject_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_InformationVisualization_RenderedObject
   @_ID INT OUTPUT
AS
   DECLARE @formula_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_InformationVisu_7255DF3DC2D7
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Classifier @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Expressions_ExpressionNode @formula_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT InformationVisualization_RenderedObject (_ID, formula_ID, [action], fileName, type, url)
            VALUES (@_ID, @formula_ID, '', '', '', '')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_InformationVisu_7255DF3DC2D7
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_InformationVisualization_RenderedObject
   @_ID INT
AS
   DECLARE @Error INT
   DECLARE @formula_ID INT
   EXECUTE @Error = Get_InformationVisualization_RenderedObject_formula @_ID, @formula_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_InformationVis_D04ED35F0637
      SELECT @Error = @@Error
      IF @Error = 0 AND @formula_ID IS NOT NULL
         EXECUTE @Error = Drop_Expressions_ExpressionNode @formula_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_CompositesReferenceComponents_component', 'Delete_InformationVisualization_CompositesReferenceComponents', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_CompositesReferenceComponents_composite', 'Delete_InformationVisualization_CompositesReferenceComponents', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_rendering', 'Delete_InformationVisualization_RenderedObjectsReferenceRenderings', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultRendering', 'Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceModelElement_modelElement', 'Delete_InformationVisualization_RenderedObjectsReferenceModelElement', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_NeighborsReferenceNeighbors_referencingNeighbor', 'Delete_InformationVisualization_NeighborsReferenceNeighbors', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_NeighborsReferenceNeighbors_neighbor', 'Delete_InformationVisualization_NeighborsReferenceNeighbors', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObjectSet', 'Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM InformationVisualization_RenderedObject WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Classifier @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_InformationVis_D04ED35F0637
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject
   @_ID INT
AS
   SELECT InformationVisualization_RenderedObject._ID AS _ID,
          InformationVisualization_RenderedObject.formula_ID AS formula_ID,
          InformationVisualization_RenderedObject.[action] AS [action],
          InformationVisualization_RenderedObject.fileName AS fileName,
          InformationVisualization_RenderedObject.type AS type,
          InformationVisualization_RenderedObject.url AS url,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_RenderedObject,
           Core_Classifier,
           Core_ModelElement
      WHERE InformationVisualization_RenderedObject._ID = @_ID
        AND InformationVisualization_RenderedObject._ID = Core_Classifier._ID
        AND InformationVisualization_RenderedObject._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_InformationVisualization_RenderedObject
AS
   SELECT InformationVisualization_RenderedObject._ID AS _ID,
          InformationVisualization_RenderedObject.formula_ID AS formula_ID,
          InformationVisualization_RenderedObject.[action] AS [action],
          InformationVisualization_RenderedObject.fileName AS fileName,
          InformationVisualization_RenderedObject.type AS type,
          InformationVisualization_RenderedObject.url AS url,
          Core_Classifier.isAbstract AS isAbstract,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_RenderedObject,
           Core_Classifier,
           Core_ModelElement
      WHERE InformationVisualization_RenderedObject._ID = Core_Classifier._ID
        AND InformationVisualization_RenderedObject._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT InformationVisualization_RenderedObject._ID AS _ID,
             InformationVisualization_RenderedObject.formula_ID AS formula_ID,
             InformationVisualization_RenderedObject.[action] AS [action],
             InformationVisualization_RenderedObject.fileName AS fileName,
             InformationVisualization_RenderedObject.type AS type,
             InformationVisualization_RenderedObject.url AS url,
             Core_Classifier.isAbstract AS isAbstract,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM InformationVisualization_RenderedObject,
              Core_Classifier,
              Core_ModelElement
         WHERE InformationVisualization_RenderedObject._ID = Core_Classifier._ID
           AND InformationVisualization_RenderedObject._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObject
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_InformationV_99C687545C35
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_InformationVisualization_RenderedObject @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 173
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_InformationV_99C687545C35
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObject
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_InformationVisualization_RenderedObject @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_InformationVisualization_RenderedObject
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 173
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_InformationVisualization_RenderedObject
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 173
   RETURN @@Error
GO


PRINT 'Class InformationVisualization.RenderedObjectSet'
GO

CREATE TABLE InformationVisualization_RenderedObjectSet
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(174, 'InformationVisualization.RenderedObjectSet')
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObjectSet_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_RenderedObjectSet_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_InformationVisualization_RenderedObjectSet
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM InformationVisualization_RenderedObjectSet WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_InformationVisu_44CA72054074
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT InformationVisualization_RenderedObjectSet (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_InformationVisu_44CA72054074
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_InformationVisualization_RenderedObjectSet
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_InformationVis_0FFF4C2F457E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObject', 'Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderings_rendering', 'Delete_InformationVisualization_RenderedObjectSetOwnsRenderings', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM InformationVisualization_RenderedObjectSet WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_InformationVis_0FFF4C2F457E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet
   @_ID INT
AS
   SELECT InformationVisualization_RenderedObjectSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_RenderedObjectSet,
           Core_ModelElement
      WHERE InformationVisualization_RenderedObjectSet._ID = @_ID
        AND InformationVisualization_RenderedObjectSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_InformationVisualization_RenderedObjectSet
AS
   SELECT InformationVisualization_RenderedObjectSet._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_RenderedObjectSet,
           Core_ModelElement
      WHERE InformationVisualization_RenderedObjectSet._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT InformationVisualization_RenderedObjectSet._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM InformationVisualization_RenderedObjectSet,
              Core_ModelElement
         WHERE InformationVisualization_RenderedObjectSet._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectSet
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_InformationV_FD528EF1AFAF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_InformationVisualization_RenderedObjectSet @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 174
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_InformationV_FD528EF1AFAF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectSet
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_InformationVisualization_RenderedObjectSet @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_InformationVisualization_RenderedObjectSet
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 174
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_InformationVisualization_RenderedObjectSet
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 174
   RETURN @@Error
GO


PRINT 'Class InformationVisualization.Rendering'
GO

CREATE TABLE InformationVisualization_Rendering
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,formula_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_ExpressionNode(_ID)
   ,[action] VARCHAR(256) NOT NULL
   ,fileName VARCHAR(256) NOT NULL
   ,type VARCHAR(256) NOT NULL
   ,url VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(175, 'InformationVisualization.Rendering')
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_formula
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = formula_ID FROM InformationVisualization_Rendering WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_formula
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE InformationVisualization_Rendering SET formula_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_action
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [action] FROM InformationVisualization_Rendering WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_action
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_Rendering SET [action] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_fileName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = fileName FROM InformationVisualization_Rendering WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_fileName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_Rendering SET fileName = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM InformationVisualization_Rendering WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_Rendering SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_url
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = url FROM InformationVisualization_Rendering WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_url
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE InformationVisualization_Rendering SET url = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_Rendering_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_InformationVisualization_Rendering
   @_ID INT OUTPUT
AS
   DECLARE @formula_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM InformationVisualization_Rendering WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_InformationVisu_3E934A39F644
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Feature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Expressions_ExpressionNode @formula_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT InformationVisualization_Rendering (_ID, formula_ID, [action], fileName, type, url)
            VALUES (@_ID, @formula_ID, '', '', '', '')
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_InformationVisu_3E934A39F644
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_InformationVisualization_Rendering
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @formula_ID INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_formula @_ID, @formula_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_InformationVis_7180B3816C93
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (176)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @formula_ID IS NOT NULL
         EXECUTE @Error = Drop_Expressions_ExpressionNode @formula_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_renderedObject', 'Delete_InformationVisualization_RenderedObjectsReferenceRenderings', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultedRenderedObject', 'Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering', @_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderings_renderedObjectSet', 'Delete_InformationVisualization_RenderedObjectSetOwnsRenderings', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM InformationVisualization_Rendering WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Feature @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_InformationVis_7180B3816C93
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering
   @_ID INT
AS
   SELECT InformationVisualization_Rendering._ID AS _ID,
          InformationVisualization_Rendering.formula_ID AS formula_ID,
          InformationVisualization_Rendering.[action] AS [action],
          InformationVisualization_Rendering.fileName AS fileName,
          InformationVisualization_Rendering.type AS type,
          InformationVisualization_Rendering.url AS url,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_Rendering,
           Core_Feature,
           Core_ModelElement
      WHERE InformationVisualization_Rendering._ID = @_ID
        AND InformationVisualization_Rendering._ID = Core_Feature._ID
        AND InformationVisualization_Rendering._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_InformationVisualization_Rendering
AS
   SELECT InformationVisualization_Rendering._ID AS _ID,
          InformationVisualization_Rendering.formula_ID AS formula_ID,
          InformationVisualization_Rendering.[action] AS [action],
          InformationVisualization_Rendering.fileName AS fileName,
          InformationVisualization_Rendering.type AS type,
          InformationVisualization_Rendering.url AS url,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_Rendering,
           Core_Feature,
           Core_ModelElement
      WHERE InformationVisualization_Rendering._ID = Core_Feature._ID
        AND InformationVisualization_Rendering._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT InformationVisualization_Rendering._ID AS _ID,
             InformationVisualization_Rendering.formula_ID AS formula_ID,
             InformationVisualization_Rendering.[action] AS [action],
             InformationVisualization_Rendering.fileName AS fileName,
             InformationVisualization_Rendering.type AS type,
             InformationVisualization_Rendering.url AS url,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM InformationVisualization_Rendering,
              Core_Feature,
              Core_ModelElement
         WHERE InformationVisualization_Rendering._ID = Core_Feature._ID
           AND InformationVisualization_Rendering._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_Rendering
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_InformationV_85F1FB1CE742
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_InformationVisualization_Rendering @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 175
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_InformationV_85F1FB1CE742
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_Rendering
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_InformationVisualization_Rendering @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_InformationVisualization_Rendering
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (175, 176)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_InformationVisualization_Rendering
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 175
   RETURN @@Error
GO


PRINT 'Class InformationVisualization.XSLRendering'
GO

CREATE TABLE InformationVisualization_XSLRendering
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(176, 'InformationVisualization.XSLRendering')
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_formula
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_formula @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_formula
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_InformationVisualization_Rendering_formula @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_action
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_action @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_action
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_InformationVisualization_Rendering_action @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_fileName
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_fileName @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_fileName
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_InformationVisualization_Rendering_fileName @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_type @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_InformationVisualization_Rendering_type @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_url
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_Rendering_url @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_url
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_InformationVisualization_Rendering_url @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_Feature_ownerScope @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_ownerScope
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_Feature_ownerScope @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_InformationVisualization_XSLRendering_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_InformationVisualization_XSLRendering
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM InformationVisualization_XSLRendering WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_InformationVisu_5B1E36C8F016
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_InformationVisualization_Rendering @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT InformationVisualization_XSLRendering (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_InformationVisu_5B1E36C8F016
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_InformationVisualization_XSLRendering
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_InformationVis_C4E6493E9603
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM InformationVisualization_XSLRendering WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_InformationVisualization_Rendering @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_InformationVis_C4E6493E9603
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering
   @_ID INT
AS
   SELECT InformationVisualization_XSLRendering._ID AS _ID,
          InformationVisualization_Rendering.formula_ID AS formula_ID,
          InformationVisualization_Rendering.[action] AS [action],
          InformationVisualization_Rendering.fileName AS fileName,
          InformationVisualization_Rendering.type AS type,
          InformationVisualization_Rendering.url AS url,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_XSLRendering,
           InformationVisualization_Rendering,
           Core_Feature,
           Core_ModelElement
      WHERE InformationVisualization_XSLRendering._ID = @_ID
        AND InformationVisualization_XSLRendering._ID = InformationVisualization_Rendering._ID
        AND InformationVisualization_XSLRendering._ID = Core_Feature._ID
        AND InformationVisualization_XSLRendering._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_InformationVisualization_XSLRendering
AS
   SELECT InformationVisualization_XSLRendering._ID AS _ID,
          InformationVisualization_Rendering.formula_ID AS formula_ID,
          InformationVisualization_Rendering.[action] AS [action],
          InformationVisualization_Rendering.fileName AS fileName,
          InformationVisualization_Rendering.type AS type,
          InformationVisualization_Rendering.url AS url,
          Core_Feature.ownerScope AS ownerScope,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM InformationVisualization_XSLRendering,
           InformationVisualization_Rendering,
           Core_Feature,
           Core_ModelElement
      WHERE InformationVisualization_XSLRendering._ID = InformationVisualization_Rendering._ID
        AND InformationVisualization_XSLRendering._ID = Core_Feature._ID
        AND InformationVisualization_XSLRendering._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT InformationVisualization_XSLRendering._ID AS _ID,
             InformationVisualization_Rendering.formula_ID AS formula_ID,
             InformationVisualization_Rendering.[action] AS [action],
             InformationVisualization_Rendering.fileName AS fileName,
             InformationVisualization_Rendering.type AS type,
             InformationVisualization_Rendering.url AS url,
             Core_Feature.ownerScope AS ownerScope,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM InformationVisualization_XSLRendering,
              InformationVisualization_Rendering,
              Core_Feature,
              Core_ModelElement
         WHERE InformationVisualization_XSLRendering._ID = InformationVisualization_Rendering._ID
           AND InformationVisualization_XSLRendering._ID = Core_Feature._ID
           AND InformationVisualization_XSLRendering._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_XSLRendering
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_InformationV_55D775F694D4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_InformationVisualization_XSLRendering @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 176
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_InformationV_55D775F694D4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_XSLRendering
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_InformationVisualization_XSLRendering @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_InformationVisualization_XSLRendering
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 176
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_InformationVisualization_XSLRendering
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 176
   RETURN @@Error
GO


--
-- BusinessNomenclature Classes
--

PRINT 'Class BusinessNomenclature.VocabularyElement'
GO

CREATE TABLE BusinessNomenclature_VocabularyElement
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,definition VARCHAR(256) NOT NULL
   ,example VARCHAR(256) NOT NULL
   ,[usage] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(177, 'BusinessNomenclature.VocabularyElement')
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_definition
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = definition FROM BusinessNomenclature_VocabularyElement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_VocabularyElement_definition
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessNomenclature_VocabularyElement SET definition = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_example
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = example FROM BusinessNomenclature_VocabularyElement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_VocabularyElement_example
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessNomenclature_VocabularyElement SET example = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_usage
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [usage] FROM BusinessNomenclature_VocabularyElement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_VocabularyElement_usage
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessNomenclature_VocabularyElement SET [usage] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_VocabularyElement_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_VocabularyElement_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_VocabularyElement
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_VocabularyElement WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomencl_8CD896ACADD4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_VocabularyElement (_ID, definition, example, [usage])
         VALUES (@_ID, '', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomencl_8CD896ACADD4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_VocabularyElement
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_25B768065D0E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (182, 183)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedVocabularyElements_element', 'Delete_BusinessNomenclature_RelatedVocabularyElements', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedVocabularyElements_relatedElement', 'Delete_BusinessNomenclature_RelatedVocabularyElements', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_VocabularyElementToModelElement_modelElement', 'Delete_BusinessNomenclature_VocabularyElementToModelElement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_VocabularyElement WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_25B768065D0E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement
   @_ID INT
AS
   SELECT BusinessNomenclature_VocabularyElement._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_VocabularyElement._ID = @_ID
        AND BusinessNomenclature_VocabularyElement._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_VocabularyElement
AS
   SELECT BusinessNomenclature_VocabularyElement._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_VocabularyElement._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElement
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_VocabularyElement._ID AS _ID,
             BusinessNomenclature_VocabularyElement.definition AS definition,
             BusinessNomenclature_VocabularyElement.example AS example,
             BusinessNomenclature_VocabularyElement.[usage] AS [usage],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_VocabularyElement,
              Core_ModelElement
         WHERE BusinessNomenclature_VocabularyElement._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_VocabularyElement
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_A99C7FB0C9C7
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_VocabularyElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 177
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_A99C7FB0C9C7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_VocabularyElement
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_VocabularyElement @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_VocabularyElement
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (177, 182, 183)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_VocabularyElement
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 177
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.Nomenclature'
GO

CREATE TABLE BusinessNomenclature_Nomenclature
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(178, 'BusinessNomenclature.Nomenclature')
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Nomenclature_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Nomenclature_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_Nomenclature
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_Nomenclature WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomencl_F30CEDCDC861
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_Nomenclature (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomencl_F30CEDCDC861
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_Nomenclature
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_CA5FC03A85D5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (179, 180)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_NomenclatureHierarchy_child', 'Delete_BusinessNomenclature_NomenclatureHierarchy', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_NomenclatureHierarchy_parent', 'Delete_BusinessNomenclature_NomenclatureHierarchy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_Nomenclature WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_CA5FC03A85D5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature
   @_ID INT
AS
   SELECT BusinessNomenclature_Nomenclature._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Nomenclature,
           Core_ModelElement
      WHERE BusinessNomenclature_Nomenclature._ID = @_ID
        AND BusinessNomenclature_Nomenclature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_Nomenclature
AS
   SELECT BusinessNomenclature_Nomenclature._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Nomenclature,
           Core_ModelElement
      WHERE BusinessNomenclature_Nomenclature._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_Nomenclature._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_Nomenclature,
              Core_ModelElement
         WHERE BusinessNomenclature_Nomenclature._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_Nomenclature
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_E60A777095C8
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Nomenclature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 178
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_E60A777095C8
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_Nomenclature
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_Nomenclature @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_Nomenclature
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (178, 179, 180)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_Nomenclature
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 178
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.Taxonomy'
GO

CREATE TABLE BusinessNomenclature_Taxonomy
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(179, 'BusinessNomenclature.Taxonomy')
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Taxonomy_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Taxonomy_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_Taxonomy
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_Taxonomy WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomencl_7A9E45476BBA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Nomenclature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_Taxonomy (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomencl_7A9E45476BBA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_Taxonomy
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_B4FF37E7196F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_GlossaryToTaxonomy_glossary', 'Delete_BusinessNomenclature_GlossaryToTaxonomy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_Taxonomy WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_BusinessNomenclature_Nomenclature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_B4FF37E7196F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy
   @_ID INT
AS
   SELECT BusinessNomenclature_Taxonomy._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Taxonomy,
           Core_ModelElement
      WHERE BusinessNomenclature_Taxonomy._ID = @_ID
        AND BusinessNomenclature_Taxonomy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_Taxonomy
AS
   SELECT BusinessNomenclature_Taxonomy._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Taxonomy,
           Core_ModelElement
      WHERE BusinessNomenclature_Taxonomy._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_Taxonomy._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_Taxonomy,
              Core_ModelElement
         WHERE BusinessNomenclature_Taxonomy._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_Taxonomy
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_95C70E8B6D4D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Taxonomy @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 179
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_95C70E8B6D4D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_Taxonomy
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_Taxonomy @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_Taxonomy
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 179
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_Taxonomy
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 179
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.Glossary'
GO

CREATE TABLE BusinessNomenclature_Glossary
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[language] VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(180, 'BusinessNomenclature.Glossary')
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_language
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = [language] FROM BusinessNomenclature_Glossary WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Glossary_language
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE BusinessNomenclature_Glossary SET [language] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Glossary_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Glossary_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_Glossary
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_Glossary WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomencl_5025C2BFEF24
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Nomenclature @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_Glossary (_ID, [language])
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomencl_5025C2BFEF24
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_Glossary
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_C908C53A27BF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_GlossaryToTaxonomy_taxonomy', 'Delete_BusinessNomenclature_GlossaryToTaxonomy', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_Glossary WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_BusinessNomenclature_Nomenclature @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_C908C53A27BF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary
   @_ID INT
AS
   SELECT BusinessNomenclature_Glossary._ID AS _ID,
          BusinessNomenclature_Glossary.[language] AS [language],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Glossary,
           Core_ModelElement
      WHERE BusinessNomenclature_Glossary._ID = @_ID
        AND BusinessNomenclature_Glossary._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_Glossary
AS
   SELECT BusinessNomenclature_Glossary._ID AS _ID,
          BusinessNomenclature_Glossary.[language] AS [language],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Glossary,
           Core_ModelElement
      WHERE BusinessNomenclature_Glossary._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_Glossary._ID AS _ID,
             BusinessNomenclature_Glossary.[language] AS [language],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_Glossary,
              Core_ModelElement
         WHERE BusinessNomenclature_Glossary._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_Glossary
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_C7F13341A6EB
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Glossary @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 180
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_C7F13341A6EB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_Glossary
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_Glossary @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_Glossary
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 180
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_Glossary
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 180
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.BusinessDomain'
GO

CREATE TABLE BusinessNomenclature_BusinessDomain
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(181, 'BusinessNomenclature.BusinessDomain')
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_BusinessDomain_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_BusinessDomain_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_BusinessDomain
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_BusinessDomain WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomencl_CA2B024426AF
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_BusinessDomain (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomencl_CA2B024426AF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_BusinessDomain
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_C74AA29EF1E1
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_BusinessDomain WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_C74AA29EF1E1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain
   @_ID INT
AS
   SELECT BusinessNomenclature_BusinessDomain._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_BusinessDomain,
           Core_ModelElement
      WHERE BusinessNomenclature_BusinessDomain._ID = @_ID
        AND BusinessNomenclature_BusinessDomain._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_BusinessDomain
AS
   SELECT BusinessNomenclature_BusinessDomain._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_BusinessDomain,
           Core_ModelElement
      WHERE BusinessNomenclature_BusinessDomain._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_BusinessDomain._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_BusinessDomain,
              Core_ModelElement
         WHERE BusinessNomenclature_BusinessDomain._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_BusinessDomain
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_5F64FF0194CA
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_BusinessDomain @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 181
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_5F64FF0194CA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_BusinessDomain
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_BusinessDomain @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_BusinessDomain
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 181
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_BusinessDomain
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 181
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.Concept'
GO

CREATE TABLE BusinessNomenclature_Concept
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(182, 'BusinessNomenclature.Concept')
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_definition
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_definition @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Concept_definition
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_definition @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_example
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_example @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Concept_example
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_example @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_usage
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_usage @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Concept_usage
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_usage @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Concept_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Concept_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_Concept
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_Concept WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomenclature_Concept
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_VocabularyElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_Concept (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomenclature_Concept
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_Concept
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenc_65311FA25809
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_TermToConcept_term', 'Delete_BusinessNomenclature_TermToConcept', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedConcepts_concept', 'Delete_BusinessNomenclature_RelatedConcepts', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedConcepts_relatedConcept', 'Delete_BusinessNomenclature_RelatedConcepts', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_Concept WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_BusinessNomenclature_VocabularyElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenc_65311FA25809
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept
   @_ID INT
AS
   SELECT BusinessNomenclature_Concept._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Concept,
           BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_Concept._ID = @_ID
        AND BusinessNomenclature_Concept._ID = BusinessNomenclature_VocabularyElement._ID
        AND BusinessNomenclature_Concept._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_Concept
AS
   SELECT BusinessNomenclature_Concept._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Concept,
           BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_Concept._ID = BusinessNomenclature_VocabularyElement._ID
        AND BusinessNomenclature_Concept._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_Concept._ID AS _ID,
             BusinessNomenclature_VocabularyElement.definition AS definition,
             BusinessNomenclature_VocabularyElement.example AS example,
             BusinessNomenclature_VocabularyElement.[usage] AS [usage],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_Concept,
              BusinessNomenclature_VocabularyElement,
              Core_ModelElement
         WHERE BusinessNomenclature_Concept._ID = BusinessNomenclature_VocabularyElement._ID
           AND BusinessNomenclature_Concept._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_Concept
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNome_8A54F4B96AA2
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Concept @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 182
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNome_8A54F4B96AA2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_Concept
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_Concept @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_Concept
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 182
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_Concept
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 182
   RETURN @@Error
GO


PRINT 'Class BusinessNomenclature.Term'
GO

CREATE TABLE BusinessNomenclature_Term
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(183, 'BusinessNomenclature.Term')
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_definition
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_definition @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Term_definition
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_definition @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_example
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_example @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Term_example
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_example @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_usage
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_VocabularyElement_usage @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Term_usage
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_BusinessNomenclature_VocabularyElement_usage @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Term_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_BusinessNomenclature_Term_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_BusinessNomenclature_Term
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM BusinessNomenclature_Term WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_BusinessNomenclature_Term
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_VocabularyElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT BusinessNomenclature_Term (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_BusinessNomenclature_Term
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_BusinessNomenclature_Term
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_BusinessNomenclature_Term
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_TermToConcept_concept', 'Delete_BusinessNomenclature_TermToConcept', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedTerms_term', 'Delete_BusinessNomenclature_RelatedTerms', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_RelatedTerms_relatedTerm', 'Delete_BusinessNomenclature_RelatedTerms', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_SynonymToPreferredTerm_synonym', 'Delete_BusinessNomenclature_SynonymToPreferredTerm', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_SynonymToPreferredTerm_preferredTerm', 'Delete_BusinessNomenclature_SynonymToPreferredTerm', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_WiderToNarrowerTerm_narrowerTerm', 'Delete_BusinessNomenclature_WiderToNarrowerTerm', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_BusinessNomenclature_WiderToNarrowerTerm_widerTerm', 'Delete_BusinessNomenclature_WiderToNarrowerTerm', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM BusinessNomenclature_Term WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_BusinessNomenclature_VocabularyElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_BusinessNomenclature_Term
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term
   @_ID INT
AS
   SELECT BusinessNomenclature_Term._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Term,
           BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_Term._ID = @_ID
        AND BusinessNomenclature_Term._ID = BusinessNomenclature_VocabularyElement._ID
        AND BusinessNomenclature_Term._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_BusinessNomenclature_Term
AS
   SELECT BusinessNomenclature_Term._ID AS _ID,
          BusinessNomenclature_VocabularyElement.definition AS definition,
          BusinessNomenclature_VocabularyElement.example AS example,
          BusinessNomenclature_VocabularyElement.[usage] AS [usage],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM BusinessNomenclature_Term,
           BusinessNomenclature_VocabularyElement,
           Core_ModelElement
      WHERE BusinessNomenclature_Term._ID = BusinessNomenclature_VocabularyElement._ID
        AND BusinessNomenclature_Term._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT BusinessNomenclature_Term._ID AS _ID,
             BusinessNomenclature_VocabularyElement.definition AS definition,
             BusinessNomenclature_VocabularyElement.example AS example,
             BusinessNomenclature_VocabularyElement.[usage] AS [usage],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM BusinessNomenclature_Term,
              BusinessNomenclature_VocabularyElement,
              Core_ModelElement
         WHERE BusinessNomenclature_Term._ID = BusinessNomenclature_VocabularyElement._ID
           AND BusinessNomenclature_Term._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_Term
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_BusinessNomenclature_Term
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_BusinessNomenclature_Term @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 183
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_BusinessNomenclature_Term
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_Term
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_BusinessNomenclature_Term @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_BusinessNomenclature_Term
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 183
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_BusinessNomenclature_Term
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 183
   RETURN @@Error
GO


--
-- WarehouseProcess.Events Classes
--

PRINT 'Class WarehouseProcess.Events.WarehouseEvent'
GO

CREATE TABLE WarehouseProcess_Events_WarehouseEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(184, 'WarehouseProcess.Events.WarehouseEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_WarehouseEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_WarehouseEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_WarehouseEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_WarehouseEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_EEF7B4A0353D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Behavioral_Event @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_WarehouseEvent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_EEF7B4A0353D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_WarehouseEvent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_724AF8352FAD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (185, 186, 187, 195, 190, 191, 192, 193, 194)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_Event_warehouseProcess', 'Delete_WarehouseProcess_Event', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_WarehouseEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Behavioral_Event @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_724AF8352FAD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_WarehouseEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_WarehouseEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_WarehouseEvent._ID = @_ID
        AND WarehouseProcess_Events_WarehouseEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_WarehouseEvent
AS
   SELECT WarehouseProcess_Events_WarehouseEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_WarehouseEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_WarehouseEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_WarehouseEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_WarehouseEvent._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_WarehouseEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_WarehouseEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_WarehouseEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (184, 185, 186, 187, 195, 190, 191, 192, 193, 194)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_WarehouseEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 184
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.ScheduleEvent'
GO

CREATE TABLE WarehouseProcess_Events_ScheduleEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(185, 'WarehouseProcess.Events.ScheduleEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_ScheduleEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_ScheduleEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_ScheduleEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_ScheduleEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_091444523AC7
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_WarehouseEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_ScheduleEvent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_091444523AC7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_ScheduleEvent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_AC66049B89C5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (186, 187, 195, 190)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_ScheduleEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_WarehouseEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_AC66049B89C5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_ScheduleEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_ScheduleEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_ScheduleEvent._ID = @_ID
        AND WarehouseProcess_Events_ScheduleEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_ScheduleEvent
AS
   SELECT WarehouseProcess_Events_ScheduleEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_ScheduleEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_ScheduleEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ScheduleEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_ScheduleEvent._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_ScheduleEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_ScheduleEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_ScheduleEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (185, 186, 187, 195, 190)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_ScheduleEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 185
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.PointInTimeEvent'
GO

CREATE TABLE WarehouseProcess_Events_PointInTimeEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(186, 'WarehouseProcess.Events.PointInTimeEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_PointInTimeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_PointInTimeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_PointInTimeEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_PointInTimeEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_7AF79A2CF08B
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_ScheduleEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_PointInTimeEvent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_7AF79A2CF08B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_PointInTimeEvent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_ABA5B9693035
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (187, 195)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_PointInTimeEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_ScheduleEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_ABA5B9693035
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_PointInTimeEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_PointInTimeEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_PointInTimeEvent._ID = @_ID
        AND WarehouseProcess_Events_PointInTimeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_PointInTimeEvent
AS
   SELECT WarehouseProcess_Events_PointInTimeEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_PointInTimeEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_PointInTimeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_PointInTimeEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_PointInTimeEvent._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_PointInTimeEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_PointInTimeEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_PointInTimeEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_3028C610BEE2
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_PointInTimeEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 186
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_3028C610BEE2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_PointInTimeEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_PointInTimeEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_PointInTimeEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (186, 187, 195)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_PointInTimeEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 186
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.CustomCalendarEvent'
GO

CREATE TABLE WarehouseProcess_Events_CustomCalendarEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(187, 'WarehouseProcess.Events.CustomCalendarEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CustomCalendarEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CustomCalendarEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_CustomCalendarEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_CustomCalendarEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_0810FA79B7D3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_PointInTimeEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_CustomCalendarEvent (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_0810FA79B7D3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_CustomCalendarEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_766977A4D689
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_EventUsesCustomCalendar_customCalendar', 'Delete_WarehouseProcess_EventUsesCustomCalendar', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_CustomCalendarEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_PointInTimeEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_766977A4D689
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_CustomCalendarEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CustomCalendarEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CustomCalendarEvent._ID = @_ID
        AND WarehouseProcess_Events_CustomCalendarEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_CustomCalendarEvent
AS
   SELECT WarehouseProcess_Events_CustomCalendarEvent._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CustomCalendarEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CustomCalendarEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendarEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_CustomCalendarEvent._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_CustomCalendarEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_CustomCalendarEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_CustomCalendarEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_00396B31D3A9
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_CustomCalendarEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 187
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_00396B31D3A9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_CustomCalendarEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_CustomCalendarEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_CustomCalendarEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 187
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_CustomCalendarEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 187
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.CustomCalendar'
GO

CREATE TABLE WarehouseProcess_Events_CustomCalendar
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(188, 'WarehouseProcess.Events.CustomCalendar')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CustomCalendar_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CustomCalendar_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_CustomCalendar
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_CustomCalendar WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_E4904553F25D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_CustomCalendar (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_E4904553F25D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_CustomCalendar
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_C5EFAC24BA79
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_EventUsesCustomCalendar_customCalendarEvent', 'Delete_WarehouseProcess_EventUsesCustomCalendar', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_CustomCalendar WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_C5EFAC24BA79
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar
   @_ID INT
AS
   SELECT WarehouseProcess_Events_CustomCalendar._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CustomCalendar,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CustomCalendar._ID = @_ID
        AND WarehouseProcess_Events_CustomCalendar._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_CustomCalendar
AS
   SELECT WarehouseProcess_Events_CustomCalendar._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CustomCalendar,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CustomCalendar._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_CustomCalendar._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_CustomCalendar,
              Core_ModelElement
         WHERE WarehouseProcess_Events_CustomCalendar._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_CustomCalendar
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_7C83CE9D35BD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_CustomCalendar @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 188
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_7C83CE9D35BD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_CustomCalendar
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_CustomCalendar @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_CustomCalendar
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 188
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_CustomCalendar
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 188
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.CalendarDate'
GO

CREATE TABLE WarehouseProcess_Events_CalendarDate
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,specificDate VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(189, 'WarehouseProcess.Events.CalendarDate')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_specificDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = specificDate FROM WarehouseProcess_Events_CalendarDate WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CalendarDate_specificDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseProcess_Events_CalendarDate SET specificDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CalendarDate_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CalendarDate_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_CalendarDate
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_CalendarDate WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_7295A5803D39
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_CalendarDate (_ID, specificDate)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_7295A5803D39
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_CalendarDate
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_6E6CC03903D2
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_CalendarDate WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_6E6CC03903D2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate
   @_ID INT
AS
   SELECT WarehouseProcess_Events_CalendarDate._ID AS _ID,
          WarehouseProcess_Events_CalendarDate.specificDate AS specificDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CalendarDate,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CalendarDate._ID = @_ID
        AND WarehouseProcess_Events_CalendarDate._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_CalendarDate
AS
   SELECT WarehouseProcess_Events_CalendarDate._ID AS _ID,
          WarehouseProcess_Events_CalendarDate.specificDate AS specificDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CalendarDate,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CalendarDate._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CalendarDate
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_CalendarDate._ID AS _ID,
             WarehouseProcess_Events_CalendarDate.specificDate AS specificDate,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_CalendarDate,
              Core_ModelElement
         WHERE WarehouseProcess_Events_CalendarDate._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_CalendarDate
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_14EF985A8EE1
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_CalendarDate @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 189
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_14EF985A8EE1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_CalendarDate
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_CalendarDate @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_CalendarDate
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 189
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_CalendarDate
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 189
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.IntervalEvent'
GO

CREATE TABLE WarehouseProcess_Events_IntervalEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,duration FLOAT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(190, 'WarehouseProcess.Events.IntervalEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_duration
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = duration FROM WarehouseProcess_Events_IntervalEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_IntervalEvent_duration
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE WarehouseProcess_Events_IntervalEvent SET duration = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_IntervalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_IntervalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_IntervalEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_IntervalEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_A9F7F19FF4FE
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_ScheduleEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_IntervalEvent (_ID, duration)
         VALUES (@_ID, 0.0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_A9F7F19FF4FE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_IntervalEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_8526D3E19A23
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_IntervalEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_ScheduleEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_8526D3E19A23
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_IntervalEvent._ID AS _ID,
          WarehouseProcess_Events_IntervalEvent.duration AS duration,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_IntervalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_IntervalEvent._ID = @_ID
        AND WarehouseProcess_Events_IntervalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_IntervalEvent
AS
   SELECT WarehouseProcess_Events_IntervalEvent._ID AS _ID,
          WarehouseProcess_Events_IntervalEvent.duration AS duration,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_IntervalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_IntervalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_IntervalEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_IntervalEvent._ID AS _ID,
             WarehouseProcess_Events_IntervalEvent.duration AS duration,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_IntervalEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_IntervalEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_IntervalEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_31E9C89BF539
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_IntervalEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 190
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_31E9C89BF539
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_IntervalEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_IntervalEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_IntervalEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 190
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_IntervalEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 190
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.ExternalEvent'
GO

CREATE TABLE WarehouseProcess_Events_ExternalEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,description VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(191, 'WarehouseProcess.Events.ExternalEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_description
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = description FROM WarehouseProcess_Events_ExternalEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_ExternalEvent_description
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseProcess_Events_ExternalEvent SET description = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_ExternalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_ExternalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_ExternalEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_ExternalEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_80B87E04C4AC
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_WarehouseEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_ExternalEvent (_ID, description)
         VALUES (@_ID, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_80B87E04C4AC
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_ExternalEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_BC17312204BE
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_ExternalEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_WarehouseEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_BC17312204BE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_ExternalEvent._ID AS _ID,
          WarehouseProcess_Events_ExternalEvent.description AS description,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_ExternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_ExternalEvent._ID = @_ID
        AND WarehouseProcess_Events_ExternalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_ExternalEvent
AS
   SELECT WarehouseProcess_Events_ExternalEvent._ID AS _ID,
          WarehouseProcess_Events_ExternalEvent.description AS description,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_ExternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_ExternalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ExternalEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_ExternalEvent._ID AS _ID,
             WarehouseProcess_Events_ExternalEvent.description AS description,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_ExternalEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_ExternalEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_ExternalEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_5F7100A17C15
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_ExternalEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 191
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_5F7100A17C15
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_ExternalEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_ExternalEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_ExternalEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 191
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_ExternalEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 191
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.InternalEvent'
GO

CREATE TABLE WarehouseProcess_Events_InternalEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,condition_ID INT NOT NULL FOREIGN KEY REFERENCES Core_BooleanExpression(_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(192, 'WarehouseProcess.Events.InternalEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_condition
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = condition_ID FROM WarehouseProcess_Events_InternalEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_InternalEvent_condition
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE WarehouseProcess_Events_InternalEvent SET condition_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_InternalEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_InternalEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_InternalEvent
   @_ID INT OUTPUT
AS
   DECLARE @condition_ID INT
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_InternalEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_0CBBA4E66F28
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_WarehouseEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      EXECUTE @Error = Create_Core_BooleanExpression @condition_ID OUTPUT
      IF @Error = 0
      BEGIN
         INSERT WarehouseProcess_Events_InternalEvent (_ID, condition_ID)
            VALUES (@_ID, @condition_ID)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_WarehouseProces_0CBBA4E66F28
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_InternalEvent
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @condition_ID INT
   EXECUTE @Error = Get_WarehouseProcess_Events_InternalEvent_condition @_ID, @condition_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_WarehouseProce_7ED9F0010064
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (193, 194)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @condition_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_BooleanExpression @condition_ID
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_TriggeringProcess_triggeringWP', 'Delete_WarehouseProcess_TriggeringProcess', @_ID
      IF @Error = 0
      BEGIN
         DELETE FROM WarehouseProcess_Events_InternalEvent WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_WarehouseEvent @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_WarehouseProce_7ED9F0010064
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_InternalEvent._ID AS _ID,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_InternalEvent._ID = @_ID
        AND WarehouseProcess_Events_InternalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_InternalEvent
AS
   SELECT WarehouseProcess_Events_InternalEvent._ID AS _ID,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_InternalEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_InternalEvent._ID AS _ID,
             WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_InternalEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_InternalEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_InternalEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_87758114DC1A
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_InternalEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 192
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_87758114DC1A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_InternalEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_InternalEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_InternalEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (192, 193, 194)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_InternalEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 192
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.CascadeEvent'
GO

CREATE TABLE WarehouseProcess_Events_CascadeEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,waitRule VARCHAR(128) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(193, 'WarehouseProcess.Events.CascadeEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_waitRule
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = WarehouseProcess_Events_CascadeEvent.waitRule
      FROM WarehouseProcess_Events_CascadeEvent
      WHERE WarehouseProcess_Events_CascadeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CascadeEvent_waitRule
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE WarehouseProcess_Events_CascadeEvent
      SET waitRule = 
          (SELECT _EnumLiteral FROM WarehouseProcess_DataType_WaitRuleType WHERE _EnumLiteral = @_Value)
      WHERE WarehouseProcess_Events_CascadeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_condition
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_Events_InternalEvent_condition @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CascadeEvent_condition
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_Events_InternalEvent_condition @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CascadeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_CascadeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_CascadeEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_CascadeEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_D878D362A866
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_InternalEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_CascadeEvent (_ID, waitRule)
         VALUES (@_ID, 'waitForAll')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_D878D362A866
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_CascadeEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_8D074A430189
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_CascadeEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_InternalEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_8D074A430189
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_CascadeEvent._ID AS _ID,
          WarehouseProcess_Events_CascadeEvent.waitRule AS waitRule,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CascadeEvent,
           WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CascadeEvent._ID = @_ID
        AND WarehouseProcess_Events_CascadeEvent._ID = WarehouseProcess_Events_InternalEvent._ID
        AND WarehouseProcess_Events_CascadeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_CascadeEvent
AS
   SELECT WarehouseProcess_Events_CascadeEvent._ID AS _ID,
          WarehouseProcess_Events_CascadeEvent.waitRule AS waitRule,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_CascadeEvent,
           WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_CascadeEvent._ID = WarehouseProcess_Events_InternalEvent._ID
        AND WarehouseProcess_Events_CascadeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_CascadeEvent._ID AS _ID,
             WarehouseProcess_Events_CascadeEvent.waitRule AS waitRule,
             WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_CascadeEvent,
              WarehouseProcess_Events_InternalEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_CascadeEvent._ID = WarehouseProcess_Events_InternalEvent._ID
           AND WarehouseProcess_Events_CascadeEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_CascadeEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_9C2C4CDF0BCD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_CascadeEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 193
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_9C2C4CDF0BCD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_CascadeEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_CascadeEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_CascadeEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 193
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_CascadeEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 193
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.RetryEvent'
GO

CREATE TABLE WarehouseProcess_Events_RetryEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,waitDuration FLOAT NOT NULL
   ,maxCount INT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(194, 'WarehouseProcess.Events.RetryEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_waitDuration
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = waitDuration FROM WarehouseProcess_Events_RetryEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RetryEvent_waitDuration
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE WarehouseProcess_Events_RetryEvent SET waitDuration = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_maxCount
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = maxCount FROM WarehouseProcess_Events_RetryEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RetryEvent_maxCount
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RetryEvent SET maxCount = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_condition
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_Events_InternalEvent_condition @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RetryEvent_condition
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_Events_InternalEvent_condition @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RetryEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RetryEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_RetryEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_RetryEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_802531FF5665
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_InternalEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_RetryEvent (_ID, waitDuration, maxCount)
         VALUES (@_ID, 0.0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_802531FF5665
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_RetryEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_8C938EF198D2
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_RetryEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_InternalEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_8C938EF198D2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_RetryEvent._ID AS _ID,
          WarehouseProcess_Events_RetryEvent.waitDuration AS waitDuration,
          WarehouseProcess_Events_RetryEvent.maxCount AS maxCount,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_RetryEvent,
           WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_RetryEvent._ID = @_ID
        AND WarehouseProcess_Events_RetryEvent._ID = WarehouseProcess_Events_InternalEvent._ID
        AND WarehouseProcess_Events_RetryEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_RetryEvent
AS
   SELECT WarehouseProcess_Events_RetryEvent._ID AS _ID,
          WarehouseProcess_Events_RetryEvent.waitDuration AS waitDuration,
          WarehouseProcess_Events_RetryEvent.maxCount AS maxCount,
          WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_RetryEvent,
           WarehouseProcess_Events_InternalEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_RetryEvent._ID = WarehouseProcess_Events_InternalEvent._ID
        AND WarehouseProcess_Events_RetryEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_RetryEvent._ID AS _ID,
             WarehouseProcess_Events_RetryEvent.waitDuration AS waitDuration,
             WarehouseProcess_Events_RetryEvent.maxCount AS maxCount,
             WarehouseProcess_Events_InternalEvent.condition_ID AS condition_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_RetryEvent,
              WarehouseProcess_Events_InternalEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_RetryEvent._ID = WarehouseProcess_Events_InternalEvent._ID
           AND WarehouseProcess_Events_RetryEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_RetryEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_58CB1CC2BDD4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_RetryEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 194
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_58CB1CC2BDD4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_RetryEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_RetryEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_RetryEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 194
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_RetryEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 194
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.Events.RecurringPointInTimeEvent'
GO

CREATE TABLE WarehouseProcess_Events_RecurringPointInTimeEvent
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,recurringType VARCHAR(128) NOT NULL
   ,frequencyFactor INT NOT NULL
   ,[month] INT
   ,dayOfMonth INT
   ,dayOfWeek VARCHAR(128)
   ,[hour] INT
   ,[minute] INT
   ,[second] INT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(195, 'WarehouseProcess.Events.RecurringPointInTimeEvent')
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_recurringType
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = WarehouseProcess_Events_RecurringPointInTimeEvent.recurringType
      FROM WarehouseProcess_Events_RecurringPointInTimeEvent
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_recurringType
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent
      SET recurringType = 
          (SELECT _EnumLiteral FROM WarehouseProcess_DataType_RecurringType WHERE _EnumLiteral = @_Value)
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_frequencyFactor
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = frequencyFactor FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_frequencyFactor
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET frequencyFactor = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_month
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [month] FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_month
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET [month] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_dayOfMonth
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = dayOfMonth FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_dayOfMonth
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET dayOfMonth = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_dayOfWeek
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   SELECT @_Value = WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfWeek
      FROM WarehouseProcess_Events_RecurringPointInTimeEvent
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_dayOfWeek
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent
      SET dayOfWeek = 
          (SELECT _EnumLiteral FROM WarehouseProcess_DataType_DayOfWeek WHERE _EnumLiteral = @_Value)
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_hour
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [hour] FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_hour
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET [hour] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_minute
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [minute] FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_minute
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET [minute] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_second
    @_ID INT
   ,@_Value INT OUTPUT
AS
   SELECT @_Value = [second] FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_second
    @_ID INT
   ,@_Value INT
AS
   UPDATE WarehouseProcess_Events_RecurringPointInTimeEvent SET [second] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_Events_RecurringPointInTimeEvent_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_Events_RecurringPointInTimeEvent
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_579925AF6F62
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_PointInTimeEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_Events_RecurringPointInTimeEvent (_ID, recurringType, frequencyFactor, [second])
         VALUES (@_ID, 'everyYear', 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_579925AF6F62
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_Events_RecurringPointInTimeEvent
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_13A1F148D34F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_Events_RecurringPointInTimeEvent WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_Events_PointInTimeEvent @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_13A1F148D34F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent
   @_ID INT
AS
   SELECT WarehouseProcess_Events_RecurringPointInTimeEvent._ID AS _ID,
          WarehouseProcess_Events_RecurringPointInTimeEvent.recurringType AS recurringType,
          WarehouseProcess_Events_RecurringPointInTimeEvent.frequencyFactor AS frequencyFactor,
          WarehouseProcess_Events_RecurringPointInTimeEvent.[month] AS [month],
          WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfMonth AS dayOfMonth,
          WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfWeek AS dayOfWeek,
          WarehouseProcess_Events_RecurringPointInTimeEvent.[hour] AS [hour],
          WarehouseProcess_Events_RecurringPointInTimeEvent.[minute] AS [minute],
          WarehouseProcess_Events_RecurringPointInTimeEvent.[second] AS [second],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_RecurringPointInTimeEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = @_ID
        AND WarehouseProcess_Events_RecurringPointInTimeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_Events_RecurringPointInTimeEvent
AS
   SELECT WarehouseProcess_Events_RecurringPointInTimeEvent._ID AS _ID,
          WarehouseProcess_Events_RecurringPointInTimeEvent.recurringType AS recurringType,
          WarehouseProcess_Events_RecurringPointInTimeEvent.frequencyFactor AS frequencyFactor,
          WarehouseProcess_Events_RecurringPointInTimeEvent.[month] AS [month],
          WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfMonth AS dayOfMonth,
          WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfWeek AS dayOfWeek,
          WarehouseProcess_Events_RecurringPointInTimeEvent.[hour] AS [hour],
          WarehouseProcess_Events_RecurringPointInTimeEvent.[minute] AS [minute],
          WarehouseProcess_Events_RecurringPointInTimeEvent.[second] AS [second],
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_Events_RecurringPointInTimeEvent,
           Core_ModelElement
      WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RecurringPointInTimeEvent
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_Events_RecurringPointInTimeEvent._ID AS _ID,
             WarehouseProcess_Events_RecurringPointInTimeEvent.recurringType AS recurringType,
             WarehouseProcess_Events_RecurringPointInTimeEvent.frequencyFactor AS frequencyFactor,
             WarehouseProcess_Events_RecurringPointInTimeEvent.[month] AS [month],
             WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfMonth AS dayOfMonth,
             WarehouseProcess_Events_RecurringPointInTimeEvent.dayOfWeek AS dayOfWeek,
             WarehouseProcess_Events_RecurringPointInTimeEvent.[hour] AS [hour],
             WarehouseProcess_Events_RecurringPointInTimeEvent.[minute] AS [minute],
             WarehouseProcess_Events_RecurringPointInTimeEvent.[second] AS [second],
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_Events_RecurringPointInTimeEvent,
              Core_ModelElement
         WHERE WarehouseProcess_Events_RecurringPointInTimeEvent._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Events_RecurringPointInTimeEvent
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_193D43E4689F
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_Events_RecurringPointInTimeEvent @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 195
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_193D43E4689F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Events_RecurringPointInTimeEvent
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_Events_RecurringPointInTimeEvent @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_Events_RecurringPointInTimeEvent
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 195
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_Events_RecurringPointInTimeEvent
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 195
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.WarehouseProcess'
GO

CREATE TABLE WarehouseProcess_WarehouseProcess
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,staticDefinition BIT NOT NULL
   ,isSequential BIT NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(196, 'WarehouseProcess.WarehouseProcess')
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_staticDefinition
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = staticDefinition FROM WarehouseProcess_WarehouseProcess WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseProcess_staticDefinition
    @_ID INT
   ,@_Value BIT
AS
   UPDATE WarehouseProcess_WarehouseProcess SET staticDefinition = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_isSequential
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = isSequential FROM WarehouseProcess_WarehouseProcess WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseProcess_isSequential
    @_ID INT
   ,@_Value BIT
AS
   UPDATE WarehouseProcess_WarehouseProcess SET isSequential = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseProcess_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseProcess_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_WarehouseProcess
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_WarehouseProcess WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_06531D030270
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_WarehouseProcess (_ID, staticDefinition, isSequential)
         VALUES (@_ID, 0, 0)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_06531D030270
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_WarehouseProcess
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_56B720682388
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @Types = CURSOR FORWARD_ONLY STATIC FOR
         SELECT DISTINCT _Kind_ID FROM Core_Element
            WHERE _ID = @_ID
              AND _Kind_ID IN (197, 199)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_Event_warehouseEvent', 'Delete_WarehouseProcess_Event', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_TriggeringProcess_internalEvent', 'Delete_WarehouseProcess_TriggeringProcess', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_WarehouseProcess WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_56B720682388
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess
   @_ID INT
AS
   SELECT WarehouseProcess_WarehouseProcess._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseProcess._ID = @_ID
        AND WarehouseProcess_WarehouseProcess._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_WarehouseProcess
AS
   SELECT WarehouseProcess_WarehouseProcess._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseProcess._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_WarehouseProcess._ID AS _ID,
             WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
             WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_WarehouseProcess,
              Core_ModelElement
         WHERE WarehouseProcess_WarehouseProcess._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_WarehouseProcess
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (196, 197, 199)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_WarehouseProcess
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 196
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.WarehouseStep'
GO

CREATE TABLE WarehouseProcess_WarehouseStep
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(197, 'WarehouseProcess.WarehouseStep')
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_staticDefinition
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseProcess_staticDefinition @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseStep_staticDefinition
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_WarehouseProcess_staticDefinition @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_isSequential
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseProcess_isSequential @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseStep_isSequential
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_WarehouseProcess_isSequential @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseStep_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseStep_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_WarehouseStep
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_WarehouseStep WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_D8ADD2291B47
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_WarehouseProcess @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_WarehouseStep (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_D8ADD2291B47
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_WarehouseStep
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_F881CA9E43C3
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseStepRunsTransformationStep_transformationStep', 'Delete_WarehouseProcess_WarehouseStepRunsTransformationStep', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseActivityStep_warehouseActivity', 'Delete_WarehouseProcess_WarehouseActivityStep', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_WarehouseStep WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_WarehouseProcess @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_F881CA9E43C3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep
   @_ID INT
AS
   SELECT WarehouseProcess_WarehouseStep._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseStep,
           WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseStep._ID = @_ID
        AND WarehouseProcess_WarehouseStep._ID = WarehouseProcess_WarehouseProcess._ID
        AND WarehouseProcess_WarehouseStep._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_WarehouseStep
AS
   SELECT WarehouseProcess_WarehouseStep._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseStep,
           WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseStep._ID = WarehouseProcess_WarehouseProcess._ID
        AND WarehouseProcess_WarehouseStep._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_WarehouseStep._ID AS _ID,
             WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
             WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_WarehouseStep,
              WarehouseProcess_WarehouseProcess,
              Core_ModelElement
         WHERE WarehouseProcess_WarehouseStep._ID = WarehouseProcess_WarehouseProcess._ID
           AND WarehouseProcess_WarehouseStep._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_WarehouseStep
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_A56284E39D7D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_WarehouseStep @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 197
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_A56284E39D7D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_WarehouseStep
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_WarehouseStep @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_WarehouseStep
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 197
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_WarehouseStep
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 197
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.ProcessPackage'
GO

CREATE TABLE WarehouseProcess_ProcessPackage
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(198, 'WarehouseProcess.ProcessPackage')
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_ProcessPackage_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_ProcessPackage_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_ProcessPackage
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_ProcessPackage WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_A977C3D4A41D
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_Package @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_ProcessPackage (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_A977C3D4A41D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_ProcessPackage
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_131563D94789
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_ProcessPackage WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_Package @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_131563D94789
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage
   @_ID INT
AS
   SELECT WarehouseProcess_ProcessPackage._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_ProcessPackage,
           Core_ModelElement
      WHERE WarehouseProcess_ProcessPackage._ID = @_ID
        AND WarehouseProcess_ProcessPackage._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_ProcessPackage
AS
   SELECT WarehouseProcess_ProcessPackage._ID AS _ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_ProcessPackage,
           Core_ModelElement
      WHERE WarehouseProcess_ProcessPackage._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_ProcessPackage._ID AS _ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_ProcessPackage,
              Core_ModelElement
         WHERE WarehouseProcess_ProcessPackage._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_ProcessPackage
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_7FDA1F4092DC
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_ProcessPackage @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 198
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_7FDA1F4092DC
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_ProcessPackage
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_ProcessPackage @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_ProcessPackage
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 198
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_ProcessPackage
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 198
   RETURN @@Error
GO


PRINT 'Class WarehouseProcess.WarehouseActivity'
GO

CREATE TABLE WarehouseProcess_WarehouseActivity
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(199, 'WarehouseProcess.WarehouseActivity')
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_staticDefinition
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseProcess_staticDefinition @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseActivity_staticDefinition
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_WarehouseProcess_staticDefinition @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_isSequential
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseProcess_isSequential @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseActivity_isSequential
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseProcess_WarehouseProcess_isSequential @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseActivity_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseProcess_WarehouseActivity_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseProcess_WarehouseActivity
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseProcess_WarehouseActivity WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseProces_49FAC603564E
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_WarehouseProcess @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_WarehouseActivity (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseProces_49FAC603564E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseProcess_WarehouseActivity
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseProce_A8BA21D304E0
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseActivityStep_warehouseStep', 'Delete_WarehouseProcess_WarehouseActivityStep', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseProcess_WarehouseActivityRunsTransformationActivity_transformationActivity', 'Delete_WarehouseProcess_WarehouseActivityRunsTransformationActivity', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseProcess_WarehouseActivity WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseProcess_WarehouseProcess @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseProce_A8BA21D304E0
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity
   @_ID INT
AS
   SELECT WarehouseProcess_WarehouseActivity._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseActivity,
           WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseActivity._ID = @_ID
        AND WarehouseProcess_WarehouseActivity._ID = WarehouseProcess_WarehouseProcess._ID
        AND WarehouseProcess_WarehouseActivity._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseProcess_WarehouseActivity
AS
   SELECT WarehouseProcess_WarehouseActivity._ID AS _ID,
          WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
          WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseProcess_WarehouseActivity,
           WarehouseProcess_WarehouseProcess,
           Core_ModelElement
      WHERE WarehouseProcess_WarehouseActivity._ID = WarehouseProcess_WarehouseProcess._ID
        AND WarehouseProcess_WarehouseActivity._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseProcess_WarehouseActivity._ID AS _ID,
             WarehouseProcess_WarehouseProcess.staticDefinition AS staticDefinition,
             WarehouseProcess_WarehouseProcess.isSequential AS isSequential,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseProcess_WarehouseActivity,
              WarehouseProcess_WarehouseProcess,
              Core_ModelElement
         WHERE WarehouseProcess_WarehouseActivity._ID = WarehouseProcess_WarehouseProcess._ID
           AND WarehouseProcess_WarehouseActivity._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_WarehouseActivity
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehousePro_3C21B5E4CC24
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseProcess_WarehouseActivity @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 199
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehousePro_3C21B5E4CC24
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_WarehouseActivity
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseProcess_WarehouseActivity @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseProcess_WarehouseActivity
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 199
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseProcess_WarehouseActivity
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 199
   RETURN @@Error
GO


--
-- WarehouseOperation Classes
--

PRINT 'Class WarehouseOperation.Measurement'
GO

CREATE TABLE WarehouseOperation_Measurement
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,[value] FLOAT NOT NULL
   ,unit VARCHAR(256) NOT NULL
   ,type VARCHAR(256) NOT NULL
   ,creationDate VARCHAR(256) NOT NULL
   ,effectiveDate VARCHAR(256) NOT NULL
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(200, 'WarehouseOperation.Measurement')
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_value
    @_ID INT
   ,@_Value FLOAT OUTPUT
AS
   SELECT @_Value = [value] FROM WarehouseOperation_Measurement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_value
    @_ID INT
   ,@_Value FLOAT
AS
   UPDATE WarehouseOperation_Measurement SET [value] = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_unit
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = unit FROM WarehouseOperation_Measurement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_unit
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_Measurement SET unit = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_type
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = type FROM WarehouseOperation_Measurement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_type
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_Measurement SET type = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_creationDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = creationDate FROM WarehouseOperation_Measurement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_creationDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_Measurement SET creationDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_effectiveDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = effectiveDate FROM WarehouseOperation_Measurement WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_effectiveDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_Measurement SET effectiveDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_Measurement_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseOperation_Measurement
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseOperation_Measurement WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseOperat_A94D94D4D1B9
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_Measurement (_ID, [value], unit, type, creationDate, effectiveDate)
         VALUES (@_ID, 0.0, '', '', '', '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseOperat_A94D94D4D1B9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseOperation_Measurement
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseOpera_25C3FA21DB51
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ModelElementMeasurement_modelElement', 'Delete_WarehouseOperation_ModelElementMeasurement', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseOperation_Measurement WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseOpera_25C3FA21DB51
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement
   @_ID INT
AS
   SELECT WarehouseOperation_Measurement._ID AS _ID,
          WarehouseOperation_Measurement.[value] AS [value],
          WarehouseOperation_Measurement.unit AS unit,
          WarehouseOperation_Measurement.type AS type,
          WarehouseOperation_Measurement.creationDate AS creationDate,
          WarehouseOperation_Measurement.effectiveDate AS effectiveDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_Measurement,
           Core_ModelElement
      WHERE WarehouseOperation_Measurement._ID = @_ID
        AND WarehouseOperation_Measurement._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseOperation_Measurement
AS
   SELECT WarehouseOperation_Measurement._ID AS _ID,
          WarehouseOperation_Measurement.[value] AS [value],
          WarehouseOperation_Measurement.unit AS unit,
          WarehouseOperation_Measurement.type AS type,
          WarehouseOperation_Measurement.creationDate AS creationDate,
          WarehouseOperation_Measurement.effectiveDate AS effectiveDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_Measurement,
           Core_ModelElement
      WHERE WarehouseOperation_Measurement._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_Measurement
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseOperation_Measurement._ID AS _ID,
             WarehouseOperation_Measurement.[value] AS [value],
             WarehouseOperation_Measurement.unit AS unit,
             WarehouseOperation_Measurement.type AS type,
             WarehouseOperation_Measurement.creationDate AS creationDate,
             WarehouseOperation_Measurement.effectiveDate AS effectiveDate,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseOperation_Measurement,
              Core_ModelElement
         WHERE WarehouseOperation_Measurement._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_Measurement
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehouseOpe_9A50A6DEBA36
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_Measurement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 200
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehouseOpe_9A50A6DEBA36
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_Measurement
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseOperation_Measurement @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseOperation_Measurement
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 200
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseOperation_Measurement
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 200
   RETURN @@Error
GO


PRINT 'Class WarehouseOperation.ChangeRequest'
GO

CREATE TABLE WarehouseOperation_ChangeRequest
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,changeDescription VARCHAR(256) NOT NULL
   ,changeReason VARCHAR(256) NOT NULL
   ,status VARCHAR(256) NOT NULL
   ,completed BIT NOT NULL
   ,requestDate VARCHAR(256) NOT NULL
   ,completionDate VARCHAR(256)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(201, 'WarehouseOperation.ChangeRequest')
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_changeDescription
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = changeDescription FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_changeDescription
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_ChangeRequest SET changeDescription = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_changeReason
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = changeReason FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_changeReason
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_ChangeRequest SET changeReason = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_status
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = status FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_status
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_ChangeRequest SET status = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_completed
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = completed FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_completed
    @_ID INT
   ,@_Value BIT
AS
   UPDATE WarehouseOperation_ChangeRequest SET completed = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_requestDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = requestDate FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_requestDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_ChangeRequest SET requestDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_completionDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = completionDate FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_completionDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_ChangeRequest SET completionDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ChangeRequest_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseOperation_ChangeRequest
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseOperat_8D55B7F86A6A
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_ChangeRequest (_ID, changeDescription, changeReason, status, completed, requestDate)
         VALUES (@_ID, '', '', '', 0, '')
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseOperat_8D55B7F86A6A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseOperation_ChangeRequest
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseOpera_4704962D4698
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ModelElementChangeRequest_modelElement', 'Delete_WarehouseOperation_ModelElementChangeRequest', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseOperation_ChangeRequest WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseOpera_4704962D4698
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest
   @_ID INT
AS
   SELECT WarehouseOperation_ChangeRequest._ID AS _ID,
          WarehouseOperation_ChangeRequest.changeDescription AS changeDescription,
          WarehouseOperation_ChangeRequest.changeReason AS changeReason,
          WarehouseOperation_ChangeRequest.status AS status,
          WarehouseOperation_ChangeRequest.completed AS completed,
          WarehouseOperation_ChangeRequest.requestDate AS requestDate,
          WarehouseOperation_ChangeRequest.completionDate AS completionDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_ChangeRequest,
           Core_ModelElement
      WHERE WarehouseOperation_ChangeRequest._ID = @_ID
        AND WarehouseOperation_ChangeRequest._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseOperation_ChangeRequest
AS
   SELECT WarehouseOperation_ChangeRequest._ID AS _ID,
          WarehouseOperation_ChangeRequest.changeDescription AS changeDescription,
          WarehouseOperation_ChangeRequest.changeReason AS changeReason,
          WarehouseOperation_ChangeRequest.status AS status,
          WarehouseOperation_ChangeRequest.completed AS completed,
          WarehouseOperation_ChangeRequest.requestDate AS requestDate,
          WarehouseOperation_ChangeRequest.completionDate AS completionDate,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_ChangeRequest,
           Core_ModelElement
      WHERE WarehouseOperation_ChangeRequest._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ChangeRequest
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseOperation_ChangeRequest._ID AS _ID,
             WarehouseOperation_ChangeRequest.changeDescription AS changeDescription,
             WarehouseOperation_ChangeRequest.changeReason AS changeReason,
             WarehouseOperation_ChangeRequest.status AS status,
             WarehouseOperation_ChangeRequest.completed AS completed,
             WarehouseOperation_ChangeRequest.requestDate AS requestDate,
             WarehouseOperation_ChangeRequest.completionDate AS completionDate,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseOperation_ChangeRequest,
              Core_ModelElement
         WHERE WarehouseOperation_ChangeRequest._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_ChangeRequest
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehouseOpe_0E2E0241DCF8
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_ChangeRequest @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 201
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehouseOpe_0E2E0241DCF8
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_ChangeRequest
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseOperation_ChangeRequest @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseOperation_ChangeRequest
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 201
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseOperation_ChangeRequest
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 201
   RETURN @@Error
GO


PRINT 'Class WarehouseOperation.TransformationExecution'
GO

CREATE TABLE WarehouseOperation_TransformationExecution
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   ,startDate VARCHAR(256) NOT NULL
   ,endDate VARCHAR(256)
   ,inProgress BIT NOT NULL
   ,successful BIT
   ,status_ID INT
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(202, 'WarehouseOperation.TransformationExecution')
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = startDate FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_TransformationExecution SET startDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   SELECT @_Value = endDate FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   UPDATE WarehouseOperation_TransformationExecution SET endDate = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_inProgress
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = inProgress FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_inProgress
    @_ID INT
   ,@_Value BIT
AS
   UPDATE WarehouseOperation_TransformationExecution SET inProgress = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_successful
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   SELECT @_Value = successful FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_successful
    @_ID INT
   ,@_Value BIT
AS
   UPDATE WarehouseOperation_TransformationExecution SET successful = @_Value WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_status
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   SELECT @_Class_ID = status_ID FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_status
    @_ID INT
   ,@_Class_ID INT
AS
   UPDATE WarehouseOperation_TransformationExecution SET status_ID = @_Class_ID WHERE _ID = @_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_TransformationExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseOperation_TransformationExecution
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseOperat_591F67C3BDD4
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_Core_ModelElement @_ID OUTPUT
   IF @Error = 0
   BEGIN
      IF @Error = 0
      BEGIN
         INSERT WarehouseOperation_TransformationExecution (_ID, startDate, inProgress)
            VALUES (@_ID, '', 0)
         SELECT @Error = @@Error
         END
      END
      IF @Error = 0
         COMMIT TRANSACTION Add_WarehouseOperat_591F67C3BDD4
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseOperation_TransformationExecution
   @_ID INT
AS
   DECLARE @Types CURSOR
   DECLARE @Error INT
   DECLARE @status_ID INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_status @_ID, @status_ID OUTPUT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Drop_WarehouseOpera_9A0CFF4A0DB6
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         SET @Types = CURSOR FORWARD_ONLY STATIC FOR
            SELECT DISTINCT _Kind_ID FROM Core_Element
               WHERE _ID = @_ID
                 AND _Kind_ID IN (203, 204)
         SELECT @Error = @@Error
      END
      IF @Error = 0
         EXECUTE @Error = [CWM 1.0_DeleteSubtypes] @_ID, @Types OUTPUT
      IF @Error = 0 AND @status_ID IS NOT NULL
         EXECUTE @Error = Drop_Core_Expression @status_ID
      IF @Error = 0
      BEGIN
         DELETE FROM WarehouseOperation_TransformationExecution WHERE _ID = @_ID
         SELECT @Error = @@Error
      END
   IF @Error = 0
      EXECUTE @Error = Drop_Core_ModelElement @_ID
      IF @Error = 0
         COMMIT TRANSACTION Drop_WarehouseOpera_9A0CFF4A0DB6
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution
   @_ID INT
AS
   SELECT WarehouseOperation_TransformationExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_TransformationExecution._ID = @_ID
        AND WarehouseOperation_TransformationExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseOperation_TransformationExecution
AS
   SELECT WarehouseOperation_TransformationExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_TransformationExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationExecution
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseOperation_TransformationExecution._ID AS _ID,
             WarehouseOperation_TransformationExecution.startDate AS startDate,
             WarehouseOperation_TransformationExecution.endDate AS endDate,
             WarehouseOperation_TransformationExecution.inProgress AS inProgress,
             WarehouseOperation_TransformationExecution.successful AS successful,
             WarehouseOperation_TransformationExecution.status_ID AS status_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseOperation_TransformationExecution,
              Core_ModelElement
         WHERE WarehouseOperation_TransformationExecution._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_TransformationExecution
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehouseOpe_9AB3AE42AFFD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_TransformationExecution @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 202
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehouseOpe_9AB3AE42AFFD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_TransformationExecution
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseOperation_TransformationExecution @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseOperation_TransformationExecution
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID IN
            (202, 203, 204)
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseOperation_TransformationExecution
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 202
   RETURN @@Error
GO


PRINT 'Class WarehouseOperation.ActivityExecution'
GO

CREATE TABLE WarehouseOperation_ActivityExecution
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(203, 'WarehouseOperation.ActivityExecution')
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_startDate @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_startDate @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_endDate @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_endDate @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_inProgress
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_inProgress @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_inProgress
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_inProgress @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_successful
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_successful @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_successful
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_successful @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_status
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_status @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_status
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_status @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_ActivityExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseOperation_ActivityExecution
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseOperation_ActivityExecution WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseOperat_249DBACEDF35
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_TransformationExecution @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_ActivityExecution (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseOperat_249DBACEDF35
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseOperation_ActivityExecution
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseOpera_333EA9466503
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_TransformationActivityExecutions_transformationActivity', 'Delete_WarehouseOperation_TransformationActivityExecutions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ActivityStepExecutions_stepExecution', 'Delete_WarehouseOperation_ActivityStepExecutions', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseOperation_ActivityExecution WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseOperation_TransformationExecution @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseOpera_333EA9466503
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution
   @_ID INT
AS
   SELECT WarehouseOperation_ActivityExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_ActivityExecution,
           WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_ActivityExecution._ID = @_ID
        AND WarehouseOperation_ActivityExecution._ID = WarehouseOperation_TransformationExecution._ID
        AND WarehouseOperation_ActivityExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseOperation_ActivityExecution
AS
   SELECT WarehouseOperation_ActivityExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_ActivityExecution,
           WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_ActivityExecution._ID = WarehouseOperation_TransformationExecution._ID
        AND WarehouseOperation_ActivityExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityExecution
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseOperation_ActivityExecution._ID AS _ID,
             WarehouseOperation_TransformationExecution.startDate AS startDate,
             WarehouseOperation_TransformationExecution.endDate AS endDate,
             WarehouseOperation_TransformationExecution.inProgress AS inProgress,
             WarehouseOperation_TransformationExecution.successful AS successful,
             WarehouseOperation_TransformationExecution.status_ID AS status_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseOperation_ActivityExecution,
              WarehouseOperation_TransformationExecution,
              Core_ModelElement
         WHERE WarehouseOperation_ActivityExecution._ID = WarehouseOperation_TransformationExecution._ID
           AND WarehouseOperation_ActivityExecution._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_ActivityExecution
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehouseOpe_E9FC8627A565
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_ActivityExecution @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 203
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehouseOpe_E9FC8627A565
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_ActivityExecution
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseOperation_ActivityExecution @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseOperation_ActivityExecution
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 203
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseOperation_ActivityExecution
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 203
   RETURN @@Error
GO


PRINT 'Class WarehouseOperation.StepExecution'
GO

CREATE TABLE WarehouseOperation_StepExecution
   (_ID INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Core_Element (_ID)
   )
GO

INSERT [CWM_1.0_ClassMap](_ID,_Name) VALUES(204, 'WarehouseOperation.StepExecution')
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_startDate @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_startDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_startDate @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_endDate @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_endDate
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_endDate @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_inProgress
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_inProgress @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_inProgress
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_inProgress @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_successful
    @_ID INT
   ,@_Value BIT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_successful @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_successful
    @_ID INT
   ,@_Value BIT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_successful @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_status
    @_ID INT
   ,@_Class_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationExecution_status @_ID, @_Class_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_status
    @_ID INT
   ,@_Class_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_WarehouseOperation_TransformationExecution_status @_ID, @_Class_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_name
    @_ID INT
   ,@_Value VARCHAR(256) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_name @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_name
    @_ID INT
   ,@_Value VARCHAR(256)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_name @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128) OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ModelElement_visibility @_ID, @_Value OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Set_WarehouseOperation_StepExecution_visibility
    @_ID INT
   ,@_Value VARCHAR(128)
AS
   DECLARE @Error INT
   EXECUTE @Error = Set_Core_ModelElement_visibility @_ID, @_Value
   RETURN @Error
GO

CREATE PROCEDURE Add_WarehouseOperation_StepExecution
   @_ID INT OUTPUT
AS
   DECLARE @Error INT
   DECLARE @Count INT
   IF @_ID IS NOT NULL
   BEGIN
      SELECT @Count = COUNT(*) FROM WarehouseOperation_StepExecution WHERE _ID = @_ID
      IF @Count > 0
         RETURN 0
   END
   BEGIN TRANSACTION Add_WarehouseOperat_CC91F204B406
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_TransformationExecution @_ID OUTPUT
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_StepExecution (_ID)
         VALUES (@_ID)
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Add_WarehouseOperat_CC91F204B406
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Drop_WarehouseOperation_StepExecution
   @_ID INT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Drop_WarehouseOpera_27F2793C68CE
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_TransformationStepExecutions_transformationStep', 'Delete_WarehouseOperation_TransformationStepExecutions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_ActivityStepExecutions_activityExecution', 'Delete_WarehouseOperation_ActivityStepExecutions', @_ID
   IF @Error = 0
      EXECUTE @Error = [CWM 1.0_DeleteLinks] 'GetCursor_WarehouseOperation_StepExecutionCallAction_callAction', 'Delete_WarehouseOperation_StepExecutionCallAction', @_ID
   IF @Error = 0
   BEGIN
      DELETE FROM WarehouseOperation_StepExecution WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      EXECUTE @Error = Drop_WarehouseOperation_TransformationExecution @_ID
   IF @Error = 0
      COMMIT TRANSACTION Drop_WarehouseOpera_27F2793C68CE
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution
   @_ID INT
AS
   SELECT WarehouseOperation_StepExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_StepExecution,
           WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_StepExecution._ID = @_ID
        AND WarehouseOperation_StepExecution._ID = WarehouseOperation_TransformationExecution._ID
        AND WarehouseOperation_StepExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetAll_WarehouseOperation_StepExecution
AS
   SELECT WarehouseOperation_StepExecution._ID AS _ID,
          WarehouseOperation_TransformationExecution.startDate AS startDate,
          WarehouseOperation_TransformationExecution.endDate AS endDate,
          WarehouseOperation_TransformationExecution.inProgress AS inProgress,
          WarehouseOperation_TransformationExecution.successful AS successful,
          WarehouseOperation_TransformationExecution.status_ID AS status_ID,
          Core_ModelElement.name AS name,
          Core_ModelElement.visibility AS visibility
      FROM WarehouseOperation_StepExecution,
           WarehouseOperation_TransformationExecution,
           Core_ModelElement
      WHERE WarehouseOperation_StepExecution._ID = WarehouseOperation_TransformationExecution._ID
        AND WarehouseOperation_StepExecution._ID = Core_ModelElement._ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_StepExecution
   @_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT WarehouseOperation_StepExecution._ID AS _ID,
             WarehouseOperation_TransformationExecution.startDate AS startDate,
             WarehouseOperation_TransformationExecution.endDate AS endDate,
             WarehouseOperation_TransformationExecution.inProgress AS inProgress,
             WarehouseOperation_TransformationExecution.successful AS successful,
             WarehouseOperation_TransformationExecution.status_ID AS status_ID,
             Core_ModelElement.name AS name,
             Core_ModelElement.visibility AS visibility
         FROM WarehouseOperation_StepExecution,
              WarehouseOperation_TransformationExecution,
              Core_ModelElement
         WHERE WarehouseOperation_StepExecution._ID = WarehouseOperation_TransformationExecution._ID
           AND WarehouseOperation_StepExecution._ID = Core_ModelElement._ID
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_StepExecution
    @_ID INT OUTPUT
AS
   DECLARE @Error INT
   BEGIN TRANSACTION Create_WarehouseOpe_6915CFE131CD
   SELECT @Error = @@Error
   IF @Error = 0
      EXECUTE @Error = Add_WarehouseOperation_StepExecution @_ID OUTPUT
   IF @Error = 0
   BEGIN
      UPDATE Core_Element
         SET _Kind_ID = 204
         WHERE _ID = @_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
      COMMIT TRANSACTION Create_WarehouseOpe_6915CFE131CD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_StepExecution
    @_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Drop_WarehouseOperation_StepExecution @_ID
   RETURN @Error
GO

CREATE PROCEDURE AllOfType_WarehouseOperation_StepExecution
AS
   SELECT _ID FROM Core_Element
      WHERE _Kind_ID = 204
   RETURN @@Error
GO

CREATE PROCEDURE AllOfKind_WarehouseOperation_StepExecution
AS
   SELECT _ID
      FROM Core_Element
      WHERE _Kind_ID = 204
   RETURN @@Error
GO


--
-- Core Associations
--


PRINT 'Association Core.ClassifierFeature'
GO

CREATE TABLE Core_ClassifierFeature
   (owner_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Classifier(_ID)
   ,feature_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Feature(_ID)
   ,feature_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Core_ClassifierFeature_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   SELECT @owner_ID = owner_ID
      FROM Core_ClassifierFeature
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_ClassifierFeature_feature
    @owner_ID INT
AS
   SELECT feature_ID
      FROM Core_ClassifierFeature
      WHERE owner_ID = @owner_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ClassifierFeature_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT feature_ID
         FROM Core_ClassifierFeature
         WHERE owner_ID = @owner_ID
         ORDER BY feature_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_ClassifierFeature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(feature_Ordinal)
      FROM Core_ClassifierFeature
      WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Core_ClassifierFeature (owner_ID, feature_ID, feature_Ordinal)
         VALUES (@owner_ID, @feature_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_ClassifierFeature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Core_ClassifierFeature
      WHERE owner_ID = @owner_ID
        AND feature_ID = @feature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.DependencyClient'
GO

CREATE TABLE Core_DependencyClient
   (client_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,clientDependency_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Dependency(_ID)
   )
GO

CREATE PROCEDURE Get_Core_DependencyClient_client
    @clientDependency_ID INT
AS
   SELECT client_ID
      FROM Core_DependencyClient
      WHERE clientDependency_ID = @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DependencyClient_client
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT client_ID
         FROM Core_DependencyClient
         WHERE clientDependency_ID = @clientDependency_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DependencyClient_clientDependency
    @client_ID INT
AS
   SELECT clientDependency_ID
      FROM Core_DependencyClient
      WHERE client_ID = @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DependencyClient_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT clientDependency_ID
         FROM Core_DependencyClient
         WHERE client_ID = @client_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_DependencyClient
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   INSERT Core_DependencyClient (client_ID, clientDependency_ID)
      VALUES (@client_ID, @clientDependency_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_DependencyClient
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Core_DependencyClient
      WHERE client_ID = @client_ID
        AND clientDependency_ID = @clientDependency_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.DependencySupplier'
GO

CREATE TABLE Core_DependencySupplier
   (supplier_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,supplierDependency_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Dependency(_ID)
   )
GO

CREATE PROCEDURE Get_Core_DependencySupplier_supplier
    @supplierDependency_ID INT
AS
   SELECT supplier_ID
      FROM Core_DependencySupplier
      WHERE supplierDependency_ID = @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DependencySupplier_supplier
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT supplier_ID
         FROM Core_DependencySupplier
         WHERE supplierDependency_ID = @supplierDependency_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DependencySupplier_supplierDependency
    @supplier_ID INT
AS
   SELECT supplierDependency_ID
      FROM Core_DependencySupplier
      WHERE supplier_ID = @supplier_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DependencySupplier_supplierDependency
    @supplier_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT supplierDependency_ID
         FROM Core_DependencySupplier
         WHERE supplier_ID = @supplier_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_DependencySupplier
    @supplier_ID INT
   ,@supplierDependency_ID INT
AS
   DECLARE @Error INT
   INSERT Core_DependencySupplier (supplier_ID, supplierDependency_ID)
      VALUES (@supplier_ID, @supplierDependency_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_DependencySupplier
    @supplier_ID INT
   ,@supplierDependency_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Core_DependencySupplier
      WHERE supplier_ID = @supplier_ID
        AND supplierDependency_ID = @supplierDependency_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.ElementConstraint'
GO

CREATE TABLE Core_ElementConstraint
   (constrainedElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,constrainedElement_Ordinal INT
   ,constraint_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Constraint(_ID)
   )
GO

CREATE PROCEDURE Get_Core_ElementConstraint_constrainedElement
    @constraint_ID INT
AS
   SELECT constrainedElement_ID
      FROM Core_ElementConstraint
      WHERE constraint_ID = @constraint_ID
      ORDER BY constrainedElement_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ElementConstraint_constrainedElement
    @constraint_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT constrainedElement_ID
         FROM Core_ElementConstraint
         WHERE constraint_ID = @constraint_ID
         ORDER BY constrainedElement_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ElementConstraint_constraint
    @constrainedElement_ID INT
AS
   SELECT constraint_ID
      FROM Core_ElementConstraint
      WHERE constrainedElement_ID = @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ElementConstraint_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT constraint_ID
         FROM Core_ElementConstraint
         WHERE constrainedElement_ID = @constrainedElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_ElementConstraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(constrainedElement_Ordinal)
      FROM Core_ElementConstraint
      WHERE constrainedElement_ID = @constrainedElement_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Core_ElementConstraint (constrainedElement_ID, constraint_ID, constrainedElement_Ordinal)
         VALUES (@constrainedElement_ID, @constraint_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_ElementConstraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Core_ElementConstraint
      WHERE constrainedElement_ID = @constrainedElement_ID
        AND constraint_ID = @constraint_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.ElementOwnership'
GO

ALTER TABLE Core_ModelElement ADD namespace_ID INT
ALTER TABLE Core_ModelElement ADD
      FOREIGN KEY (namespace_ID) REFERENCES Core_Namespace(_ID)
GO

CREATE PROCEDURE Get_Core_ElementOwnership_ownedElement
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ElementOwnership_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_ModelElement
         WHERE namespace_ID = @namespace_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ElementOwnership_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   SELECT @namespace_ID = namespace_ID
      FROM Core_ModelElement
      WHERE _ID = @ownedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Core_ElementOwnership
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_ModelElement
      SET namespace_ID = @namespace_ID
      WHERE _ID = @ownedElement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_ElementOwnership
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_ModelElement
      SET namespace_ID = Null
      WHERE namespace_ID = @namespace_ID
        AND _ID = @ownedElement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.ImportedElements'
GO

CREATE TABLE Core_ImportedElements
   (importedElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,importer_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Package(_ID)
   )
GO

CREATE PROCEDURE Get_Core_ImportedElements_importedElement
    @importer_ID INT
AS
   SELECT importedElement_ID
      FROM Core_ImportedElements
      WHERE importer_ID = @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ImportedElements_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT importedElement_ID
         FROM Core_ImportedElements
         WHERE importer_ID = @importer_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ImportedElements_importer
    @importedElement_ID INT
AS
   SELECT importer_ID
      FROM Core_ImportedElements
      WHERE importedElement_ID = @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ImportedElements_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT importer_ID
         FROM Core_ImportedElements
         WHERE importedElement_ID = @importedElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_ImportedElements
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   INSERT Core_ImportedElements (importedElement_ID, importer_ID)
      VALUES (@importedElement_ID, @importer_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_ImportedElements
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Core_ImportedElements
      WHERE importedElement_ID = @importedElement_ID
        AND importer_ID = @importer_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.RangeMultiplicity'
GO

ALTER TABLE Core_MultiplicityRange ADD multiplicity_ID INT
ALTER TABLE Core_MultiplicityRange ALTER COLUMN multiplicity_ID INT NOT NULL
ALTER TABLE Core_MultiplicityRange ADD
      FOREIGN KEY (multiplicity_ID) REFERENCES Core_Multiplicity(_ID)
GO

CREATE PROCEDURE Get_Core_RangeMultiplicity_multiplicity
    @range_ID INT
   ,@multiplicity_ID INT OUTPUT
AS
   SELECT @multiplicity_ID = multiplicity_ID
      FROM Core_MultiplicityRange
      WHERE _ID = @range_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_RangeMultiplicity_range
    @multiplicity_ID INT
AS
   SELECT _ID
      FROM Core_MultiplicityRange
      WHERE multiplicity_ID = @multiplicity_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_RangeMultiplicity_range
    @multiplicity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_MultiplicityRange
         WHERE multiplicity_ID = @multiplicity_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_RangeMultiplicity
    @multiplicity_ID INT
   ,@range_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_MultiplicityRange
      SET multiplicity_ID = @multiplicity_ID
      WHERE _ID = @range_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_RangeMultiplicity
    @multiplicity_ID INT
   ,@range_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_MultiplicityRange
      SET multiplicity_ID = Null
      WHERE multiplicity_ID = @multiplicity_ID
        AND _ID = @range_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.StereotypeConstraints'
GO

ALTER TABLE Core_Constraint ADD constrainedStereotype_ID INT
ALTER TABLE Core_Constraint ADD
      FOREIGN KEY (constrainedStereotype_ID) REFERENCES Core_Stereotype(_ID)
GO

CREATE PROCEDURE Get_Core_StereotypeConstraints_stereotypeConstraint
    @constrainedStereotype_ID INT
AS
   SELECT _ID
      FROM Core_Constraint
      WHERE constrainedStereotype_ID = @constrainedStereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StereotypeConstraints_stereotypeConstraint
    @constrainedStereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_Constraint
         WHERE constrainedStereotype_ID = @constrainedStereotype_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StereotypeConstraints_constrainedStereotype
    @stereotypeConstraint_ID INT
   ,@constrainedStereotype_ID INT OUTPUT
AS
   SELECT @constrainedStereotype_ID = constrainedStereotype_ID
      FROM Core_Constraint
      WHERE _ID = @stereotypeConstraint_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Core_StereotypeConstraints
    @stereotypeConstraint_ID INT
   ,@constrainedStereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_Constraint
      SET constrainedStereotype_ID = @constrainedStereotype_ID
      WHERE _ID = @stereotypeConstraint_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_StereotypeConstraints
    @stereotypeConstraint_ID INT
   ,@constrainedStereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_Constraint
      SET constrainedStereotype_ID = Null
      WHERE constrainedStereotype_ID = @constrainedStereotype_ID
        AND _ID = @stereotypeConstraint_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.StereotypedElement'
GO

ALTER TABLE Core_ModelElement ADD stereotype_ID INT
ALTER TABLE Core_ModelElement ADD
      FOREIGN KEY (stereotype_ID) REFERENCES Core_Stereotype(_ID)
GO

CREATE PROCEDURE Get_Core_StereotypedElement_extendedElement
    @stereotype_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE stereotype_ID = @stereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StereotypedElement_extendedElement
    @stereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_ModelElement
         WHERE stereotype_ID = @stereotype_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StereotypedElement_stereotype
    @extendedElement_ID INT
   ,@stereotype_ID INT OUTPUT
AS
   SELECT @stereotype_ID = stereotype_ID
      FROM Core_ModelElement
      WHERE _ID = @extendedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Core_StereotypedElement
    @extendedElement_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_ModelElement
      SET stereotype_ID = @stereotype_ID
      WHERE _ID = @extendedElement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_StereotypedElement
    @extendedElement_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_ModelElement
      SET stereotype_ID = Null
      WHERE stereotype_ID = @stereotype_ID
        AND _ID = @extendedElement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.StereotypeTaggedValues'
GO

ALTER TABLE Core_TaggedValue ADD stereotype_ID INT
ALTER TABLE Core_TaggedValue ADD
      FOREIGN KEY (stereotype_ID) REFERENCES Core_Stereotype(_ID)
GO

CREATE PROCEDURE Get_Core_StereotypeTaggedValues_requiredTag
    @stereotype_ID INT
AS
   SELECT _ID
      FROM Core_TaggedValue
      WHERE stereotype_ID = @stereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StereotypeTaggedValues_requiredTag
    @stereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_TaggedValue
         WHERE stereotype_ID = @stereotype_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StereotypeTaggedValues_stereotype
    @requiredTag_ID INT
   ,@stereotype_ID INT OUTPUT
AS
   SELECT @stereotype_ID = stereotype_ID
      FROM Core_TaggedValue
      WHERE _ID = @requiredTag_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Core_StereotypeTaggedValues
    @requiredTag_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_TaggedValue
      SET stereotype_ID = @stereotype_ID
      WHERE _ID = @requiredTag_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_StereotypeTaggedValues
    @requiredTag_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_TaggedValue
      SET stereotype_ID = Null
      WHERE stereotype_ID = @stereotype_ID
        AND _ID = @requiredTag_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.StructuralFeatureType'
GO

ALTER TABLE Core_StructuralFeature ADD type_ID INT
ALTER TABLE Core_StructuralFeature ADD
      FOREIGN KEY (type_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Core_StructuralFeatureType_structuralFeature
    @type_ID INT
AS
   SELECT _ID
      FROM Core_StructuralFeature
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StructuralFeatureType_structuralFeature
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_StructuralFeature
         WHERE type_ID = @type_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeatureType_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   SELECT @type_ID = type_ID
      FROM Core_StructuralFeature
      WHERE _ID = @structuralFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Core_StructuralFeatureType
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_StructuralFeature
      SET type_ID = @type_ID
      WHERE _ID = @structuralFeature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_StructuralFeatureType
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_StructuralFeature
      SET type_ID = Null
      WHERE type_ID = @type_ID
        AND _ID = @structuralFeature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Core.TaggedElement'
GO

ALTER TABLE Core_TaggedValue ADD modelElement_ID INT
ALTER TABLE Core_TaggedValue ADD
      FOREIGN KEY (modelElement_ID) REFERENCES Core_ModelElement(_ID)
GO

CREATE PROCEDURE Get_Core_TaggedElement_modelElement
    @taggedValue_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   SELECT @modelElement_ID = modelElement_ID
      FROM Core_TaggedValue
      WHERE _ID = @taggedValue_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Core_TaggedElement_taggedValue
    @modelElement_ID INT
AS
   SELECT _ID
      FROM Core_TaggedValue
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_TaggedElement_taggedValue
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Core_TaggedValue
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Core_TaggedElement
    @modelElement_ID INT
   ,@taggedValue_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_TaggedValue
      SET modelElement_ID = @modelElement_ID
      WHERE _ID = @taggedValue_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Core_TaggedElement
    @modelElement_ID INT
   ,@taggedValue_ID INT
AS
   DECLARE @Error INT
   UPDATE Core_TaggedValue
      SET modelElement_ID = Null
      WHERE modelElement_ID = @modelElement_ID
        AND _ID = @taggedValue_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Behavioral Associations
--


PRINT 'Association Behavioral.BehavioralFeatureParameter'
GO

CREATE TABLE Behavioral_BehavioralFeatureParameter
   (behavioralFeature_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_BehavioralFeature(_ID)
   ,parameter_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_Parameter(_ID)
   ,parameter_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeatureParameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT OUTPUT
AS
   SELECT @behavioralFeature_ID = behavioralFeature_ID
      FROM Behavioral_BehavioralFeatureParameter
      WHERE parameter_ID = @parameter_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeatureParameter_parameter
    @behavioralFeature_ID INT
AS
   SELECT parameter_ID
      FROM Behavioral_BehavioralFeatureParameter
      WHERE behavioralFeature_ID = @behavioralFeature_ID
      ORDER BY parameter_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeatureParameter_parameter
    @behavioralFeature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT parameter_ID
         FROM Behavioral_BehavioralFeatureParameter
         WHERE behavioralFeature_ID = @behavioralFeature_ID
         ORDER BY parameter_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_BehavioralFeatureParameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(parameter_Ordinal)
      FROM Behavioral_BehavioralFeatureParameter
      WHERE parameter_ID = @parameter_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Behavioral_BehavioralFeatureParameter (behavioralFeature_ID, parameter_ID, parameter_Ordinal)
         VALUES (@behavioralFeature_ID, @parameter_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_BehavioralFeatureParameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Behavioral_BehavioralFeatureParameter
      WHERE behavioralFeature_ID = @behavioralFeature_ID
        AND parameter_ID = @parameter_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Behavioral.CallArguments'
GO

CREATE TABLE Behavioral_CallArguments
   (actualArgument_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_Argument(_ID)
   ,actualArgument_Ordinal INT
   ,callAction_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_CallAction(_ID)
   )
GO

CREATE PROCEDURE Get_Behavioral_CallArguments_actualArgument
    @callAction_ID INT
AS
   SELECT actualArgument_ID
      FROM Behavioral_CallArguments
      WHERE callAction_ID = @callAction_ID
      ORDER BY actualArgument_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallArguments_actualArgument
    @callAction_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT actualArgument_ID
         FROM Behavioral_CallArguments
         WHERE callAction_ID = @callAction_ID
         ORDER BY actualArgument_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallArguments_callAction
    @actualArgument_ID INT
   ,@callAction_ID INT OUTPUT
AS
   SELECT @callAction_ID = callAction_ID
      FROM Behavioral_CallArguments
      WHERE actualArgument_ID = @actualArgument_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Behavioral_CallArguments
    @actualArgument_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(actualArgument_Ordinal)
      FROM Behavioral_CallArguments
      WHERE actualArgument_ID = @actualArgument_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Behavioral_CallArguments (actualArgument_ID, callAction_ID, actualArgument_Ordinal)
         VALUES (@actualArgument_ID, @callAction_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_CallArguments
    @actualArgument_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Behavioral_CallArguments
      WHERE actualArgument_ID = @actualArgument_ID
        AND callAction_ID = @callAction_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Behavioral.EventParameter'
GO

CREATE TABLE Behavioral_EventParameter
   (event_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_Event(_ID)
   ,parameter_ID INT NOT NULL FOREIGN KEY REFERENCES Behavioral_Parameter(_ID)
   ,parameter_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Behavioral_EventParameter_event
    @parameter_ID INT
   ,@event_ID INT OUTPUT
AS
   SELECT @event_ID = event_ID
      FROM Behavioral_EventParameter
      WHERE parameter_ID = @parameter_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_EventParameter_parameter
    @event_ID INT
AS
   SELECT parameter_ID
      FROM Behavioral_EventParameter
      WHERE event_ID = @event_ID
      ORDER BY parameter_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_EventParameter_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT parameter_ID
         FROM Behavioral_EventParameter
         WHERE event_ID = @event_ID
         ORDER BY parameter_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_EventParameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(parameter_Ordinal)
      FROM Behavioral_EventParameter
      WHERE parameter_ID = @parameter_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Behavioral_EventParameter (event_ID, parameter_ID, parameter_Ordinal)
         VALUES (@event_ID, @parameter_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_EventParameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Behavioral_EventParameter
      WHERE event_ID = @event_ID
        AND parameter_ID = @parameter_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Behavioral.CalledOperation'
GO

ALTER TABLE Behavioral_CallAction ADD operation_ID INT
ALTER TABLE Behavioral_CallAction ADD
      FOREIGN KEY (operation_ID) REFERENCES Behavioral_Operation(_ID)
GO

CREATE PROCEDURE Get_Behavioral_CalledOperation_callAction
    @operation_ID INT
AS
   SELECT _ID
      FROM Behavioral_CallAction
      WHERE operation_ID = @operation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CalledOperation_callAction
    @operation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Behavioral_CallAction
         WHERE operation_ID = @operation_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CalledOperation_operation
    @callAction_ID INT
   ,@operation_ID INT OUTPUT
AS
   SELECT @operation_ID = operation_ID
      FROM Behavioral_CallAction
      WHERE _ID = @callAction_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Behavioral_CalledOperation
    @callAction_ID INT
   ,@operation_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_CallAction
      SET operation_ID = @operation_ID
      WHERE _ID = @callAction_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_CalledOperation
    @callAction_ID INT
   ,@operation_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_CallAction
      SET operation_ID = Null
      WHERE operation_ID = @operation_ID
        AND _ID = @callAction_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Behavioral.OperationMethod'
GO

ALTER TABLE Behavioral_Method ADD specification_ID INT
ALTER TABLE Behavioral_Method ADD
      FOREIGN KEY (specification_ID) REFERENCES Behavioral_Operation(_ID)
GO

CREATE PROCEDURE Get_Behavioral_OperationMethod_specification
    @method_ID INT
   ,@specification_ID INT OUTPUT
AS
   SELECT @specification_ID = specification_ID
      FROM Behavioral_Method
      WHERE _ID = @method_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Behavioral_OperationMethod_method
    @specification_ID INT
AS
   SELECT _ID
      FROM Behavioral_Method
      WHERE specification_ID = @specification_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_OperationMethod_method
    @specification_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Behavioral_Method
         WHERE specification_ID = @specification_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Behavioral_OperationMethod
    @specification_ID INT
   ,@method_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_Method
      SET specification_ID = @specification_ID
      WHERE _ID = @method_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_OperationMethod
    @specification_ID INT
   ,@method_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_Method
      SET specification_ID = Null
      WHERE specification_ID = @specification_ID
        AND _ID = @method_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Behavioral.ParameterType'
GO

ALTER TABLE Behavioral_Parameter ADD type_ID INT
ALTER TABLE Behavioral_Parameter ADD
      FOREIGN KEY (type_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Behavioral_ParameterType_parameter
    @type_ID INT
AS
   SELECT _ID
      FROM Behavioral_Parameter
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_ParameterType_parameter
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Behavioral_Parameter
         WHERE type_ID = @type_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_ParameterType_type
    @parameter_ID INT
   ,@type_ID INT OUTPUT
AS
   SELECT @type_ID = type_ID
      FROM Behavioral_Parameter
      WHERE _ID = @parameter_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Behavioral_ParameterType
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_Parameter
      SET type_ID = @type_ID
      WHERE _ID = @parameter_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Behavioral_ParameterType
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   UPDATE Behavioral_Parameter
      SET type_ID = Null
      WHERE type_ID = @type_ID
        AND _ID = @parameter_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Relationships Associations
--


PRINT 'Association Relationships.ChildElement'
GO

ALTER TABLE Relationships_Generalization ADD child_ID INT
ALTER TABLE Relationships_Generalization ADD
      FOREIGN KEY (child_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Relationships_ChildElement_child
    @generalization_ID INT
   ,@child_ID INT OUTPUT
AS
   SELECT @child_ID = child_ID
      FROM Relationships_Generalization
      WHERE _ID = @generalization_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relationships_ChildElement_generalization
    @child_ID INT
AS
   SELECT _ID
      FROM Relationships_Generalization
      WHERE child_ID = @child_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_ChildElement_generalization
    @child_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relationships_Generalization
         WHERE child_ID = @child_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relationships_ChildElement
    @child_ID INT
   ,@generalization_ID INT
AS
   DECLARE @Error INT
   UPDATE Relationships_Generalization
      SET child_ID = @child_ID
      WHERE _ID = @generalization_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relationships_ChildElement
    @child_ID INT
   ,@generalization_ID INT
AS
   DECLARE @Error INT
   UPDATE Relationships_Generalization
      SET child_ID = Null
      WHERE child_ID = @child_ID
        AND _ID = @generalization_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relationships.ParentElement'
GO

ALTER TABLE Relationships_Generalization ADD parent_ID INT
ALTER TABLE Relationships_Generalization ADD
      FOREIGN KEY (parent_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Relationships_ParentElement_parent
    @specialization_ID INT
   ,@parent_ID INT OUTPUT
AS
   SELECT @parent_ID = parent_ID
      FROM Relationships_Generalization
      WHERE _ID = @specialization_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relationships_ParentElement_specialization
    @parent_ID INT
AS
   SELECT _ID
      FROM Relationships_Generalization
      WHERE parent_ID = @parent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_ParentElement_specialization
    @parent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relationships_Generalization
         WHERE parent_ID = @parent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relationships_ParentElement
    @parent_ID INT
   ,@specialization_ID INT
AS
   DECLARE @Error INT
   UPDATE Relationships_Generalization
      SET parent_ID = @parent_ID
      WHERE _ID = @specialization_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relationships_ParentElement
    @parent_ID INT
   ,@specialization_ID INT
AS
   DECLARE @Error INT
   UPDATE Relationships_Generalization
      SET parent_ID = Null
      WHERE parent_ID = @parent_ID
        AND _ID = @specialization_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Instance Associations
--


PRINT 'Association Instance.SlotValue'
GO

ALTER TABLE Instance_Slot ADD value_ID INT
ALTER TABLE Instance_Slot ADD
      FOREIGN KEY (value_ID) REFERENCES Instance_Instance(_ID)
GO

CREATE PROCEDURE Get_Instance_SlotValue_valueSlot
    @value_ID INT
AS
   SELECT _ID
      FROM Instance_Slot
      WHERE value_ID = @value_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_SlotValue_valueSlot
    @value_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Instance_Slot
         WHERE value_ID = @value_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_SlotValue_value
    @valueSlot_ID INT
   ,@value_ID INT OUTPUT
AS
   SELECT @value_ID = value_ID
      FROM Instance_Slot
      WHERE _ID = @valueSlot_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Instance_SlotValue
    @valueSlot_ID INT
   ,@value_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET value_ID = @value_ID
      WHERE _ID = @valueSlot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_SlotValue
    @valueSlot_ID INT
   ,@value_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET value_ID = Null
      WHERE value_ID = @value_ID
        AND _ID = @valueSlot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Instance.InstanceClassifier'
GO

ALTER TABLE Instance_Instance ADD classifier_ID INT
ALTER TABLE Instance_Instance ADD
      FOREIGN KEY (classifier_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Instance_InstanceClassifier_instance
    @classifier_ID INT
AS
   SELECT _ID
      FROM Instance_Instance
      WHERE classifier_ID = @classifier_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_InstanceClassifier_instance
    @classifier_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Instance_Instance
         WHERE classifier_ID = @classifier_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_InstanceClassifier_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   SELECT @classifier_ID = classifier_ID
      FROM Instance_Instance
      WHERE _ID = @instance_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Instance_InstanceClassifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Instance
      SET classifier_ID = @classifier_ID
      WHERE _ID = @instance_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_InstanceClassifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Instance
      SET classifier_ID = Null
      WHERE classifier_ID = @classifier_ID
        AND _ID = @instance_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Instance.ObjectSlot'
GO

ALTER TABLE Instance_Slot ADD object_ID INT
ALTER TABLE Instance_Slot ADD
      FOREIGN KEY (object_ID) REFERENCES Instance_Object(_ID)
GO

CREATE PROCEDURE Get_Instance_ObjectSlot_slot
    @object_ID INT
AS
   SELECT _ID
      FROM Instance_Slot
      WHERE object_ID = @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_ObjectSlot_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Instance_Slot
         WHERE object_ID = @object_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_ObjectSlot_object
    @slot_ID INT
   ,@object_ID INT OUTPUT
AS
   SELECT @object_ID = object_ID
      FROM Instance_Slot
      WHERE _ID = @slot_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Instance_ObjectSlot
    @slot_ID INT
   ,@object_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET object_ID = @object_ID
      WHERE _ID = @slot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_ObjectSlot
    @slot_ID INT
   ,@object_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET object_ID = Null
      WHERE object_ID = @object_ID
        AND _ID = @slot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Instance.FeatureSlot'
GO

ALTER TABLE Instance_Slot ADD feature_ID INT
ALTER TABLE Instance_Slot ADD
      FOREIGN KEY (feature_ID) REFERENCES Core_StructuralFeature(_ID)
GO

CREATE PROCEDURE Get_Instance_FeatureSlot_feature
    @slot_ID INT
   ,@feature_ID INT OUTPUT
AS
   SELECT @feature_ID = feature_ID
      FROM Instance_Slot
      WHERE _ID = @slot_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Instance_FeatureSlot_slot
    @feature_ID INT
AS
   SELECT _ID
      FROM Instance_Slot
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_FeatureSlot_slot
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Instance_Slot
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Instance_FeatureSlot
    @feature_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET feature_ID = @feature_ID
      WHERE _ID = @slot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Instance_FeatureSlot
    @feature_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   UPDATE Instance_Slot
      SET feature_ID = Null
      WHERE feature_ID = @feature_ID
        AND _ID = @slot_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- BusinessInformation Associations
--


PRINT 'Association BusinessInformation.ContactEmail'
GO

CREATE TABLE BusinessInformation_ContactEmail
   (email_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Email(_ID)
   ,email_Ordinal INT
   ,contact_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Contact(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ContactEmail_email
    @contact_ID INT
AS
   SELECT email_ID
      FROM BusinessInformation_ContactEmail
      WHERE contact_ID = @contact_ID
      ORDER BY email_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactEmail_email
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT email_ID
         FROM BusinessInformation_ContactEmail
         WHERE contact_ID = @contact_ID
         ORDER BY email_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ContactEmail_contact
    @email_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactEmail
      WHERE email_ID = @email_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactEmail_contact
    @email_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT contact_ID
         FROM BusinessInformation_ContactEmail
         WHERE email_ID = @email_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ContactEmail
    @email_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(email_Ordinal)
      FROM BusinessInformation_ContactEmail
      WHERE email_ID = @email_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ContactEmail (email_ID, contact_ID, email_Ordinal)
         VALUES (@email_ID, @contact_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ContactEmail
    @email_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ContactEmail
      WHERE email_ID = @email_ID
        AND contact_ID = @contact_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ContactLocation'
GO

CREATE TABLE BusinessInformation_ContactLocation
   (location_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Location(_ID)
   ,location_Ordinal INT
   ,contact_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Contact(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ContactLocation_location
    @contact_ID INT
AS
   SELECT location_ID
      FROM BusinessInformation_ContactLocation
      WHERE contact_ID = @contact_ID
      ORDER BY location_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactLocation_location
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT location_ID
         FROM BusinessInformation_ContactLocation
         WHERE contact_ID = @contact_ID
         ORDER BY location_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ContactLocation_contact
    @location_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactLocation
      WHERE location_ID = @location_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactLocation_contact
    @location_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT contact_ID
         FROM BusinessInformation_ContactLocation
         WHERE location_ID = @location_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ContactLocation
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(location_Ordinal)
      FROM BusinessInformation_ContactLocation
      WHERE location_ID = @location_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ContactLocation (location_ID, contact_ID, location_Ordinal)
         VALUES (@location_ID, @contact_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ContactLocation
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ContactLocation
      WHERE location_ID = @location_ID
        AND contact_ID = @contact_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ContactResourceLocator'
GO

CREATE TABLE BusinessInformation_ContactResourceLocator
   (url_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_ResourceLocator(_ID)
   ,url_Ordinal INT
   ,contact_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Contact(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ContactResourceLocator_url
    @contact_ID INT
AS
   SELECT url_ID
      FROM BusinessInformation_ContactResourceLocator
      WHERE contact_ID = @contact_ID
      ORDER BY url_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactResourceLocator_url
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT url_ID
         FROM BusinessInformation_ContactResourceLocator
         WHERE contact_ID = @contact_ID
         ORDER BY url_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ContactResourceLocator_contact
    @url_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactResourceLocator
      WHERE url_ID = @url_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactResourceLocator_contact
    @url_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT contact_ID
         FROM BusinessInformation_ContactResourceLocator
         WHERE url_ID = @url_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ContactResourceLocator
    @url_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(url_Ordinal)
      FROM BusinessInformation_ContactResourceLocator
      WHERE url_ID = @url_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ContactResourceLocator (url_ID, contact_ID, url_Ordinal)
         VALUES (@url_ID, @contact_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ContactResourceLocator
    @url_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ContactResourceLocator
      WHERE url_ID = @url_ID
        AND contact_ID = @contact_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ContactTelephone'
GO

CREATE TABLE BusinessInformation_ContactTelephone
   (telephone_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Telephone(_ID)
   ,telephone_Ordinal INT
   ,contact_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Contact(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ContactTelephone_telephone
    @contact_ID INT
AS
   SELECT telephone_ID
      FROM BusinessInformation_ContactTelephone
      WHERE contact_ID = @contact_ID
      ORDER BY telephone_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactTelephone_telephone
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT telephone_ID
         FROM BusinessInformation_ContactTelephone
         WHERE contact_ID = @contact_ID
         ORDER BY telephone_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ContactTelephone_contact
    @telephone_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactTelephone
      WHERE telephone_ID = @telephone_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ContactTelephone_contact
    @telephone_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT contact_ID
         FROM BusinessInformation_ContactTelephone
         WHERE telephone_ID = @telephone_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ContactTelephone
    @telephone_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(telephone_Ordinal)
      FROM BusinessInformation_ContactTelephone
      WHERE telephone_ID = @telephone_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ContactTelephone (telephone_ID, contact_ID, telephone_Ordinal)
         VALUES (@telephone_ID, @contact_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ContactTelephone
    @telephone_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ContactTelephone
      WHERE telephone_ID = @telephone_ID
        AND contact_ID = @contact_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.DocumentDescribes'
GO

CREATE TABLE BusinessInformation_DocumentDescribes
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,document_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Document(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_DocumentDescribes_modelElement
    @document_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_DocumentDescribes
      WHERE document_ID = @document_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_DocumentDescribes_modelElement
    @document_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT modelElement_ID
         FROM BusinessInformation_DocumentDescribes
         WHERE document_ID = @document_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_DocumentDescribes_document
    @modelElement_ID INT
AS
   SELECT document_ID
      FROM BusinessInformation_DocumentDescribes
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_DocumentDescribes_document
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT document_ID
         FROM BusinessInformation_DocumentDescribes
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_DocumentDescribes
    @modelElement_ID INT
   ,@document_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessInformation_DocumentDescribes (modelElement_ID, document_ID)
      VALUES (@modelElement_ID, @document_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_DocumentDescribes
    @modelElement_ID INT
   ,@document_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_DocumentDescribes
      WHERE modelElement_ID = @modelElement_ID
        AND document_ID = @document_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ModelElementDescription'
GO

CREATE TABLE BusinessInformation_ModelElementDescription
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,description_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Description(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ModelElementDescription_modelElement
    @description_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_ModelElementDescription
      WHERE description_ID = @description_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ModelElementDescription_modelElement
    @description_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT modelElement_ID
         FROM BusinessInformation_ModelElementDescription
         WHERE description_ID = @description_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ModelElementDescription_description
    @modelElement_ID INT
AS
   SELECT description_ID
      FROM BusinessInformation_ModelElementDescription
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ModelElementDescription_description
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT description_ID
         FROM BusinessInformation_ModelElementDescription
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ModelElementDescription
    @modelElement_ID INT
   ,@description_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessInformation_ModelElementDescription (modelElement_ID, description_ID)
      VALUES (@modelElement_ID, @description_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ModelElementDescription
    @modelElement_ID INT
   ,@description_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ModelElementDescription
      WHERE modelElement_ID = @modelElement_ID
        AND description_ID = @description_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ModelElementResponsibility'
GO

CREATE TABLE BusinessInformation_ModelElementResponsibility
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,responsibleParty_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_ResponsibleParty(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ModelElementResponsibility_modelElement
    @responsibleParty_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_ModelElementResponsibility
      WHERE responsibleParty_ID = @responsibleParty_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ModelElementResponsibility_modelElement
    @responsibleParty_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT modelElement_ID
         FROM BusinessInformation_ModelElementResponsibility
         WHERE responsibleParty_ID = @responsibleParty_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ModelElementResponsibility_responsibleParty
    @modelElement_ID INT
AS
   SELECT responsibleParty_ID
      FROM BusinessInformation_ModelElementResponsibility
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ModelElementResponsibility_responsibleParty
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT responsibleParty_ID
         FROM BusinessInformation_ModelElementResponsibility
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ModelElementResponsibility
    @modelElement_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessInformation_ModelElementResponsibility (modelElement_ID, responsibleParty_ID)
      VALUES (@modelElement_ID, @responsibleParty_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ModelElementResponsibility
    @modelElement_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ModelElementResponsibility
      WHERE modelElement_ID = @modelElement_ID
        AND responsibleParty_ID = @responsibleParty_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessInformation.ResponsiblePartyContact'
GO

CREATE TABLE BusinessInformation_ResponsiblePartyContact
   (contact_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_Contact(_ID)
   ,contact_Ordinal INT
   ,responsibleParty_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessInformation_ResponsibleParty(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsiblePartyContact_contact
    @responsibleParty_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ResponsiblePartyContact
      WHERE responsibleParty_ID = @responsibleParty_ID
      ORDER BY contact_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsiblePartyContact_contact
    @responsibleParty_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT contact_ID
         FROM BusinessInformation_ResponsiblePartyContact
         WHERE responsibleParty_ID = @responsibleParty_ID
         ORDER BY contact_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsiblePartyContact_responsibleParty
    @contact_ID INT
AS
   SELECT responsibleParty_ID
      FROM BusinessInformation_ResponsiblePartyContact
      WHERE contact_ID = @contact_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsiblePartyContact_responsibleParty
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT responsibleParty_ID
         FROM BusinessInformation_ResponsiblePartyContact
         WHERE contact_ID = @contact_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessInformation_ResponsiblePartyContact
    @contact_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(contact_Ordinal)
      FROM BusinessInformation_ResponsiblePartyContact
      WHERE contact_ID = @contact_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT BusinessInformation_ResponsiblePartyContact (contact_ID, responsibleParty_ID, contact_Ordinal)
         VALUES (@contact_ID, @responsibleParty_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessInformation_ResponsiblePartyContact
    @contact_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessInformation_ResponsiblePartyContact
      WHERE contact_ID = @contact_ID
        AND responsibleParty_ID = @responsibleParty_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- DataTypes Associations
--


PRINT 'Association DataTypes.ClassifierAlias'
GO

ALTER TABLE DataTypes_TypeAlias ADD type_ID INT
ALTER TABLE DataTypes_TypeAlias ADD
      FOREIGN KEY (type_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_DataTypes_ClassifierAlias_type
    @alias_ID INT
   ,@type_ID INT OUTPUT
AS
   SELECT @type_ID = type_ID
      FROM DataTypes_TypeAlias
      WHERE _ID = @alias_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_ClassifierAlias_alias
    @type_ID INT
AS
   SELECT _ID
      FROM DataTypes_TypeAlias
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_ClassifierAlias_alias
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataTypes_TypeAlias
         WHERE type_ID = @type_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_ClassifierAlias
    @type_ID INT
   ,@alias_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_TypeAlias
      SET type_ID = @type_ID
      WHERE _ID = @alias_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_ClassifierAlias
    @type_ID INT
   ,@alias_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_TypeAlias
      SET type_ID = Null
      WHERE type_ID = @type_ID
        AND _ID = @alias_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataTypes.EnumerationLiterals'
GO

ALTER TABLE DataTypes_EnumerationLiteral ADD enumeration_ID INT
ALTER TABLE DataTypes_EnumerationLiteral ALTER COLUMN enumeration_ID INT NOT NULL
ALTER TABLE DataTypes_EnumerationLiteral ADD
      FOREIGN KEY (enumeration_ID) REFERENCES DataTypes_Enumeration(_ID)
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiterals_enumeration
    @literal_ID INT
   ,@enumeration_ID INT OUTPUT
AS
   SELECT @enumeration_ID = enumeration_ID
      FROM DataTypes_EnumerationLiteral
      WHERE _ID = @literal_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiterals_literal
    @enumeration_ID INT
AS
   SELECT _ID
      FROM DataTypes_EnumerationLiteral
      WHERE enumeration_ID = @enumeration_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_EnumerationLiterals_literal
    @enumeration_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataTypes_EnumerationLiteral
         WHERE enumeration_ID = @enumeration_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_EnumerationLiterals
    @enumeration_ID INT
   ,@literal_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_EnumerationLiteral
      SET enumeration_ID = @enumeration_ID
      WHERE _ID = @literal_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_EnumerationLiterals
    @enumeration_ID INT
   ,@literal_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_EnumerationLiteral
      SET enumeration_ID = Null
      WHERE enumeration_ID = @enumeration_ID
        AND _ID = @literal_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataTypes.UnionDiscriminator'
GO

ALTER TABLE DataTypes_Union ADD discriminator_ID INT
ALTER TABLE DataTypes_Union ADD
      FOREIGN KEY (discriminator_ID) REFERENCES Core_StructuralFeature(_ID)
GO

CREATE PROCEDURE Get_DataTypes_UnionDiscriminator_discriminator
    @discriminatedUnion_ID INT
   ,@discriminator_ID INT OUTPUT
AS
   SELECT @discriminator_ID = discriminator_ID
      FROM DataTypes_Union
      WHERE _ID = @discriminatedUnion_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataTypes_UnionDiscriminator_discriminatedUnion
    @discriminator_ID INT
AS
   SELECT _ID
      FROM DataTypes_Union
      WHERE discriminator_ID = @discriminator_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_UnionDiscriminator_discriminatedUnion
    @discriminator_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataTypes_Union
         WHERE discriminator_ID = @discriminator_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataTypes_UnionDiscriminator
    @discriminator_ID INT
   ,@discriminatedUnion_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_Union
      SET discriminator_ID = @discriminator_ID
      WHERE _ID = @discriminatedUnion_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataTypes_UnionDiscriminator
    @discriminator_ID INT
   ,@discriminatedUnion_ID INT
AS
   DECLARE @Error INT
   UPDATE DataTypes_Union
      SET discriminator_ID = Null
      WHERE discriminator_ID = @discriminator_ID
        AND _ID = @discriminatedUnion_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Expressions Associations
--


PRINT 'Association Expressions.ExpressionNodeClassifier'
GO

ALTER TABLE Expressions_ExpressionNode ADD type_ID INT
ALTER TABLE Expressions_ExpressionNode ADD
      FOREIGN KEY (type_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_Expressions_ExpressionNodeClassifier_type
    @expressionNode_ID INT
   ,@type_ID INT OUTPUT
AS
   SELECT @type_ID = type_ID
      FROM Expressions_ExpressionNode
      WHERE _ID = @expressionNode_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Expressions_ExpressionNodeClassifier_expressionNode
    @type_ID INT
AS
   SELECT _ID
      FROM Expressions_ExpressionNode
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_ExpressionNodeClassifier_expressionNode
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Expressions_ExpressionNode
         WHERE type_ID = @type_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_ExpressionNodeClassifier
    @type_ID INT
   ,@expressionNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_ExpressionNode
      SET type_ID = @type_ID
      WHERE _ID = @expressionNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_ExpressionNodeClassifier
    @type_ID INT
   ,@expressionNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_ExpressionNode
      SET type_ID = Null
      WHERE type_ID = @type_ID
        AND _ID = @expressionNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Expressions.NodeFeature'
GO

ALTER TABLE Expressions_FeatureNode ADD feature_ID INT
ALTER TABLE Expressions_FeatureNode ADD
      FOREIGN KEY (feature_ID) REFERENCES Core_Feature(_ID)
GO

CREATE PROCEDURE Get_Expressions_NodeFeature_feature
    @featureNode_ID INT
   ,@feature_ID INT OUTPUT
AS
   SELECT @feature_ID = feature_ID
      FROM Expressions_FeatureNode
      WHERE _ID = @featureNode_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Expressions_NodeFeature_featureNode
    @feature_ID INT
AS
   SELECT _ID
      FROM Expressions_FeatureNode
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_NodeFeature_featureNode
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Expressions_FeatureNode
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_NodeFeature
    @feature_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_FeatureNode
      SET feature_ID = @feature_ID
      WHERE _ID = @featureNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_NodeFeature
    @feature_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_FeatureNode
      SET feature_ID = Null
      WHERE feature_ID = @feature_ID
        AND _ID = @featureNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Expressions.OperationArgument'
GO

CREATE TABLE Expressions_OperationArgument
   (featureNode_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_FeatureNode(_ID)
   ,argument_ID INT NOT NULL FOREIGN KEY REFERENCES Expressions_ExpressionNode(_ID)
   ,argument_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Expressions_OperationArgument_featureNode
    @argument_ID INT
   ,@featureNode_ID INT OUTPUT
AS
   SELECT @featureNode_ID = featureNode_ID
      FROM Expressions_OperationArgument
      WHERE argument_ID = @argument_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Expressions_OperationArgument_argument
    @featureNode_ID INT
AS
   SELECT argument_ID
      FROM Expressions_OperationArgument
      WHERE featureNode_ID = @featureNode_ID
      ORDER BY argument_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_OperationArgument_argument
    @featureNode_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT argument_ID
         FROM Expressions_OperationArgument
         WHERE featureNode_ID = @featureNode_ID
         ORDER BY argument_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_OperationArgument
    @featureNode_ID INT
   ,@argument_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(argument_Ordinal)
      FROM Expressions_OperationArgument
      WHERE argument_ID = @argument_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Expressions_OperationArgument (featureNode_ID, argument_ID, argument_Ordinal)
         VALUES (@featureNode_ID, @argument_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_OperationArgument
    @featureNode_ID INT
   ,@argument_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Expressions_OperationArgument
      WHERE featureNode_ID = @featureNode_ID
        AND argument_ID = @argument_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Expressions.ReferencedElement'
GO

ALTER TABLE Expressions_ElementNode ADD modelElement_ID INT
ALTER TABLE Expressions_ElementNode ADD
      FOREIGN KEY (modelElement_ID) REFERENCES Core_ModelElement(_ID)
GO

CREATE PROCEDURE Get_Expressions_ReferencedElement_modelElement
    @elementNode_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   SELECT @modelElement_ID = modelElement_ID
      FROM Expressions_ElementNode
      WHERE _ID = @elementNode_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Expressions_ReferencedElement_elementNode
    @modelElement_ID INT
AS
   SELECT _ID
      FROM Expressions_ElementNode
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_ReferencedElement_elementNode
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Expressions_ElementNode
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Expressions_ReferencedElement
    @modelElement_ID INT
   ,@elementNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_ElementNode
      SET modelElement_ID = @modelElement_ID
      WHERE _ID = @elementNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Expressions_ReferencedElement
    @modelElement_ID INT
   ,@elementNode_ID INT
AS
   DECLARE @Error INT
   UPDATE Expressions_ElementNode
      SET modelElement_ID = Null
      WHERE modelElement_ID = @modelElement_ID
        AND _ID = @elementNode_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- KeysIndexes Associations
--


PRINT 'Association KeysIndexes.IndexedFeatures'
GO

ALTER TABLE KeysIndexes_IndexedFeature ADD feature_ID INT
ALTER TABLE KeysIndexes_IndexedFeature ADD
      FOREIGN KEY (feature_ID) REFERENCES Core_StructuralFeature(_ID)
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeatures_feature
    @indexedFeature_ID INT
   ,@feature_ID INT OUTPUT
AS
   SELECT @feature_ID = feature_ID
      FROM KeysIndexes_IndexedFeature
      WHERE _ID = @indexedFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeatures_indexedFeature
    @feature_ID INT
AS
   SELECT _ID
      FROM KeysIndexes_IndexedFeature
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeatures_indexedFeature
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM KeysIndexes_IndexedFeature
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_IndexedFeatures
    @feature_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_IndexedFeature
      SET feature_ID = @feature_ID
      WHERE _ID = @indexedFeature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_IndexedFeatures
    @feature_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_IndexedFeature
      SET feature_ID = Null
      WHERE feature_ID = @feature_ID
        AND _ID = @indexedFeature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association KeysIndexes.IndexedFeatureInfo'
GO

CREATE TABLE KeysIndexes_IndexedFeatureInfo
   (index_ID INT NOT NULL FOREIGN KEY REFERENCES KeysIndexes_Index(_ID)
   ,indexedFeature_ID INT NOT NULL FOREIGN KEY REFERENCES KeysIndexes_IndexedFeature(_ID)
   ,indexedFeature_Ordinal INT
   )
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeatureInfo_index
    @indexedFeature_ID INT
   ,@index_ID INT OUTPUT
AS
   SELECT @index_ID = index_ID
      FROM KeysIndexes_IndexedFeatureInfo
      WHERE indexedFeature_ID = @indexedFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeatureInfo_indexedFeature
    @index_ID INT
AS
   SELECT indexedFeature_ID
      FROM KeysIndexes_IndexedFeatureInfo
      WHERE index_ID = @index_ID
      ORDER BY indexedFeature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeatureInfo_indexedFeature
    @index_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT indexedFeature_ID
         FROM KeysIndexes_IndexedFeatureInfo
         WHERE index_ID = @index_ID
         ORDER BY indexedFeature_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_IndexedFeatureInfo
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(indexedFeature_Ordinal)
      FROM KeysIndexes_IndexedFeatureInfo
      WHERE indexedFeature_ID = @indexedFeature_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_IndexedFeatureInfo (index_ID, indexedFeature_ID, indexedFeature_Ordinal)
         VALUES (@index_ID, @indexedFeature_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_IndexedFeatureInfo
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   DELETE FROM KeysIndexes_IndexedFeatureInfo
      WHERE index_ID = @index_ID
        AND indexedFeature_ID = @indexedFeature_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association KeysIndexes.KeyRelationshipFeatures'
GO

CREATE TABLE KeysIndexes_KeyRelationshipFeatures
   (feature_ID INT NOT NULL FOREIGN KEY REFERENCES Core_StructuralFeature(_ID)
   ,feature_Ordinal INT
   ,keyRelationship_ID INT NOT NULL FOREIGN KEY REFERENCES KeysIndexes_KeyRelationship(_ID)
   )
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationshipFeatures_feature
    @keyRelationship_ID INT
AS
   SELECT feature_ID
      FROM KeysIndexes_KeyRelationshipFeatures
      WHERE keyRelationship_ID = @keyRelationship_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationshipFeatures_feature
    @keyRelationship_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT feature_ID
         FROM KeysIndexes_KeyRelationshipFeatures
         WHERE keyRelationship_ID = @keyRelationship_ID
         ORDER BY feature_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationshipFeatures_keyRelationship
    @feature_ID INT
AS
   SELECT keyRelationship_ID
      FROM KeysIndexes_KeyRelationshipFeatures
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationshipFeatures_keyRelationship
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT keyRelationship_ID
         FROM KeysIndexes_KeyRelationshipFeatures
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_KeyRelationshipFeatures
    @feature_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(feature_Ordinal)
      FROM KeysIndexes_KeyRelationshipFeatures
      WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_KeyRelationshipFeatures (feature_ID, keyRelationship_ID, feature_Ordinal)
         VALUES (@feature_ID, @keyRelationship_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_KeyRelationshipFeatures
    @feature_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   DELETE FROM KeysIndexes_KeyRelationshipFeatures
      WHERE feature_ID = @feature_ID
        AND keyRelationship_ID = @keyRelationship_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association KeysIndexes.UniqueFeature'
GO

CREATE TABLE KeysIndexes_UniqueFeature
   (feature_ID INT NOT NULL FOREIGN KEY REFERENCES Core_StructuralFeature(_ID)
   ,feature_Ordinal INT
   ,uniqueKey_ID INT NOT NULL FOREIGN KEY REFERENCES KeysIndexes_UniqueKey(_ID)
   )
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueFeature_feature
    @uniqueKey_ID INT
AS
   SELECT feature_ID
      FROM KeysIndexes_UniqueFeature
      WHERE uniqueKey_ID = @uniqueKey_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueFeature_feature
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT feature_ID
         FROM KeysIndexes_UniqueFeature
         WHERE uniqueKey_ID = @uniqueKey_ID
         ORDER BY feature_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueFeature_uniqueKey
    @feature_ID INT
AS
   SELECT uniqueKey_ID
      FROM KeysIndexes_UniqueFeature
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueFeature_uniqueKey
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT uniqueKey_ID
         FROM KeysIndexes_UniqueFeature
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_UniqueFeature
    @feature_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(feature_Ordinal)
      FROM KeysIndexes_UniqueFeature
      WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT KeysIndexes_UniqueFeature (feature_ID, uniqueKey_ID, feature_Ordinal)
         VALUES (@feature_ID, @uniqueKey_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_UniqueFeature
    @feature_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   DELETE FROM KeysIndexes_UniqueFeature
      WHERE feature_ID = @feature_ID
        AND uniqueKey_ID = @uniqueKey_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association KeysIndexes.UniqueKeyRelationship'
GO

ALTER TABLE KeysIndexes_KeyRelationship ADD uniqueKey_ID INT
ALTER TABLE KeysIndexes_KeyRelationship ADD
      FOREIGN KEY (uniqueKey_ID) REFERENCES KeysIndexes_UniqueKey(_ID)
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKeyRelationship_keyRelationship
    @uniqueKey_ID INT
AS
   SELECT _ID
      FROM KeysIndexes_KeyRelationship
      WHERE uniqueKey_ID = @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKeyRelationship_keyRelationship
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM KeysIndexes_KeyRelationship
         WHERE uniqueKey_ID = @uniqueKey_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKeyRelationship_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT OUTPUT
AS
   SELECT @uniqueKey_ID = uniqueKey_ID
      FROM KeysIndexes_KeyRelationship
      WHERE _ID = @keyRelationship_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_KeysIndexes_UniqueKeyRelationship
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_KeyRelationship
      SET uniqueKey_ID = @uniqueKey_ID
      WHERE _ID = @keyRelationship_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_UniqueKeyRelationship
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_KeyRelationship
      SET uniqueKey_ID = Null
      WHERE uniqueKey_ID = @uniqueKey_ID
        AND _ID = @keyRelationship_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association KeysIndexes.IndexSpansClass'
GO

ALTER TABLE KeysIndexes_Index ADD spannedClass_ID INT
ALTER TABLE KeysIndexes_Index ADD
      FOREIGN KEY (spannedClass_ID) REFERENCES Core_Class(_ID)
GO

CREATE PROCEDURE Get_KeysIndexes_IndexSpansClass_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT OUTPUT
AS
   SELECT @spannedClass_ID = spannedClass_ID
      FROM KeysIndexes_Index
      WHERE _ID = @index_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexSpansClass_index
    @spannedClass_ID INT
AS
   SELECT _ID
      FROM KeysIndexes_Index
      WHERE spannedClass_ID = @spannedClass_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexSpansClass_index
    @spannedClass_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM KeysIndexes_Index
         WHERE spannedClass_ID = @spannedClass_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_KeysIndexes_IndexSpansClass
    @spannedClass_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_Index
      SET spannedClass_ID = @spannedClass_ID
      WHERE _ID = @index_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_KeysIndexes_IndexSpansClass
    @spannedClass_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   UPDATE KeysIndexes_Index
      SET spannedClass_ID = Null
      WHERE spannedClass_ID = @spannedClass_ID
        AND _ID = @index_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- SoftwareDeployment Associations
--


PRINT 'Association SoftwareDeployment.RelatedSites'
GO

CREATE TABLE SoftwareDeployment_RelatedSites
   (containingSite_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_Site(_ID)
   ,containedSite_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_Site(_ID)
   )
GO

CREATE PROCEDURE Get_SoftwareDeployment_RelatedSites_containingSite
    @containedSite_ID INT
AS
   SELECT containingSite_ID
      FROM SoftwareDeployment_RelatedSites
      WHERE containedSite_ID = @containedSite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_RelatedSites_containingSite
    @containedSite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT containingSite_ID
         FROM SoftwareDeployment_RelatedSites
         WHERE containedSite_ID = @containedSite_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_RelatedSites_containedSite
    @containingSite_ID INT
AS
   SELECT containedSite_ID
      FROM SoftwareDeployment_RelatedSites
      WHERE containingSite_ID = @containingSite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_RelatedSites_containedSite
    @containingSite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT containedSite_ID
         FROM SoftwareDeployment_RelatedSites
         WHERE containingSite_ID = @containingSite_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_RelatedSites
    @containingSite_ID INT
   ,@containedSite_ID INT
AS
   DECLARE @Error INT
   INSERT SoftwareDeployment_RelatedSites (containingSite_ID, containedSite_ID)
      VALUES (@containingSite_ID, @containedSite_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_RelatedSites
    @containingSite_ID INT
   ,@containedSite_ID INT
AS
   DECLARE @Error INT
   DELETE FROM SoftwareDeployment_RelatedSites
      WHERE containingSite_ID = @containingSite_ID
        AND containedSite_ID = @containedSite_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.ComponentsOnMachine'
GO

ALTER TABLE SoftwareDeployment_DeployedComponent ADD machine_ID INT
ALTER TABLE SoftwareDeployment_DeployedComponent ADD
      FOREIGN KEY (machine_ID) REFERENCES SoftwareDeployment_Machine(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_ComponentsOnMachine_machine
    @deployedComponent_ID INT
   ,@machine_ID INT OUTPUT
AS
   SELECT @machine_ID = machine_ID
      FROM SoftwareDeployment_DeployedComponent
      WHERE _ID = @deployedComponent_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ComponentsOnMachine_deployedComponent
    @machine_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_DeployedComponent
      WHERE machine_ID = @machine_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ComponentsOnMachine_deployedComponent
    @machine_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_DeployedComponent
         WHERE machine_ID = @machine_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_ComponentsOnMachine
    @machine_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedComponent
      SET machine_ID = @machine_ID
      WHERE _ID = @deployedComponent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_ComponentsOnMachine
    @machine_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedComponent
      SET machine_ID = Null
      WHERE machine_ID = @machine_ID
        AND _ID = @deployedComponent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.SiteMachines'
GO

ALTER TABLE SoftwareDeployment_Machine ADD site_ID INT
ALTER TABLE SoftwareDeployment_Machine ADD
      FOREIGN KEY (site_ID) REFERENCES SoftwareDeployment_Site(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_SiteMachines_site
    @machine_ID INT
   ,@site_ID INT OUTPUT
AS
   SELECT @site_ID = site_ID
      FROM SoftwareDeployment_Machine
      WHERE _ID = @machine_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SiteMachines_machine
    @site_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_Machine
      WHERE site_ID = @site_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SiteMachines_machine
    @site_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_Machine
         WHERE site_ID = @site_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_SiteMachines
    @site_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_Machine
      SET site_ID = @site_ID
      WHERE _ID = @machine_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_SiteMachines
    @site_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_Machine
      SET site_ID = Null
      WHERE site_ID = @site_ID
        AND _ID = @machine_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.DataProviderConnections'
GO

ALTER TABLE SoftwareDeployment_ProviderConnection ADD dataProvider_ID INT
ALTER TABLE SoftwareDeployment_ProviderConnection ADD
      FOREIGN KEY (dataProvider_ID) REFERENCES SoftwareDeployment_DataProvider(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProviderConnections_dataProvider
    @resourceConnection_ID INT
   ,@dataProvider_ID INT OUTPUT
AS
   SELECT @dataProvider_ID = dataProvider_ID
      FROM SoftwareDeployment_ProviderConnection
      WHERE _ID = @resourceConnection_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProviderConnections_resourceConnection
    @dataProvider_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_ProviderConnection
      WHERE dataProvider_ID = @dataProvider_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProviderConnections_resourceConnection
    @dataProvider_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_ProviderConnection
         WHERE dataProvider_ID = @dataProvider_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DataProviderConnections
    @dataProvider_ID INT
   ,@resourceConnection_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_ProviderConnection
      SET dataProvider_ID = @dataProvider_ID
      WHERE _ID = @resourceConnection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DataProviderConnections
    @dataProvider_ID INT
   ,@resourceConnection_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_ProviderConnection
      SET dataProvider_ID = Null
      WHERE dataProvider_ID = @dataProvider_ID
        AND _ID = @resourceConnection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.DataManagerConnections'
GO

ALTER TABLE SoftwareDeployment_ProviderConnection ADD dataManager_ID INT
ALTER TABLE SoftwareDeployment_ProviderConnection ADD
      FOREIGN KEY (dataManager_ID) REFERENCES SoftwareDeployment_DataManager(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManagerConnections_dataManager
    @clientConnection_ID INT
   ,@dataManager_ID INT OUTPUT
AS
   SELECT @dataManager_ID = dataManager_ID
      FROM SoftwareDeployment_ProviderConnection
      WHERE _ID = @clientConnection_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManagerConnections_clientConnection
    @dataManager_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_ProviderConnection
      WHERE dataManager_ID = @dataManager_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManagerConnections_clientConnection
    @dataManager_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_ProviderConnection
         WHERE dataManager_ID = @dataManager_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DataManagerConnections
    @dataManager_ID INT
   ,@clientConnection_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_ProviderConnection
      SET dataManager_ID = @dataManager_ID
      WHERE _ID = @clientConnection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DataManagerConnections
    @dataManager_ID INT
   ,@clientConnection_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_ProviderConnection
      SET dataManager_ID = Null
      WHERE dataManager_ID = @dataManager_ID
        AND _ID = @clientConnection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.SoftwareSystemDeployments'
GO

ALTER TABLE SoftwareDeployment_DeployedSoftwareSystem ADD softwareSystem_ID INT
ALTER TABLE SoftwareDeployment_DeployedSoftwareSystem ADD
      FOREIGN KEY (softwareSystem_ID) REFERENCES SoftwareDeployment_SoftwareSystem(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystemDeployments_deployment
    @softwareSystem_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_DeployedSoftwareSystem
      WHERE softwareSystem_ID = @softwareSystem_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystemDeployments_deployment
    @softwareSystem_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_DeployedSoftwareSystem
         WHERE softwareSystem_ID = @softwareSystem_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystemDeployments_softwareSystem
    @deployment_ID INT
   ,@softwareSystem_ID INT OUTPUT
AS
   SELECT @softwareSystem_ID = softwareSystem_ID
      FROM SoftwareDeployment_DeployedSoftwareSystem
      WHERE _ID = @deployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_SoftwareSystemDeployments
    @deployment_ID INT
   ,@softwareSystem_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedSoftwareSystem
      SET softwareSystem_ID = @softwareSystem_ID
      WHERE _ID = @deployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_SoftwareSystemDeployments
    @deployment_ID INT
   ,@softwareSystem_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedSoftwareSystem
      SET softwareSystem_ID = Null
      WHERE softwareSystem_ID = @softwareSystem_ID
        AND _ID = @deployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.DataManagerDataPackage'
GO

CREATE TABLE SoftwareDeployment_DataManagerDataPackage
   (dataPackage_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Package(_ID)
   ,dataManager_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_DataManager(_ID)
   )
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManagerDataPackage_dataPackage
    @dataManager_ID INT
AS
   SELECT dataPackage_ID
      FROM SoftwareDeployment_DataManagerDataPackage
      WHERE dataManager_ID = @dataManager_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManagerDataPackage_dataPackage
    @dataManager_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dataPackage_ID
         FROM SoftwareDeployment_DataManagerDataPackage
         WHERE dataManager_ID = @dataManager_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManagerDataPackage_dataManager
    @dataPackage_ID INT
AS
   SELECT dataManager_ID
      FROM SoftwareDeployment_DataManagerDataPackage
      WHERE dataPackage_ID = @dataPackage_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManagerDataPackage_dataManager
    @dataPackage_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dataManager_ID
         FROM SoftwareDeployment_DataManagerDataPackage
         WHERE dataPackage_ID = @dataPackage_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DataManagerDataPackage
    @dataPackage_ID INT
   ,@dataManager_ID INT
AS
   DECLARE @Error INT
   INSERT SoftwareDeployment_DataManagerDataPackage (dataPackage_ID, dataManager_ID)
      VALUES (@dataPackage_ID, @dataManager_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DataManagerDataPackage
    @dataPackage_ID INT
   ,@dataManager_ID INT
AS
   DECLARE @Error INT
   DELETE FROM SoftwareDeployment_DataManagerDataPackage
      WHERE dataPackage_ID = @dataPackage_ID
        AND dataManager_ID = @dataManager_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.DeployedSoftwareSystemComponents'
GO

CREATE TABLE SoftwareDeployment_DeployedSoftwareSystemComponents
   (deployedSoftwareSystem_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_DeployedSoftwareSystem(_ID)
   ,deployedComponent_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_DeployedComponent(_ID)
   )
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedSoftwareSystem
    @deployedComponent_ID INT
AS
   SELECT deployedSoftwareSystem_ID
      FROM SoftwareDeployment_DeployedSoftwareSystemComponents
      WHERE deployedComponent_ID = @deployedComponent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedSoftwareSystem
    @deployedComponent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT deployedSoftwareSystem_ID
         FROM SoftwareDeployment_DeployedSoftwareSystemComponents
         WHERE deployedComponent_ID = @deployedComponent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedComponent
    @deployedSoftwareSystem_ID INT
AS
   SELECT deployedComponent_ID
      FROM SoftwareDeployment_DeployedSoftwareSystemComponents
      WHERE deployedSoftwareSystem_ID = @deployedSoftwareSystem_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystemComponents_deployedComponent
    @deployedSoftwareSystem_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT deployedComponent_ID
         FROM SoftwareDeployment_DeployedSoftwareSystemComponents
         WHERE deployedSoftwareSystem_ID = @deployedSoftwareSystem_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_DeployedSoftwareSystemComponents
    @deployedSoftwareSystem_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   INSERT SoftwareDeployment_DeployedSoftwareSystemComponents (deployedSoftwareSystem_ID, deployedComponent_ID)
      VALUES (@deployedSoftwareSystem_ID, @deployedComponent_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_DeployedSoftwareSystemComponents
    @deployedSoftwareSystem_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   DELETE FROM SoftwareDeployment_DeployedSoftwareSystemComponents
      WHERE deployedSoftwareSystem_ID = @deployedSoftwareSystem_ID
        AND deployedComponent_ID = @deployedComponent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.ComponentDeployments'
GO

ALTER TABLE SoftwareDeployment_DeployedComponent ADD component_ID INT
ALTER TABLE SoftwareDeployment_DeployedComponent ADD
      FOREIGN KEY (component_ID) REFERENCES SoftwareDeployment_Component(_ID)
GO

CREATE PROCEDURE Get_SoftwareDeployment_ComponentDeployments_component
    @deployment_ID INT
   ,@component_ID INT OUTPUT
AS
   SELECT @component_ID = component_ID
      FROM SoftwareDeployment_DeployedComponent
      WHERE _ID = @deployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ComponentDeployments_deployment
    @component_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_DeployedComponent
      WHERE component_ID = @component_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ComponentDeployments_deployment
    @component_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM SoftwareDeployment_DeployedComponent
         WHERE component_ID = @component_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_ComponentDeployments
    @component_ID INT
   ,@deployment_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedComponent
      SET component_ID = @component_ID
      WHERE _ID = @deployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_ComponentDeployments
    @component_ID INT
   ,@deployment_ID INT
AS
   DECLARE @Error INT
   UPDATE SoftwareDeployment_DeployedComponent
      SET component_ID = Null
      WHERE component_ID = @component_ID
        AND _ID = @deployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association SoftwareDeployment.SystemTypespace'
GO

CREATE TABLE SoftwareDeployment_SystemTypespace
   (typespace_ID INT NOT NULL FOREIGN KEY REFERENCES TypeMapping_TypeSystem(_ID)
   ,supportingSystem_ID INT NOT NULL FOREIGN KEY REFERENCES SoftwareDeployment_SoftwareSystem(_ID)
   )
GO

CREATE PROCEDURE Get_SoftwareDeployment_SystemTypespace_typespace
    @supportingSystem_ID INT
AS
   SELECT typespace_ID
      FROM SoftwareDeployment_SystemTypespace
      WHERE supportingSystem_ID = @supportingSystem_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SystemTypespace_typespace
    @supportingSystem_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT typespace_ID
         FROM SoftwareDeployment_SystemTypespace
         WHERE supportingSystem_ID = @supportingSystem_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SystemTypespace_supportingSystem
    @typespace_ID INT
AS
   SELECT supportingSystem_ID
      FROM SoftwareDeployment_SystemTypespace
      WHERE typespace_ID = @typespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SystemTypespace_supportingSystem
    @typespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT supportingSystem_ID
         FROM SoftwareDeployment_SystemTypespace
         WHERE typespace_ID = @typespace_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_SoftwareDeployment_SystemTypespace
    @typespace_ID INT
   ,@supportingSystem_ID INT
AS
   DECLARE @Error INT
   INSERT SoftwareDeployment_SystemTypespace (typespace_ID, supportingSystem_ID)
      VALUES (@typespace_ID, @supportingSystem_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_SoftwareDeployment_SystemTypespace
    @typespace_ID INT
   ,@supportingSystem_ID INT
AS
   DECLARE @Error INT
   DELETE FROM SoftwareDeployment_SystemTypespace
      WHERE typespace_ID = @typespace_ID
        AND supportingSystem_ID = @supportingSystem_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- TypeMapping Associations
--


PRINT 'Association TypeMapping.MappingSource'
GO

ALTER TABLE TypeMapping_TypeMapping ADD sourceType_ID INT
ALTER TABLE TypeMapping_TypeMapping ADD
      FOREIGN KEY (sourceType_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_TypeMapping_MappingSource_sourceType
    @mappingFrom_ID INT
   ,@sourceType_ID INT OUTPUT
AS
   SELECT @sourceType_ID = sourceType_ID
      FROM TypeMapping_TypeMapping
      WHERE _ID = @mappingFrom_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_TypeMapping_MappingSource_mappingFrom
    @sourceType_ID INT
AS
   SELECT _ID
      FROM TypeMapping_TypeMapping
      WHERE sourceType_ID = @sourceType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_MappingSource_mappingFrom
    @sourceType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM TypeMapping_TypeMapping
         WHERE sourceType_ID = @sourceType_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_TypeMapping_MappingSource
    @sourceType_ID INT
   ,@mappingFrom_ID INT
AS
   DECLARE @Error INT
   UPDATE TypeMapping_TypeMapping
      SET sourceType_ID = @sourceType_ID
      WHERE _ID = @mappingFrom_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_TypeMapping_MappingSource
    @sourceType_ID INT
   ,@mappingFrom_ID INT
AS
   DECLARE @Error INT
   UPDATE TypeMapping_TypeMapping
      SET sourceType_ID = Null
      WHERE sourceType_ID = @sourceType_ID
        AND _ID = @mappingFrom_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association TypeMapping.MappingTarget'
GO

ALTER TABLE TypeMapping_TypeMapping ADD targetType_ID INT
ALTER TABLE TypeMapping_TypeMapping ADD
      FOREIGN KEY (targetType_ID) REFERENCES Core_Classifier(_ID)
GO

CREATE PROCEDURE Get_TypeMapping_MappingTarget_targetType
    @mappingTo_ID INT
   ,@targetType_ID INT OUTPUT
AS
   SELECT @targetType_ID = targetType_ID
      FROM TypeMapping_TypeMapping
      WHERE _ID = @mappingTo_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_TypeMapping_MappingTarget_mappingTo
    @targetType_ID INT
AS
   SELECT _ID
      FROM TypeMapping_TypeMapping
      WHERE targetType_ID = @targetType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_MappingTarget_mappingTo
    @targetType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM TypeMapping_TypeMapping
         WHERE targetType_ID = @targetType_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_TypeMapping_MappingTarget
    @targetType_ID INT
   ,@mappingTo_ID INT
AS
   DECLARE @Error INT
   UPDATE TypeMapping_TypeMapping
      SET targetType_ID = @targetType_ID
      WHERE _ID = @mappingTo_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_TypeMapping_MappingTarget
    @targetType_ID INT
   ,@mappingTo_ID INT
AS
   DECLARE @Error INT
   UPDATE TypeMapping_TypeMapping
      SET targetType_ID = Null
      WHERE targetType_ID = @targetType_ID
        AND _ID = @mappingTo_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Relational.Enumerations Associations
--


PRINT 'Association Relational.TriggerUsingColumnSet'
GO

CREATE TABLE Relational_TriggerUsingColumnSet
   (usedColumnSet_ID INT NOT NULL FOREIGN KEY REFERENCES Relational_NamedColumnSet(_ID)
   ,usingTrigger_ID INT NOT NULL FOREIGN KEY REFERENCES Relational_Trigger(_ID)
   )
GO

CREATE PROCEDURE Get_Relational_TriggerUsingColumnSet_usedColumnSet
    @usingTrigger_ID INT
AS
   SELECT usedColumnSet_ID
      FROM Relational_TriggerUsingColumnSet
      WHERE usingTrigger_ID = @usingTrigger_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_TriggerUsingColumnSet_usedColumnSet
    @usingTrigger_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT usedColumnSet_ID
         FROM Relational_TriggerUsingColumnSet
         WHERE usingTrigger_ID = @usingTrigger_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_TriggerUsingColumnSet_usingTrigger
    @usedColumnSet_ID INT
AS
   SELECT usingTrigger_ID
      FROM Relational_TriggerUsingColumnSet
      WHERE usedColumnSet_ID = @usedColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_TriggerUsingColumnSet_usingTrigger
    @usedColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT usingTrigger_ID
         FROM Relational_TriggerUsingColumnSet
         WHERE usedColumnSet_ID = @usedColumnSet_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_TriggerUsingColumnSet
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   INSERT Relational_TriggerUsingColumnSet (usedColumnSet_ID, usingTrigger_ID)
      VALUES (@usedColumnSet_ID, @usingTrigger_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_TriggerUsingColumnSet
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Relational_TriggerUsingColumnSet
      WHERE usedColumnSet_ID = @usedColumnSet_ID
        AND usingTrigger_ID = @usingTrigger_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relational.TableOwningTrigger'
GO

CREATE TABLE Relational_TableOwningTrigger
   (table_ID INT NOT NULL FOREIGN KEY REFERENCES Relational_Table(_ID)
   ,trigger_ID INT NOT NULL FOREIGN KEY REFERENCES Relational_Trigger(_ID)
   ,trigger_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Relational_TableOwningTrigger_table
    @trigger_ID INT
   ,@table_ID INT OUTPUT
AS
   SELECT @table_ID = table_ID
      FROM Relational_TableOwningTrigger
      WHERE trigger_ID = @trigger_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_TableOwningTrigger_trigger
    @table_ID INT
AS
   SELECT trigger_ID
      FROM Relational_TableOwningTrigger
      WHERE table_ID = @table_ID
      ORDER BY trigger_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_TableOwningTrigger_trigger
    @table_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT trigger_ID
         FROM Relational_TableOwningTrigger
         WHERE table_ID = @table_ID
         ORDER BY trigger_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_TableOwningTrigger
    @table_ID INT
   ,@trigger_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(trigger_Ordinal)
      FROM Relational_TableOwningTrigger
      WHERE trigger_ID = @trigger_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Relational_TableOwningTrigger (table_ID, trigger_ID, trigger_Ordinal)
         VALUES (@table_ID, @trigger_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_TableOwningTrigger
    @table_ID INT
   ,@trigger_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Relational_TableOwningTrigger
      WHERE table_ID = @table_ID
        AND trigger_ID = @trigger_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relational.ColumnSetOfStructuredType'
GO

ALTER TABLE Relational_NamedColumnSet ADD type_ID INT
ALTER TABLE Relational_NamedColumnSet ADD
      FOREIGN KEY (type_ID) REFERENCES Relational_SQLStructuredType(_ID)
GO

CREATE PROCEDURE Get_Relational_ColumnSetOfStructuredType_type
    @columnSet_ID INT
   ,@type_ID INT OUTPUT
AS
   SELECT @type_ID = type_ID
      FROM Relational_NamedColumnSet
      WHERE _ID = @columnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_ColumnSetOfStructuredType_columnSet
    @type_ID INT
AS
   SELECT _ID
      FROM Relational_NamedColumnSet
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSetOfStructuredType_columnSet
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relational_NamedColumnSet
         WHERE type_ID = @type_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_ColumnSetOfStructuredType
    @type_ID INT
   ,@columnSet_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_NamedColumnSet
      SET type_ID = @type_ID
      WHERE _ID = @columnSet_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ColumnSetOfStructuredType
    @type_ID INT
   ,@columnSet_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_NamedColumnSet
      SET type_ID = Null
      WHERE type_ID = @type_ID
        AND _ID = @columnSet_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relational.ColumnRefStructuredType'
GO

ALTER TABLE Relational_Column ADD referencedTableType_ID INT
ALTER TABLE Relational_Column ADD
      FOREIGN KEY (referencedTableType_ID) REFERENCES Relational_SQLStructuredType(_ID)
GO

CREATE PROCEDURE Get_Relational_ColumnRefStructuredType_referencedTableType
    @referencingColumn_ID INT
   ,@referencedTableType_ID INT OUTPUT
AS
   SELECT @referencedTableType_ID = referencedTableType_ID
      FROM Relational_Column
      WHERE _ID = @referencingColumn_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Relational_ColumnRefStructuredType_referencingColumn
    @referencedTableType_ID INT
AS
   SELECT _ID
      FROM Relational_Column
      WHERE referencedTableType_ID = @referencedTableType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnRefStructuredType_referencingColumn
    @referencedTableType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relational_Column
         WHERE referencedTableType_ID = @referencedTableType_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Relational_ColumnRefStructuredType
    @referencedTableType_ID INT
   ,@referencingColumn_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_Column
      SET referencedTableType_ID = @referencedTableType_ID
      WHERE _ID = @referencingColumn_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ColumnRefStructuredType
    @referencedTableType_ID INT
   ,@referencingColumn_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_Column
      SET referencedTableType_ID = Null
      WHERE referencedTableType_ID = @referencedTableType_ID
        AND _ID = @referencingColumn_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relational.ColumnOptionsColumnSet'
GO

ALTER TABLE Relational_Column ADD optionScopeColumnSet_ID INT
ALTER TABLE Relational_Column ADD
      FOREIGN KEY (optionScopeColumnSet_ID) REFERENCES Relational_NamedColumnSet(_ID)
GO

CREATE PROCEDURE Get_Relational_ColumnOptionsColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
AS
   SELECT _ID
      FROM Relational_Column
      WHERE optionScopeColumnSet_ID = @optionScopeColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnOptionsColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relational_Column
         WHERE optionScopeColumnSet_ID = @optionScopeColumnSet_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnOptionsColumnSet_optionScopeColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT OUTPUT
AS
   SELECT @optionScopeColumnSet_ID = optionScopeColumnSet_ID
      FROM Relational_Column
      WHERE _ID = @optionScopeColumn_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Relational_ColumnOptionsColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_Column
      SET optionScopeColumnSet_ID = @optionScopeColumnSet_ID
      WHERE _ID = @optionScopeColumn_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_ColumnOptionsColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_Column
      SET optionScopeColumnSet_ID = Null
      WHERE optionScopeColumnSet_ID = @optionScopeColumnSet_ID
        AND _ID = @optionScopeColumn_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Relational.DistinctTypeHasSimpleType'
GO

ALTER TABLE Relational_SQLDistinctType ADD sqlSimpleType_ID INT
ALTER TABLE Relational_SQLDistinctType ADD
      FOREIGN KEY (sqlSimpleType_ID) REFERENCES Relational_SQLSimpleType(_ID)
GO

CREATE PROCEDURE Get_Relational_DistinctTypeHasSimpleType_sqlDistinctType
    @sqlSimpleType_ID INT
AS
   SELECT _ID
      FROM Relational_SQLDistinctType
      WHERE sqlSimpleType_ID = @sqlSimpleType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_DistinctTypeHasSimpleType_sqlDistinctType
    @sqlSimpleType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Relational_SQLDistinctType
         WHERE sqlSimpleType_ID = @sqlSimpleType_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_DistinctTypeHasSimpleType_sqlSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT OUTPUT
AS
   SELECT @sqlSimpleType_ID = sqlSimpleType_ID
      FROM Relational_SQLDistinctType
      WHERE _ID = @sqlDistinctType_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Relational_DistinctTypeHasSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_SQLDistinctType
      SET sqlSimpleType_ID = @sqlSimpleType_ID
      WHERE _ID = @sqlDistinctType_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Relational_DistinctTypeHasSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT
AS
   DECLARE @Error INT
   UPDATE Relational_SQLDistinctType
      SET sqlSimpleType_ID = Null
      WHERE sqlSimpleType_ID = @sqlSimpleType_ID
        AND _ID = @sqlDistinctType_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Record Associations
--


PRINT 'Association Record.RecordToFile'
GO

CREATE TABLE Record_RecordToFile
   (file_ID INT NOT NULL FOREIGN KEY REFERENCES Record_RecordFile(_ID)
   ,record_ID INT NOT NULL FOREIGN KEY REFERENCES Record_RecordDef(_ID)
   ,record_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Record_RecordToFile_file
    @record_ID INT
AS
   SELECT file_ID
      FROM Record_RecordToFile
      WHERE record_ID = @record_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordToFile_file
    @record_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT file_ID
         FROM Record_RecordToFile
         WHERE record_ID = @record_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordToFile_record
    @file_ID INT
AS
   SELECT record_ID
      FROM Record_RecordToFile
      WHERE file_ID = @file_ID
      ORDER BY record_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordToFile_record
    @file_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT record_ID
         FROM Record_RecordToFile
         WHERE file_ID = @file_ID
         ORDER BY record_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Record_RecordToFile
    @file_ID INT
   ,@record_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(record_Ordinal)
      FROM Record_RecordToFile
      WHERE record_ID = @record_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Record_RecordToFile (file_ID, record_ID, record_Ordinal)
         VALUES (@file_ID, @record_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Record_RecordToFile
    @file_ID INT
   ,@record_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Record_RecordToFile
      WHERE file_ID = @file_ID
        AND record_ID = @record_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Multidimensional Associations
--


PRINT 'Association Multidimensional.DimensionsReferenceDimensionedObjects'
GO

CREATE TABLE Multidimensional_DimensionsReferenceDimensionedObjects
   (dimension_ID INT NOT NULL FOREIGN KEY REFERENCES Multidimensional_Dimension(_ID)
   ,dimensionedObject_ID INT NOT NULL FOREIGN KEY REFERENCES Multidimensional_DimensionedObject(_ID)
   ,dimensionedObject_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Multidimensional_DimensionsReferenceDimensionedObjects_dimension
    @dimensionedObject_ID INT
AS
   SELECT dimension_ID
      FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimensionedObject_ID = @dimensionedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimension
    @dimensionedObject_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dimension_ID
         FROM Multidimensional_DimensionsReferenceDimensionedObjects
         WHERE dimensionedObject_ID = @dimensionedObject_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionsReferenceDimensionedObjects_dimensionedObject
    @dimension_ID INT
AS
   SELECT dimensionedObject_ID
      FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimension_ID = @dimension_ID
      ORDER BY dimensionedObject_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimensionedObject
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dimensionedObject_ID
         FROM Multidimensional_DimensionsReferenceDimensionedObjects
         WHERE dimension_ID = @dimension_ID
         ORDER BY dimensionedObject_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_DimensionsReferenceDimensionedObjects
    @dimension_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(dimensionedObject_Ordinal)
      FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimensionedObject_ID = @dimensionedObject_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Multidimensional_DimensionsReferenceDimensionedObjects (dimension_ID, dimensionedObject_ID, dimensionedObject_Ordinal)
         VALUES (@dimension_ID, @dimensionedObject_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_DimensionsReferenceDimensionedObjects
    @dimension_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimension_ID = @dimension_ID
        AND dimensionedObject_ID = @dimensionedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Multidimensional.CompositesReferenceComponents'
GO

CREATE TABLE Multidimensional_CompositesReferenceComponents
   (composite_ID INT NOT NULL FOREIGN KEY REFERENCES Multidimensional_Dimension(_ID)
   ,component_ID INT NOT NULL FOREIGN KEY REFERENCES Multidimensional_Dimension(_ID)
   )
GO

CREATE PROCEDURE Get_Multidimensional_CompositesReferenceComponents_composite
    @component_ID INT
AS
   SELECT composite_ID
      FROM Multidimensional_CompositesReferenceComponents
      WHERE component_ID = @component_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_CompositesReferenceComponents_composite
    @component_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT composite_ID
         FROM Multidimensional_CompositesReferenceComponents
         WHERE component_ID = @component_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_CompositesReferenceComponents_component
    @composite_ID INT
AS
   SELECT component_ID
      FROM Multidimensional_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_CompositesReferenceComponents_component
    @composite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT component_ID
         FROM Multidimensional_CompositesReferenceComponents
         WHERE composite_ID = @composite_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Multidimensional_CompositesReferenceComponents
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   INSERT Multidimensional_CompositesReferenceComponents (composite_ID, component_ID)
      VALUES (@composite_ID, @component_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_CompositesReferenceComponents
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Multidimensional_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
        AND component_ID = @component_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Multidimensional.MDSchemaOwnsDimensionedObjects'
GO

ALTER TABLE Multidimensional_DimensionedObject ADD schema_ID INT
ALTER TABLE Multidimensional_DimensionedObject ADD
      FOREIGN KEY (schema_ID) REFERENCES Multidimensional_Schema(_ID)
GO

CREATE PROCEDURE Get_Multidimensional_MDSchemaOwnsDimensionedObjects_dimensionedObject
    @schema_ID INT
AS
   SELECT _ID
      FROM Multidimensional_DimensionedObject
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MDSchemaOwnsDimensionedObjects_dimensionedObject
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Multidimensional_DimensionedObject
         WHERE schema_ID = @schema_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MDSchemaOwnsDimensionedObjects_schema
    @dimensionedObject_ID INT
   ,@schema_ID INT OUTPUT
AS
   SELECT @schema_ID = schema_ID
      FROM Multidimensional_DimensionedObject
      WHERE _ID = @dimensionedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Multidimensional_MDSchemaOwnsDimensionedObjects
    @dimensionedObject_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_DimensionedObject
      SET schema_ID = @schema_ID
      WHERE _ID = @dimensionedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_MDSchemaOwnsDimensionedObjects
    @dimensionedObject_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_DimensionedObject
      SET schema_ID = Null
      WHERE schema_ID = @schema_ID
        AND _ID = @dimensionedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Multidimensional.MDSchemaOwnsDimensions'
GO

ALTER TABLE Multidimensional_Dimension ADD schema_ID INT
ALTER TABLE Multidimensional_Dimension ADD
      FOREIGN KEY (schema_ID) REFERENCES Multidimensional_Schema(_ID)
GO

CREATE PROCEDURE Get_Multidimensional_MDSchemaOwnsDimensions_dimension
    @schema_ID INT
AS
   SELECT _ID
      FROM Multidimensional_Dimension
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MDSchemaOwnsDimensions_dimension
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Multidimensional_Dimension
         WHERE schema_ID = @schema_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MDSchemaOwnsDimensions_schema
    @dimension_ID INT
   ,@schema_ID INT OUTPUT
AS
   SELECT @schema_ID = schema_ID
      FROM Multidimensional_Dimension
      WHERE _ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Multidimensional_MDSchemaOwnsDimensions
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_Dimension
      SET schema_ID = @schema_ID
      WHERE _ID = @dimension_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_MDSchemaOwnsDimensions
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_Dimension
      SET schema_ID = Null
      WHERE schema_ID = @schema_ID
        AND _ID = @dimension_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Multidimensional.DimensionOwnsMemberSets'
GO

ALTER TABLE Multidimensional_MemberSet ADD dimension_ID INT
ALTER TABLE Multidimensional_MemberSet ADD
      FOREIGN KEY (dimension_ID) REFERENCES Multidimensional_Dimension(_ID)
GO

CREATE PROCEDURE Get_Multidimensional_DimensionOwnsMemberSets_memberSet
    @dimension_ID INT
AS
   SELECT _ID
      FROM Multidimensional_MemberSet
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionOwnsMemberSets_memberSet
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Multidimensional_MemberSet
         WHERE dimension_ID = @dimension_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionOwnsMemberSets_dimension
    @memberSet_ID INT
   ,@dimension_ID INT OUTPUT
AS
   SELECT @dimension_ID = dimension_ID
      FROM Multidimensional_MemberSet
      WHERE _ID = @memberSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Multidimensional_DimensionOwnsMemberSets
    @memberSet_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_MemberSet
      SET dimension_ID = @dimension_ID
      WHERE _ID = @memberSet_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Multidimensional_DimensionOwnsMemberSets
    @memberSet_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   UPDATE Multidimensional_MemberSet
      SET dimension_ID = Null
      WHERE dimension_ID = @dimension_ID
        AND _ID = @memberSet_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- XML Associations
--


PRINT 'Association XML.ElementTypeContent'
GO

ALTER TABLE XML_ElementType ADD content_ID INT
ALTER TABLE XML_ElementType ADD
      FOREIGN KEY (content_ID) REFERENCES XML_Content(_ID)
GO

CREATE PROCEDURE Get_XML_ElementTypeContent_content
    @elementType_ID INT
   ,@content_ID INT OUTPUT
AS
   SELECT @content_ID = content_ID
      FROM XML_ElementType
      WHERE _ID = @elementType_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_ElementTypeContent_elementType
    @content_ID INT
AS
   SELECT _ID
      FROM XML_ElementType
      WHERE content_ID = @content_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeContent_elementType
    @content_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM XML_ElementType
         WHERE content_ID = @content_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_ElementTypeContent
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   UPDATE XML_ElementType
      SET content_ID = @content_ID
      WHERE _ID = @elementType_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_ElementTypeContent
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   UPDATE XML_ElementType
      SET content_ID = Null
      WHERE content_ID = @content_ID
        AND _ID = @elementType_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association XML.OwnedElementContent'
GO

CREATE TABLE XML_OwnedElementContent
   (ownerContent_ID INT NOT NULL FOREIGN KEY REFERENCES XML_ElementContent(_ID)
   ,ownedContent_ID INT NOT NULL FOREIGN KEY REFERENCES XML_ElementContent(_ID)
   )
GO

CREATE PROCEDURE Get_XML_OwnedElementContent_ownerContent
    @ownedContent_ID INT
AS
   SELECT ownerContent_ID
      FROM XML_OwnedElementContent
      WHERE ownedContent_ID = @ownedContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_OwnedElementContent_ownerContent
    @ownedContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT ownerContent_ID
         FROM XML_OwnedElementContent
         WHERE ownedContent_ID = @ownedContent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_OwnedElementContent_ownedContent
    @ownerContent_ID INT
AS
   SELECT ownedContent_ID
      FROM XML_OwnedElementContent
      WHERE ownerContent_ID = @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_OwnedElementContent_ownedContent
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT ownedContent_ID
         FROM XML_OwnedElementContent
         WHERE ownerContent_ID = @ownerContent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_OwnedElementContent
    @ownerContent_ID INT
   ,@ownedContent_ID INT
AS
   DECLARE @Error INT
   INSERT XML_OwnedElementContent (ownerContent_ID, ownedContent_ID)
      VALUES (@ownerContent_ID, @ownedContent_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_OwnedElementContent
    @ownerContent_ID INT
   ,@ownedContent_ID INT
AS
   DECLARE @Error INT
   DELETE FROM XML_OwnedElementContent
      WHERE ownerContent_ID = @ownerContent_ID
        AND ownedContent_ID = @ownedContent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association XML.ContentElementTypeReference'
GO

CREATE TABLE XML_ContentElementTypeReference
   (ownedElementType_ID INT NOT NULL FOREIGN KEY REFERENCES XML_ElementTypeReference(_ID)
   ,ownerContent_ID INT NOT NULL FOREIGN KEY REFERENCES XML_Content(_ID)
   )
GO

CREATE PROCEDURE Get_XML_ContentElementTypeReference_ownedElementType
    @ownerContent_ID INT
AS
   SELECT ownedElementType_ID
      FROM XML_ContentElementTypeReference
      WHERE ownerContent_ID = @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ContentElementTypeReference_ownedElementType
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT ownedElementType_ID
         FROM XML_ContentElementTypeReference
         WHERE ownerContent_ID = @ownerContent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ContentElementTypeReference_ownerContent
    @ownedElementType_ID INT
AS
   SELECT ownerContent_ID
      FROM XML_ContentElementTypeReference
      WHERE ownedElementType_ID = @ownedElementType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ContentElementTypeReference_ownerContent
    @ownedElementType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT ownerContent_ID
         FROM XML_ContentElementTypeReference
         WHERE ownedElementType_ID = @ownedElementType_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_XML_ContentElementTypeReference
    @ownedElementType_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   INSERT XML_ContentElementTypeReference (ownedElementType_ID, ownerContent_ID)
      VALUES (@ownedElementType_ID, @ownerContent_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_ContentElementTypeReference
    @ownedElementType_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   DELETE FROM XML_ContentElementTypeReference
      WHERE ownedElementType_ID = @ownedElementType_ID
        AND ownerContent_ID = @ownerContent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association XML.MixedContentText'
GO

ALTER TABLE XML_MixedContent ADD text_ID INT
ALTER TABLE XML_MixedContent ALTER COLUMN text_ID INT NOT NULL
ALTER TABLE XML_MixedContent ADD
      FOREIGN KEY (text_ID) REFERENCES XML_Text(_ID)
ALTER TABLE XML_Text ADD ownerContent_ID INT
ALTER TABLE XML_Text ALTER COLUMN ownerContent_ID INT NOT NULL
ALTER TABLE XML_Text ADD
      FOREIGN KEY (ownerContent_ID) REFERENCES XML_MixedContent(_ID)
GO

CREATE PROCEDURE Get_XML_MixedContentText_text
    @ownerContent_ID INT
   ,@text_ID INT OUTPUT
AS
   SELECT @text_ID = _ID
      FROM XML_Text
      WHERE ownerContent_ID = @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_XML_MixedContentText_ownerContent
    @text_ID INT
   ,@ownerContent_ID INT OUTPUT
AS
   SELECT @ownerContent_ID = _ID
      FROM XML_MixedContent
      WHERE text_ID = @text_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_XML_MixedContentText
    @text_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Create_XML_MixedContentText
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE XML_Text
            SET ownerContent_ID = @ownerContent_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE XML_MixedContent
            SET text_ID = @text_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Create_XML_MixedContentText
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_XML_MixedContentText
    @text_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Delete_XML_MixedContentText
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE XML_Text SET ownerContent_ID = Null
            WHERE _ID = @text_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE XML_MixedContent SET text_ID = Null
            WHERE _ID = @ownerContent_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Delete_XML_MixedContentText
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO


--
-- Transformation Associations
--


PRINT 'Association Transformation.TransformationSource'
GO

CREATE TABLE Transformation_TransformationSource
   (sourceTransformation_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_Transformation(_ID)
   ,source_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_DataObjectSet(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_TransformationSource_sourceTransformation
    @source_ID INT
AS
   SELECT sourceTransformation_ID
      FROM Transformation_TransformationSource
      WHERE source_ID = @source_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationSource_sourceTransformation
    @source_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT sourceTransformation_ID
         FROM Transformation_TransformationSource
         WHERE source_ID = @source_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationSource_source
    @sourceTransformation_ID INT
AS
   SELECT source_ID
      FROM Transformation_TransformationSource
      WHERE sourceTransformation_ID = @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationSource_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT source_ID
         FROM Transformation_TransformationSource
         WHERE sourceTransformation_ID = @sourceTransformation_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationSource
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_TransformationSource (sourceTransformation_ID, source_ID)
      VALUES (@sourceTransformation_ID, @source_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationSource
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_TransformationSource
      WHERE sourceTransformation_ID = @sourceTransformation_ID
        AND source_ID = @source_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.TransformationTarget'
GO

CREATE TABLE Transformation_TransformationTarget
   (targetTransformation_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_Transformation(_ID)
   ,target_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_DataObjectSet(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_TransformationTarget_targetTransformation
    @target_ID INT
AS
   SELECT targetTransformation_ID
      FROM Transformation_TransformationTarget
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTarget_targetTransformation
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT targetTransformation_ID
         FROM Transformation_TransformationTarget
         WHERE target_ID = @target_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTarget_target
    @targetTransformation_ID INT
AS
   SELECT target_ID
      FROM Transformation_TransformationTarget
      WHERE targetTransformation_ID = @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTarget_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT target_ID
         FROM Transformation_TransformationTarget
         WHERE targetTransformation_ID = @targetTransformation_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationTarget
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_TransformationTarget (targetTransformation_ID, target_ID)
      VALUES (@targetTransformation_ID, @target_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationTarget
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_TransformationTarget
      WHERE targetTransformation_ID = @targetTransformation_ID
        AND target_ID = @target_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.TransformationStepTask'
GO

ALTER TABLE Transformation_TransformationStep ADD task_ID INT
ALTER TABLE Transformation_TransformationStep ADD
      FOREIGN KEY (task_ID) REFERENCES Transformation_TransformationTask(_ID)
GO

CREATE PROCEDURE Get_Transformation_TransformationStepTask_step
    @task_ID INT
AS
   SELECT _ID
      FROM Transformation_TransformationStep
      WHERE task_ID = @task_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStepTask_step
    @task_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Transformation_TransformationStep
         WHERE task_ID = @task_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStepTask_task
    @step_ID INT
   ,@task_ID INT OUTPUT
AS
   SELECT @task_ID = task_ID
      FROM Transformation_TransformationStep
      WHERE _ID = @step_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Transformation_TransformationStepTask
    @step_ID INT
   ,@task_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_TransformationStep
      SET task_ID = @task_ID
      WHERE _ID = @step_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationStepTask
    @step_ID INT
   ,@task_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_TransformationStep
      SET task_ID = Null
      WHERE task_ID = @task_ID
        AND _ID = @step_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.InverseTransformationTask'
GO

CREATE TABLE Transformation_InverseTransformationTask
   (originalTask_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_TransformationTask(_ID)
   ,inverseTask_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_TransformationTask(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_InverseTransformationTask_originalTask
    @inverseTask_ID INT
AS
   SELECT originalTask_ID
      FROM Transformation_InverseTransformationTask
      WHERE inverseTask_ID = @inverseTask_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_InverseTransformationTask_originalTask
    @inverseTask_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT originalTask_ID
         FROM Transformation_InverseTransformationTask
         WHERE inverseTask_ID = @inverseTask_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_InverseTransformationTask_inverseTask
    @originalTask_ID INT
AS
   SELECT inverseTask_ID
      FROM Transformation_InverseTransformationTask
      WHERE originalTask_ID = @originalTask_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_InverseTransformationTask_inverseTask
    @originalTask_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT inverseTask_ID
         FROM Transformation_InverseTransformationTask
         WHERE originalTask_ID = @originalTask_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_InverseTransformationTask
    @originalTask_ID INT
   ,@inverseTask_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_InverseTransformationTask (originalTask_ID, inverseTask_ID)
      VALUES (@originalTask_ID, @inverseTask_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_InverseTransformationTask
    @originalTask_ID INT
   ,@inverseTask_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_InverseTransformationTask
      WHERE originalTask_ID = @originalTask_ID
        AND inverseTask_ID = @inverseTask_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.DataObjectSetElement'
GO

CREATE TABLE Transformation_DataObjectSetElement
   (element_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,set_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_DataObjectSet(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_DataObjectSetElement_element
    @set_ID INT
AS
   SELECT element_ID
      FROM Transformation_DataObjectSetElement
      WHERE set_ID = @set_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSetElement_element
    @set_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT element_ID
         FROM Transformation_DataObjectSetElement
         WHERE set_ID = @set_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSetElement_set
    @element_ID INT
AS
   SELECT set_ID
      FROM Transformation_DataObjectSetElement
      WHERE element_ID = @element_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSetElement_set
    @element_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT set_ID
         FROM Transformation_DataObjectSetElement
         WHERE element_ID = @element_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_DataObjectSetElement
    @element_ID INT
   ,@set_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_DataObjectSetElement (element_ID, set_ID)
      VALUES (@element_ID, @set_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_DataObjectSetElement
    @element_ID INT
   ,@set_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_DataObjectSetElement
      WHERE element_ID = @element_ID
        AND set_ID = @set_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.TransformationTaskElement'
GO

CREATE TABLE Transformation_TransformationTaskElement
   (task_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_TransformationTask(_ID)
   ,transformation_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_Transformation(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_TransformationTaskElement_task
    @transformation_ID INT
AS
   SELECT task_ID
      FROM Transformation_TransformationTaskElement
      WHERE transformation_ID = @transformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTaskElement_task
    @transformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT task_ID
         FROM Transformation_TransformationTaskElement
         WHERE transformation_ID = @transformation_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTaskElement_transformation
    @task_ID INT
AS
   SELECT transformation_ID
      FROM Transformation_TransformationTaskElement
      WHERE task_ID = @task_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTaskElement_transformation
    @task_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT transformation_ID
         FROM Transformation_TransformationTaskElement
         WHERE task_ID = @task_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_TransformationTaskElement
    @task_ID INT
   ,@transformation_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_TransformationTaskElement (task_ID, transformation_ID)
      VALUES (@task_ID, @transformation_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_TransformationTaskElement
    @task_ID INT
   ,@transformation_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_TransformationTaskElement
      WHERE task_ID = @task_ID
        AND transformation_ID = @transformation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.ClassifierMapToFeatureMap'
GO

ALTER TABLE Transformation_FeatureMap ADD classifierMap_ID INT
ALTER TABLE Transformation_FeatureMap ADD
      FOREIGN KEY (classifierMap_ID) REFERENCES Transformation_ClassifierMap(_ID)
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapToFeatureMap_featureMap
    @classifierMap_ID INT
AS
   SELECT _ID
      FROM Transformation_FeatureMap
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapToFeatureMap_featureMap
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Transformation_FeatureMap
         WHERE classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapToFeatureMap_classifierMap
    @featureMap_ID INT
   ,@classifierMap_ID INT OUTPUT
AS
   SELECT @classifierMap_ID = classifierMap_ID
      FROM Transformation_FeatureMap
      WHERE _ID = @featureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierMapToFeatureMap
    @featureMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_FeatureMap
      SET classifierMap_ID = @classifierMap_ID
      WHERE _ID = @featureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierMapToFeatureMap
    @featureMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_FeatureMap
      SET classifierMap_ID = Null
      WHERE classifierMap_ID = @classifierMap_ID
        AND _ID = @featureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.ClassifierMapToCFMap'
GO

ALTER TABLE Transformation_ClassifierFeatureMap ADD classifierMap_ID INT
ALTER TABLE Transformation_ClassifierFeatureMap ADD
      FOREIGN KEY (classifierMap_ID) REFERENCES Transformation_ClassifierMap(_ID)
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapToCFMap_cfMap
    @classifierMap_ID INT
AS
   SELECT _ID
      FROM Transformation_ClassifierFeatureMap
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapToCFMap_cfMap
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Transformation_ClassifierFeatureMap
         WHERE classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapToCFMap_classifierMap
    @cfMap_ID INT
   ,@classifierMap_ID INT OUTPUT
AS
   SELECT @classifierMap_ID = classifierMap_ID
      FROM Transformation_ClassifierFeatureMap
      WHERE _ID = @cfMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierMapToCFMap
    @cfMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_ClassifierFeatureMap
      SET classifierMap_ID = @classifierMap_ID
      WHERE _ID = @cfMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierMapToCFMap
    @cfMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   UPDATE Transformation_ClassifierFeatureMap
      SET classifierMap_ID = Null
      WHERE classifierMap_ID = @classifierMap_ID
        AND _ID = @cfMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.ClassifierMapSource'
GO

CREATE TABLE Transformation_ClassifierMapSource
   (source_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Classifier(_ID)
   ,classifierMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_ClassifierMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapSource_source
    @classifierMap_ID INT
AS
   SELECT source_ID
      FROM Transformation_ClassifierMapSource
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapSource_source
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT source_ID
         FROM Transformation_ClassifierMapSource
         WHERE classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapSource_classifierMap
    @source_ID INT
AS
   SELECT classifierMap_ID
      FROM Transformation_ClassifierMapSource
      WHERE source_ID = @source_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapSource_classifierMap
    @source_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT classifierMap_ID
         FROM Transformation_ClassifierMapSource
         WHERE source_ID = @source_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierMapSource
    @source_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_ClassifierMapSource (source_ID, classifierMap_ID)
      VALUES (@source_ID, @classifierMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierMapSource
    @source_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_ClassifierMapSource
      WHERE source_ID = @source_ID
        AND classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.ClassifierMapTarget'
GO

CREATE TABLE Transformation_ClassifierMapTarget
   (target_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Classifier(_ID)
   ,classifierMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_ClassifierMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapTarget_target
    @classifierMap_ID INT
AS
   SELECT target_ID
      FROM Transformation_ClassifierMapTarget
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapTarget_target
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT target_ID
         FROM Transformation_ClassifierMapTarget
         WHERE classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMapTarget_classifierMap
    @target_ID INT
AS
   SELECT classifierMap_ID
      FROM Transformation_ClassifierMapTarget
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMapTarget_classifierMap
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT classifierMap_ID
         FROM Transformation_ClassifierMapTarget
         WHERE target_ID = @target_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_ClassifierMapTarget
    @target_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_ClassifierMapTarget (target_ID, classifierMap_ID)
      VALUES (@target_ID, @classifierMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_ClassifierMapTarget
    @target_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_ClassifierMapTarget
      WHERE target_ID = @target_ID
        AND classifierMap_ID = @classifierMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.FeatureMapTarget'
GO

CREATE TABLE Transformation_FeatureMapTarget
   (target_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Feature(_ID)
   ,featureMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_FeatureMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_FeatureMapTarget_target
    @featureMap_ID INT
AS
   SELECT target_ID
      FROM Transformation_FeatureMapTarget
      WHERE featureMap_ID = @featureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMapTarget_target
    @featureMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT target_ID
         FROM Transformation_FeatureMapTarget
         WHERE featureMap_ID = @featureMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMapTarget_featureMap
    @target_ID INT
AS
   SELECT featureMap_ID
      FROM Transformation_FeatureMapTarget
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMapTarget_featureMap
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT featureMap_ID
         FROM Transformation_FeatureMapTarget
         WHERE target_ID = @target_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_FeatureMapTarget
    @target_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_FeatureMapTarget (target_ID, featureMap_ID)
      VALUES (@target_ID, @featureMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_FeatureMapTarget
    @target_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_FeatureMapTarget
      WHERE target_ID = @target_ID
        AND featureMap_ID = @featureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.FeatureMapSource'
GO

CREATE TABLE Transformation_FeatureMapSource
   (source_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Feature(_ID)
   ,featureMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_FeatureMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_FeatureMapSource_source
    @featureMap_ID INT
AS
   SELECT source_ID
      FROM Transformation_FeatureMapSource
      WHERE featureMap_ID = @featureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMapSource_source
    @featureMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT source_ID
         FROM Transformation_FeatureMapSource
         WHERE featureMap_ID = @featureMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMapSource_featureMap
    @source_ID INT
AS
   SELECT featureMap_ID
      FROM Transformation_FeatureMapSource
      WHERE source_ID = @source_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMapSource_featureMap
    @source_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT featureMap_ID
         FROM Transformation_FeatureMapSource
         WHERE source_ID = @source_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_FeatureMapSource
    @source_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_FeatureMapSource (source_ID, featureMap_ID)
      VALUES (@source_ID, @featureMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_FeatureMapSource
    @source_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_FeatureMapSource
      WHERE source_ID = @source_ID
        AND featureMap_ID = @featureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.CFMapClassifier'
GO

CREATE TABLE Transformation_CFMapClassifier
   (classifier_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Classifier(_ID)
   ,cfMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_ClassifierFeatureMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_CFMapClassifier_classifier
    @cfMap_ID INT
AS
   SELECT classifier_ID
      FROM Transformation_CFMapClassifier
      WHERE cfMap_ID = @cfMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_CFMapClassifier_classifier
    @cfMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT classifier_ID
         FROM Transformation_CFMapClassifier
         WHERE cfMap_ID = @cfMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_CFMapClassifier_cfMap
    @classifier_ID INT
AS
   SELECT cfMap_ID
      FROM Transformation_CFMapClassifier
      WHERE classifier_ID = @classifier_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_CFMapClassifier_cfMap
    @classifier_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT cfMap_ID
         FROM Transformation_CFMapClassifier
         WHERE classifier_ID = @classifier_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_CFMapClassifier
    @classifier_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_CFMapClassifier (classifier_ID, cfMap_ID)
      VALUES (@classifier_ID, @cfMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_CFMapClassifier
    @classifier_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_CFMapClassifier
      WHERE classifier_ID = @classifier_ID
        AND cfMap_ID = @cfMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Transformation.CFMapFeature'
GO

CREATE TABLE Transformation_CFMapFeature
   (feature_ID INT NOT NULL FOREIGN KEY REFERENCES Core_Feature(_ID)
   ,cfMap_ID INT NOT NULL FOREIGN KEY REFERENCES Transformation_ClassifierFeatureMap(_ID)
   )
GO

CREATE PROCEDURE Get_Transformation_CFMapFeature_feature
    @cfMap_ID INT
AS
   SELECT feature_ID
      FROM Transformation_CFMapFeature
      WHERE cfMap_ID = @cfMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_CFMapFeature_feature
    @cfMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT feature_ID
         FROM Transformation_CFMapFeature
         WHERE cfMap_ID = @cfMap_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_CFMapFeature_cfMap
    @feature_ID INT
AS
   SELECT cfMap_ID
      FROM Transformation_CFMapFeature
      WHERE feature_ID = @feature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_CFMapFeature_cfMap
    @feature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT cfMap_ID
         FROM Transformation_CFMapFeature
         WHERE feature_ID = @feature_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Transformation_CFMapFeature
    @feature_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   INSERT Transformation_CFMapFeature (feature_ID, cfMap_ID)
      VALUES (@feature_ID, @cfMap_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Transformation_CFMapFeature
    @feature_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Transformation_CFMapFeature
      WHERE feature_ID = @feature_ID
        AND cfMap_ID = @cfMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Olap Associations
--


PRINT 'Association Olap.LevelBasedHierarchyOwnsHierarchyLevelAssociations'
GO

CREATE TABLE Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
   (levelBasedHierarchy_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_LevelBasedHierarchy(_ID)
   ,hierarchyLevelAssociation_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_HierarchyLevelAssociation(_ID)
   ,hierarchyLevelAssociation_Ordinal INT
   )
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_levelBasedHierarchy
    @hierarchyLevelAssociation_ID INT
   ,@levelBasedHierarchy_ID INT OUTPUT
AS
   SELECT @levelBasedHierarchy_ID = levelBasedHierarchy_ID
      FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
      WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
AS
   SELECT hierarchyLevelAssociation_ID
      FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
      WHERE levelBasedHierarchy_ID = @levelBasedHierarchy_ID
      ORDER BY hierarchyLevelAssociation_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT hierarchyLevelAssociation_ID
         FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
         WHERE levelBasedHierarchy_ID = @levelBasedHierarchy_ID
         ORDER BY hierarchyLevelAssociation_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
    @levelBasedHierarchy_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(hierarchyLevelAssociation_Ordinal)
      FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
      WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations (levelBasedHierarchy_ID, hierarchyLevelAssociation_ID, hierarchyLevelAssociation_Ordinal)
         VALUES (@levelBasedHierarchy_ID, @hierarchyLevelAssociation_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
    @levelBasedHierarchy_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
      WHERE levelBasedHierarchy_ID = @levelBasedHierarchy_ID
        AND hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.HierarchyLevelAssocsReferenceLevel'
GO

ALTER TABLE Olap_HierarchyLevelAssociation ADD currentLevel_ID INT
ALTER TABLE Olap_HierarchyLevelAssociation ADD
      FOREIGN KEY (currentLevel_ID) REFERENCES Olap_Level(_ID)
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssocsReferenceLevel_currentLevel
    @hierarchyLevelAssociation_ID INT
   ,@currentLevel_ID INT OUTPUT
AS
   SELECT @currentLevel_ID = currentLevel_ID
      FROM Olap_HierarchyLevelAssociation
      WHERE _ID = @hierarchyLevelAssociation_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssocsReferenceLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
AS
   SELECT _ID
      FROM Olap_HierarchyLevelAssociation
      WHERE currentLevel_ID = @currentLevel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssocsReferenceLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_HierarchyLevelAssociation
         WHERE currentLevel_ID = @currentLevel_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_HierarchyLevelAssocsReferenceLevel
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_HierarchyLevelAssociation
      SET currentLevel_ID = @currentLevel_ID
      WHERE _ID = @hierarchyLevelAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_HierarchyLevelAssocsReferenceLevel
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_HierarchyLevelAssociation
      SET currentLevel_ID = Null
      WHERE currentLevel_ID = @currentLevel_ID
        AND _ID = @hierarchyLevelAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DimensionOwnsMemberSelections'
GO

ALTER TABLE Olap_MemberSelection ADD dimension_ID INT
ALTER TABLE Olap_MemberSelection ADD
      FOREIGN KEY (dimension_ID) REFERENCES Olap_Dimension(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionOwnsMemberSelections_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT OUTPUT
AS
   SELECT @dimension_ID = dimension_ID
      FROM Olap_MemberSelection
      WHERE _ID = @memberSelection_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_DimensionOwnsMemberSelections_memberSelection
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_MemberSelection
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionOwnsMemberSelections_memberSelection
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_MemberSelection
         WHERE dimension_ID = @dimension_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_DimensionOwnsMemberSelections
    @dimension_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_MemberSelection
      SET dimension_ID = @dimension_ID
      WHERE _ID = @memberSelection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionOwnsMemberSelections
    @dimension_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_MemberSelection
      SET dimension_ID = Null
      WHERE dimension_ID = @dimension_ID
        AND _ID = @memberSelection_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.CubeOwnsCubeDimensionAssociations'
GO

ALTER TABLE Olap_CubeDimensionAssociation ADD cube_ID INT
ALTER TABLE Olap_CubeDimensionAssociation ADD
      FOREIGN KEY (cube_ID) REFERENCES Olap_Cube(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeOwnsCubeDimensionAssociations_cube
    @cubeDimensionAssociation_ID INT
   ,@cube_ID INT OUTPUT
AS
   SELECT @cube_ID = cube_ID
      FROM Olap_CubeDimensionAssociation
      WHERE _ID = @cubeDimensionAssociation_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CubeOwnsCubeDimensionAssociations_cubeDimensionAssociation
    @cube_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE cube_ID = @cube_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeOwnsCubeDimensionAssociations_cubeDimensionAssociation
    @cube_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_CubeDimensionAssociation
         WHERE cube_ID = @cube_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeOwnsCubeDimensionAssociations
    @cube_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET cube_ID = @cube_ID
      WHERE _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeOwnsCubeDimensionAssociations
    @cube_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET cube_ID = Null
      WHERE cube_ID = @cube_ID
        AND _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.CubeDimensionAssociationsReferenceDimension'
GO

ALTER TABLE Olap_CubeDimensionAssociation ADD dimension_ID INT
ALTER TABLE Olap_CubeDimensionAssociation ADD
      FOREIGN KEY (dimension_ID) REFERENCES Olap_Dimension(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociationsReferenceDimension_dimension
    @cubeDimensionAssociation_ID INT
   ,@dimension_ID INT OUTPUT
AS
   SELECT @dimension_ID = dimension_ID
      FROM Olap_CubeDimensionAssociation
      WHERE _ID = @cubeDimensionAssociation_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociationsReferenceDimension_cubeDimensionAssociation
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociationsReferenceDimension_cubeDimensionAssociation
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_CubeDimensionAssociation
         WHERE dimension_ID = @dimension_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeDimensionAssociationsReferenceDimension
    @dimension_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET dimension_ID = @dimension_ID
      WHERE _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeDimensionAssociationsReferenceDimension
    @dimension_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET dimension_ID = Null
      WHERE dimension_ID = @dimension_ID
        AND _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DimensionOwnsHierarchies'
GO

ALTER TABLE Olap_Hierarchy ADD dimension_ID INT
ALTER TABLE Olap_Hierarchy ADD
      FOREIGN KEY (dimension_ID) REFERENCES Olap_Dimension(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionOwnsHierarchies_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT OUTPUT
AS
   SELECT @dimension_ID = dimension_ID
      FROM Olap_Hierarchy
      WHERE _ID = @hierarchy_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_DimensionOwnsHierarchies_hierarchy
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_Hierarchy
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionOwnsHierarchies_hierarchy
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_Hierarchy
         WHERE dimension_ID = @dimension_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_DimensionOwnsHierarchies
    @dimension_ID INT
   ,@hierarchy_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Hierarchy
      SET dimension_ID = @dimension_ID
      WHERE _ID = @hierarchy_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionOwnsHierarchies
    @dimension_ID INT
   ,@hierarchy_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Hierarchy
      SET dimension_ID = Null
      WHERE dimension_ID = @dimension_ID
        AND _ID = @hierarchy_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DimensionHasDefaultHierarchy'
GO

ALTER TABLE Olap_Dimension ADD displayDefault_ID INT
ALTER TABLE Olap_Dimension ADD
      FOREIGN KEY (displayDefault_ID) REFERENCES Olap_Hierarchy(_ID)
ALTER TABLE Olap_Hierarchy ADD defaultedDimension_ID INT
ALTER TABLE Olap_Hierarchy ADD
      FOREIGN KEY (defaultedDimension_ID) REFERENCES Olap_Dimension(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionHasDefaultHierarchy_displayDefault
    @defaultedDimension_ID INT
   ,@displayDefault_ID INT OUTPUT
AS
   SELECT @displayDefault_ID = _ID
      FROM Olap_Hierarchy
      WHERE defaultedDimension_ID = @defaultedDimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_DimensionHasDefaultHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT OUTPUT
AS
   SELECT @defaultedDimension_ID = _ID
      FROM Olap_Dimension
      WHERE displayDefault_ID = @displayDefault_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DimensionHasDefaultHierarchy
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Create_Olap_Dimensi_1CD62EAEC25B
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_Hierarchy
            SET defaultedDimension_ID = @defaultedDimension_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_Dimension
            SET displayDefault_ID = @displayDefault_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Create_Olap_Dimensi_1CD62EAEC25B
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionHasDefaultHierarchy
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Delete_Olap_Dimensi_5BC4A33A1C32
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_Hierarchy SET defaultedDimension_ID = Null
            WHERE _ID = @displayDefault_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_Dimension SET displayDefault_ID = Null
            WHERE _ID = @defaultedDimension_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Delete_Olap_Dimensi_5BC4A33A1C32
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO


PRINT 'Association Olap.CubeDimensionAssociationsReferenceCalcHierarchy'
GO

ALTER TABLE Olap_CubeDimensionAssociation ADD calcHierarchy_ID INT
ALTER TABLE Olap_CubeDimensionAssociation ADD
      FOREIGN KEY (calcHierarchy_ID) REFERENCES Olap_Hierarchy(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_calcHierarchy
    @cubeDimensionAssociation_ID INT
   ,@calcHierarchy_ID INT OUTPUT
AS
   SELECT @calcHierarchy_ID = calcHierarchy_ID
      FROM Olap_CubeDimensionAssociation
      WHERE _ID = @cubeDimensionAssociation_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE calcHierarchy_ID = @calcHierarchy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_CubeDimensionAssociation
         WHERE calcHierarchy_ID = @calcHierarchy_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_CubeDimensionAssociationsReferenceCalcHierarchy
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET calcHierarchy_ID = @calcHierarchy_ID
      WHERE _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDimensionAssociation
      SET calcHierarchy_ID = Null
      WHERE calcHierarchy_ID = @calcHierarchy_ID
        AND _ID = @cubeDimensionAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.MemberSelectionGroupReferencesMemberSelections'
GO

CREATE TABLE Olap_MemberSelectionGroupReferencesMemberSelections
   (memberSelection_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_MemberSelection(_ID)
   ,memberSelectionGroup_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_MemberSelectionGroup(_ID)
   )
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelection
    @memberSelectionGroup_ID INT
AS
   SELECT memberSelection_ID
      FROM Olap_MemberSelectionGroupReferencesMemberSelections
      WHERE memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelection
    @memberSelectionGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT memberSelection_ID
         FROM Olap_MemberSelectionGroupReferencesMemberSelections
         WHERE memberSelectionGroup_ID = @memberSelectionGroup_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelectionGroup
    @memberSelection_ID INT
AS
   SELECT memberSelectionGroup_ID
      FROM Olap_MemberSelectionGroupReferencesMemberSelections
      WHERE memberSelection_ID = @memberSelection_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelectionGroup
    @memberSelection_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT memberSelectionGroup_ID
         FROM Olap_MemberSelectionGroupReferencesMemberSelections
         WHERE memberSelection_ID = @memberSelection_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_Olap_MemberSelectionGroupReferencesMemberSelections
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   INSERT Olap_MemberSelectionGroupReferencesMemberSelections (memberSelection_ID, memberSelectionGroup_ID)
      VALUES (@memberSelection_ID, @memberSelectionGroup_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_MemberSelectionGroupReferencesMemberSelections
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Olap_MemberSelectionGroupReferencesMemberSelections
      WHERE memberSelection_ID = @memberSelection_ID
        AND memberSelectionGroup_ID = @memberSelectionGroup_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.SchemaOwnsCubes'
GO

ALTER TABLE Olap_Cube ADD schema_ID INT
ALTER TABLE Olap_Cube ADD
      FOREIGN KEY (schema_ID) REFERENCES Olap_Schema(_ID)
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsCubes_cube
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_Cube
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_SchemaOwnsCubes_cube
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_Cube
         WHERE schema_ID = @schema_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsCubes_schema
    @cube_ID INT
   ,@schema_ID INT OUTPUT
AS
   SELECT @schema_ID = schema_ID
      FROM Olap_Cube
      WHERE _ID = @cube_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_SchemaOwnsCubes
    @cube_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Cube
      SET schema_ID = @schema_ID
      WHERE _ID = @cube_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_SchemaOwnsCubes
    @cube_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Cube
      SET schema_ID = Null
      WHERE schema_ID = @schema_ID
        AND _ID = @cube_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.SchemaOwnsDimensions'
GO

ALTER TABLE Olap_Dimension ADD schema_ID INT
ALTER TABLE Olap_Dimension ADD
      FOREIGN KEY (schema_ID) REFERENCES Olap_Schema(_ID)
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsDimensions_dimension
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_Dimension
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_SchemaOwnsDimensions_dimension
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_Dimension
         WHERE schema_ID = @schema_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsDimensions_schema
    @dimension_ID INT
   ,@schema_ID INT OUTPUT
AS
   SELECT @schema_ID = schema_ID
      FROM Olap_Dimension
      WHERE _ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_SchemaOwnsDimensions
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Dimension
      SET schema_ID = @schema_ID
      WHERE _ID = @dimension_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_SchemaOwnsDimensions
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_Dimension
      SET schema_ID = Null
      WHERE schema_ID = @schema_ID
        AND _ID = @dimension_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.HierarchyLevelAssociationOwnsDimensionDeployments'
GO

CREATE TABLE Olap_HierarchyLevelAssociationOwnsDimensionDeployments
   (dimensionDeployment_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_DimensionDeployment(_ID)
   ,dimensionDeployment_Ordinal INT
   ,hierarchyLevelAssociation_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_HierarchyLevelAssociation(_ID)
   )
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
AS
   SELECT dimensionDeployment_ID
      FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
      WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
      ORDER BY dimensionDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dimensionDeployment_ID
         FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
         WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
         ORDER BY dimensionDeployment_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_hierarchyLevelAssociation
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT OUTPUT
AS
   SELECT @hierarchyLevelAssociation_ID = hierarchyLevelAssociation_ID
      FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_HierarchyLevelAssociationOwnsDimensionDeployments
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(dimensionDeployment_Ordinal)
      FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Olap_HierarchyLevelAssociationOwnsDimensionDeployments (dimensionDeployment_ID, hierarchyLevelAssociation_ID, dimensionDeployment_Ordinal)
         VALUES (@dimensionDeployment_ID, @hierarchyLevelAssociation_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
        AND hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.ValueBasedHierarchyOwnsDimensionDeployments'
GO

CREATE TABLE Olap_ValueBasedHierarchyOwnsDimensionDeployments
   (dimensionDeployment_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_DimensionDeployment(_ID)
   ,dimensionDeployment_Ordinal INT
   ,valueBasedHierarchy_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_ValueBasedHierarchy(_ID)
   )
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchyOwnsDimensionDeployments_dimensionDeployment
    @valueBasedHierarchy_ID INT
AS
   SELECT dimensionDeployment_ID
      FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
      WHERE valueBasedHierarchy_ID = @valueBasedHierarchy_ID
      ORDER BY dimensionDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchyOwnsDimensionDeployments_dimensionDeployment
    @valueBasedHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT dimensionDeployment_ID
         FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
         WHERE valueBasedHierarchy_ID = @valueBasedHierarchy_ID
         ORDER BY dimensionDeployment_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchyOwnsDimensionDeployments_valueBasedHierarchy
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT OUTPUT
AS
   SELECT @valueBasedHierarchy_ID = valueBasedHierarchy_ID
      FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_ValueBasedHierarchyOwnsDimensionDeployments
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(dimensionDeployment_Ordinal)
      FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Olap_ValueBasedHierarchyOwnsDimensionDeployments (dimensionDeployment_ID, valueBasedHierarchy_ID, dimensionDeployment_Ordinal)
         VALUES (@dimensionDeployment_ID, @valueBasedHierarchy_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
        AND valueBasedHierarchy_ID = @valueBasedHierarchy_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DimensionDeploymentOwnsStructureMaps'
GO

ALTER TABLE Olap_StructureMap ADD dimensionDeployment_ID INT
ALTER TABLE Olap_StructureMap ADD
      FOREIGN KEY (dimensionDeployment_ID) REFERENCES Olap_DimensionDeployment(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentOwnsStructureMaps_structureMap
    @dimensionDeployment_ID INT
AS
   SELECT _ID
      FROM Olap_StructureMap
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeploymentOwnsStructureMaps_structureMap
    @dimensionDeployment_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_StructureMap
         WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentOwnsStructureMaps_dimensionDeployment
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT OUTPUT
AS
   SELECT @dimensionDeployment_ID = dimensionDeployment_ID
      FROM Olap_StructureMap
      WHERE _ID = @structureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DimensionDeploymentOwnsStructureMaps
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_StructureMap
      SET dimensionDeployment_ID = @dimensionDeployment_ID
      WHERE _ID = @structureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionDeploymentOwnsStructureMaps
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_StructureMap
      SET dimensionDeployment_ID = Null
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
        AND _ID = @structureMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DimensionDeploymentHasListOfValues'
GO

ALTER TABLE Olap_DimensionDeployment ADD listOfValues_ID INT
ALTER TABLE Olap_DimensionDeployment ADD
      FOREIGN KEY (listOfValues_ID) REFERENCES Olap_StructureMap(_ID)
ALTER TABLE Olap_StructureMap ADD dimensionDeploymentLV_ID INT
ALTER TABLE Olap_StructureMap ADD
      FOREIGN KEY (dimensionDeploymentLV_ID) REFERENCES Olap_DimensionDeployment(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentHasListOfValues_listOfValues
    @dimensionDeploymentLV_ID INT
   ,@listOfValues_ID INT OUTPUT
AS
   SELECT @listOfValues_ID = _ID
      FROM Olap_StructureMap
      WHERE dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentHasListOfValues_dimensionDeploymentLV
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT OUTPUT
AS
   SELECT @dimensionDeploymentLV_ID = _ID
      FROM Olap_DimensionDeployment
      WHERE listOfValues_ID = @listOfValues_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DimensionDeploymentHasListOfValues
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Create_Olap_Dimensi_DEBA55FF61F9
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_StructureMap
            SET dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_DimensionDeployment
            SET listOfValues_ID = @listOfValues_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Create_Olap_Dimensi_DEBA55FF61F9
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionDeploymentHasListOfValues
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Delete_Olap_Dimensi_172F5E4401DC
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_StructureMap SET dimensionDeploymentLV_ID = Null
            WHERE _ID = @listOfValues_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_DimensionDeployment SET listOfValues_ID = Null
            WHERE _ID = @dimensionDeploymentLV_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Delete_Olap_Dimensi_172F5E4401DC
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO


PRINT 'Association Olap.DimensionDeploymentHasImmediateParent'
GO

ALTER TABLE Olap_DimensionDeployment ADD immediateParent_ID INT
ALTER TABLE Olap_DimensionDeployment ADD
      FOREIGN KEY (immediateParent_ID) REFERENCES Olap_StructureMap(_ID)
ALTER TABLE Olap_StructureMap ADD dimensionDeploymentIP_ID INT
ALTER TABLE Olap_StructureMap ADD
      FOREIGN KEY (dimensionDeploymentIP_ID) REFERENCES Olap_DimensionDeployment(_ID)
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentHasImmediateParent_immediateParent
    @dimensionDeploymentIP_ID INT
   ,@immediateParent_ID INT OUTPUT
AS
   SELECT @immediateParent_ID = _ID
      FROM Olap_StructureMap
      WHERE dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeploymentHasImmediateParent_dimensionDeploymentIP
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT OUTPUT
AS
   SELECT @dimensionDeploymentIP_ID = _ID
      FROM Olap_DimensionDeployment
      WHERE immediateParent_ID = @immediateParent_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DimensionDeploymentHasImmediateParent
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Create_Olap_Dimensi_76FB556A3E1F
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_StructureMap
            SET dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_DimensionDeployment
            SET immediateParent_ID = @immediateParent_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Create_Olap_Dimensi_76FB556A3E1F
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DimensionDeploymentHasImmediateParent
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Delete_Olap_Dimensi_3CA4843F8E8A
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE Olap_StructureMap SET dimensionDeploymentIP_ID = Null
            WHERE _ID = @immediateParent_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE Olap_DimensionDeployment SET immediateParent_ID = Null
            WHERE _ID = @dimensionDeploymentIP_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Delete_Olap_Dimensi_3CA4843F8E8A
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO


PRINT 'Association Olap.CubeOwnsCubeRegions'
GO

ALTER TABLE Olap_CubeRegion ADD cube_ID INT
ALTER TABLE Olap_CubeRegion ADD
      FOREIGN KEY (cube_ID) REFERENCES Olap_Cube(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeOwnsCubeRegions_cubeRegion
    @cube_ID INT
AS
   SELECT _ID
      FROM Olap_CubeRegion
      WHERE cube_ID = @cube_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeOwnsCubeRegions_cubeRegion
    @cube_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_CubeRegion
         WHERE cube_ID = @cube_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeOwnsCubeRegions_cube
    @cubeRegion_ID INT
   ,@cube_ID INT OUTPUT
AS
   SELECT @cube_ID = cube_ID
      FROM Olap_CubeRegion
      WHERE _ID = @cubeRegion_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_CubeOwnsCubeRegions
    @cubeRegion_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeRegion
      SET cube_ID = @cube_ID
      WHERE _ID = @cubeRegion_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeOwnsCubeRegions
    @cubeRegion_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeRegion
      SET cube_ID = Null
      WHERE cube_ID = @cube_ID
        AND _ID = @cubeRegion_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.CubeRegionOwnsMemberSelectionGroups'
GO

ALTER TABLE Olap_MemberSelectionGroup ADD cubeRegion_ID INT
ALTER TABLE Olap_MemberSelectionGroup ADD
      FOREIGN KEY (cubeRegion_ID) REFERENCES Olap_CubeRegion(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeRegionOwnsMemberSelectionGroups_memberSelectionGroup
    @cubeRegion_ID INT
AS
   SELECT _ID
      FROM Olap_MemberSelectionGroup
      WHERE cubeRegion_ID = @cubeRegion_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegionOwnsMemberSelectionGroups_memberSelectionGroup
    @cubeRegion_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_MemberSelectionGroup
         WHERE cubeRegion_ID = @cubeRegion_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegionOwnsMemberSelectionGroups_cubeRegion
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT OUTPUT
AS
   SELECT @cubeRegion_ID = cubeRegion_ID
      FROM Olap_MemberSelectionGroup
      WHERE _ID = @memberSelectionGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_CubeRegionOwnsMemberSelectionGroups
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_MemberSelectionGroup
      SET cubeRegion_ID = @cubeRegion_ID
      WHERE _ID = @memberSelectionGroup_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeRegionOwnsMemberSelectionGroups
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_MemberSelectionGroup
      SET cubeRegion_ID = Null
      WHERE cubeRegion_ID = @cubeRegion_ID
        AND _ID = @memberSelectionGroup_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.CubeRegionOwnsCubeDeployments'
GO

CREATE TABLE Olap_CubeRegionOwnsCubeDeployments
   (cubeDeployment_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_CubeDeployment(_ID)
   ,cubeDeployment_Ordinal INT
   ,cubeRegion_ID INT NOT NULL FOREIGN KEY REFERENCES Olap_CubeRegion(_ID)
   )
GO

CREATE PROCEDURE Get_Olap_CubeRegionOwnsCubeDeployments_cubeDeployment
    @cubeRegion_ID INT
AS
   SELECT cubeDeployment_ID
      FROM Olap_CubeRegionOwnsCubeDeployments
      WHERE cubeRegion_ID = @cubeRegion_ID
      ORDER BY cubeDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegionOwnsCubeDeployments_cubeDeployment
    @cubeRegion_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT cubeDeployment_ID
         FROM Olap_CubeRegionOwnsCubeDeployments
         WHERE cubeRegion_ID = @cubeRegion_ID
         ORDER BY cubeDeployment_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegionOwnsCubeDeployments_cubeRegion
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT OUTPUT
AS
   SELECT @cubeRegion_ID = cubeRegion_ID
      FROM Olap_CubeRegionOwnsCubeDeployments
      WHERE cubeDeployment_ID = @cubeDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_CubeRegionOwnsCubeDeployments
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(cubeDeployment_Ordinal)
      FROM Olap_CubeRegionOwnsCubeDeployments
      WHERE cubeDeployment_ID = @cubeDeployment_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT Olap_CubeRegionOwnsCubeDeployments (cubeDeployment_ID, cubeRegion_ID, cubeDeployment_Ordinal)
         VALUES (@cubeDeployment_ID, @cubeRegion_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeRegionOwnsCubeDeployments
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   DELETE FROM Olap_CubeRegionOwnsCubeDeployments
      WHERE cubeDeployment_ID = @cubeDeployment_ID
        AND cubeRegion_ID = @cubeRegion_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.SchemaOwnsDeploymentGroups'
GO

ALTER TABLE Olap_DeploymentGroup ADD schema_ID INT
ALTER TABLE Olap_DeploymentGroup ADD
      FOREIGN KEY (schema_ID) REFERENCES Olap_Schema(_ID)
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsDeploymentGroups_deploymentGroup
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_DeploymentGroup
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_SchemaOwnsDeploymentGroups_deploymentGroup
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_DeploymentGroup
         WHERE schema_ID = @schema_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_SchemaOwnsDeploymentGroups_schema
    @deploymentGroup_ID INT
   ,@schema_ID INT OUTPUT
AS
   SELECT @schema_ID = schema_ID
      FROM Olap_DeploymentGroup
      WHERE _ID = @deploymentGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_SchemaOwnsDeploymentGroups
    @deploymentGroup_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_DeploymentGroup
      SET schema_ID = @schema_ID
      WHERE _ID = @deploymentGroup_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_SchemaOwnsDeploymentGroups
    @deploymentGroup_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_DeploymentGroup
      SET schema_ID = Null
      WHERE schema_ID = @schema_ID
        AND _ID = @deploymentGroup_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DeploymentGroupReferencesCubeDeployments'
GO

ALTER TABLE Olap_CubeDeployment ADD deploymentGroup_ID INT
ALTER TABLE Olap_CubeDeployment ADD
      FOREIGN KEY (deploymentGroup_ID) REFERENCES Olap_DeploymentGroup(_ID)
GO

CREATE PROCEDURE Get_Olap_DeploymentGroupReferencesCubeDeployments_cubeDeployment
    @deploymentGroup_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDeployment
      WHERE deploymentGroup_ID = @deploymentGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroupReferencesCubeDeployments_cubeDeployment
    @deploymentGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_CubeDeployment
         WHERE deploymentGroup_ID = @deploymentGroup_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroupReferencesCubeDeployments_deploymentGroup
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT OUTPUT
AS
   SELECT @deploymentGroup_ID = deploymentGroup_ID
      FROM Olap_CubeDeployment
      WHERE _ID = @cubeDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DeploymentGroupReferencesCubeDeployments
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDeployment
      SET deploymentGroup_ID = @deploymentGroup_ID
      WHERE _ID = @cubeDeployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DeploymentGroupReferencesCubeDeployments
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_CubeDeployment
      SET deploymentGroup_ID = Null
      WHERE deploymentGroup_ID = @deploymentGroup_ID
        AND _ID = @cubeDeployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.DeploymentGroupReferencesDimensionDeployments'
GO

ALTER TABLE Olap_DimensionDeployment ADD deploymentGroup_ID INT
ALTER TABLE Olap_DimensionDeployment ADD
      FOREIGN KEY (deploymentGroup_ID) REFERENCES Olap_DeploymentGroup(_ID)
GO

CREATE PROCEDURE Get_Olap_DeploymentGroupReferencesDimensionDeployments_dimensionDeployment
    @deploymentGroup_ID INT
AS
   SELECT _ID
      FROM Olap_DimensionDeployment
      WHERE deploymentGroup_ID = @deploymentGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroupReferencesDimensionDeployments_dimensionDeployment
    @deploymentGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_DimensionDeployment
         WHERE deploymentGroup_ID = @deploymentGroup_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroupReferencesDimensionDeployments_deploymentGroup
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT OUTPUT
AS
   SELECT @deploymentGroup_ID = deploymentGroup_ID
      FROM Olap_DimensionDeployment
      WHERE _ID = @dimensionDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_DeploymentGroupReferencesDimensionDeployments
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_DimensionDeployment
      SET deploymentGroup_ID = @deploymentGroup_ID
      WHERE _ID = @dimensionDeployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_DeploymentGroupReferencesDimensionDeployments
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_DimensionDeployment
      SET deploymentGroup_ID = Null
      WHERE deploymentGroup_ID = @deploymentGroup_ID
        AND _ID = @dimensionDeployment_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association Olap.CubeDeploymentOwnsContentMaps'
GO

ALTER TABLE Olap_ContentMap ADD cubeDeployment_ID INT
ALTER TABLE Olap_ContentMap ADD
      FOREIGN KEY (cubeDeployment_ID) REFERENCES Olap_CubeDeployment(_ID)
GO

CREATE PROCEDURE Get_Olap_CubeDeploymentOwnsContentMaps_contentMap
    @cubeDeployment_ID INT
AS
   SELECT _ID
      FROM Olap_ContentMap
      WHERE cubeDeployment_ID = @cubeDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeploymentOwnsContentMaps_contentMap
    @cubeDeployment_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM Olap_ContentMap
         WHERE cubeDeployment_ID = @cubeDeployment_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeploymentOwnsContentMaps_cubeDeployment
    @contentMap_ID INT
   ,@cubeDeployment_ID INT OUTPUT
AS
   SELECT @cubeDeployment_ID = cubeDeployment_ID
      FROM Olap_ContentMap
      WHERE _ID = @contentMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_Olap_CubeDeploymentOwnsContentMaps
    @contentMap_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_ContentMap
      SET cubeDeployment_ID = @cubeDeployment_ID
      WHERE _ID = @contentMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_Olap_CubeDeploymentOwnsContentMaps
    @contentMap_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   UPDATE Olap_ContentMap
      SET cubeDeployment_ID = Null
      WHERE cubeDeployment_ID = @cubeDeployment_ID
        AND _ID = @contentMap_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- DataMining Associations
--


PRINT 'Association DataMining.DerivedFromSettings'
GO

ALTER TABLE DataMining_MiningSettings ADD miningModel_ID INT
ALTER TABLE DataMining_MiningSettings ADD
      FOREIGN KEY (miningModel_ID) REFERENCES DataMining_MiningModel(_ID)
ALTER TABLE DataMining_MiningModel ADD settings_ID INT
ALTER TABLE DataMining_MiningModel ALTER COLUMN settings_ID INT NOT NULL
ALTER TABLE DataMining_MiningModel ADD
      FOREIGN KEY (settings_ID) REFERENCES DataMining_MiningSettings(_ID)
GO

CREATE PROCEDURE Get_DataMining_DerivedFromSettings_miningModel
    @settings_ID INT
   ,@miningModel_ID INT OUTPUT
AS
   SELECT @miningModel_ID = _ID
      FROM DataMining_MiningModel
      WHERE settings_ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_DerivedFromSettings_settings
    @miningModel_ID INT
   ,@settings_ID INT OUTPUT
AS
   SELECT @settings_ID = _ID
      FROM DataMining_MiningSettings
      WHERE miningModel_ID = @miningModel_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_DerivedFromSettings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Create_DataMining_D_B418C31D692F
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE DataMining_MiningModel
            SET settings_ID = @settings_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE DataMining_MiningSettings
            SET miningModel_ID = @miningModel_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Create_DataMining_D_B418C31D692F
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_DerivedFromSettings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   IF @Error = 0
   BEGIN
      BEGIN TRANSACTION Delete_DataMining_D_640A225EA4DE
      SELECT @Error = @@Error
      IF @Error = 0
      BEGIN
         UPDATE DataMining_MiningModel SET settings_ID = Null
            WHERE _ID = @miningModel_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
      BEGIN
         UPDATE DataMining_MiningSettings SET miningModel_ID = Null
            WHERE _ID = @settings_ID
         SELECT @Error = @@Error
      END
      IF @Error = 0
         COMMIT TRANSACTION Delete_DataMining_D_640A225EA4DE
      ELSE
         ROLLBACK TRANSACTION
      IF @@Error <> 0
         SELECT @Error = @@Error
   END
   RETURN @Error
GO


PRINT 'Association DataMining.InputSpecOwnsAttributes'
GO

ALTER TABLE DataMining_ApplicationAttribute ADD inputSpec_ID INT
ALTER TABLE DataMining_ApplicationAttribute ALTER COLUMN inputSpec_ID INT NOT NULL
ALTER TABLE DataMining_ApplicationAttribute ADD
      FOREIGN KEY (inputSpec_ID) REFERENCES DataMining_ApplicationInputSpecification(_ID)
GO

CREATE PROCEDURE Get_DataMining_InputSpecOwnsAttributes_inputSpec
    @inputAttribute_ID INT
   ,@inputSpec_ID INT OUTPUT
AS
   SELECT @inputSpec_ID = inputSpec_ID
      FROM DataMining_ApplicationAttribute
      WHERE _ID = @inputAttribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_InputSpecOwnsAttributes_inputAttribute
    @inputSpec_ID INT
AS
   SELECT _ID
      FROM DataMining_ApplicationAttribute
      WHERE inputSpec_ID = @inputSpec_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_InputSpecOwnsAttributes_inputAttribute
    @inputSpec_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_ApplicationAttribute
         WHERE inputSpec_ID = @inputSpec_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_InputSpecOwnsAttributes
    @inputSpec_ID INT
   ,@inputAttribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ApplicationAttribute
      SET inputSpec_ID = @inputSpec_ID
      WHERE _ID = @inputAttribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_InputSpecOwnsAttributes
    @inputSpec_ID INT
   ,@inputAttribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ApplicationAttribute
      SET inputSpec_ID = Null
      WHERE inputSpec_ID = @inputSpec_ID
        AND _ID = @inputAttribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.ProducedByModel'
GO

ALTER TABLE DataMining_MiningModelResult ADD model_ID INT
ALTER TABLE DataMining_MiningModelResult ADD
      FOREIGN KEY (model_ID) REFERENCES DataMining_MiningModel(_ID)
GO

CREATE PROCEDURE Get_DataMining_ProducedByModel_miningResult
    @model_ID INT
AS
   SELECT _ID
      FROM DataMining_MiningModelResult
      WHERE model_ID = @model_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ProducedByModel_miningResult
    @model_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_MiningModelResult
         WHERE model_ID = @model_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ProducedByModel_model
    @miningResult_ID INT
   ,@model_ID INT OUTPUT
AS
   SELECT @model_ID = model_ID
      FROM DataMining_MiningModelResult
      WHERE _ID = @miningResult_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_ProducedByModel
    @miningResult_ID INT
   ,@model_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningModelResult
      SET model_ID = @model_ID
      WHERE _ID = @miningResult_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ProducedByModel
    @miningResult_ID INT
   ,@model_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningModelResult
      SET model_ID = Null
      WHERE model_ID = @model_ID
        AND _ID = @miningResult_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.HasAttribute'
GO

ALTER TABLE DataMining_MiningAttribute ADD dataSpecification_ID INT
ALTER TABLE DataMining_MiningAttribute ALTER COLUMN dataSpecification_ID INT NOT NULL
ALTER TABLE DataMining_MiningAttribute ADD
      FOREIGN KEY (dataSpecification_ID) REFERENCES DataMining_MiningDataSpecification(_ID)
GO

CREATE PROCEDURE Get_DataMining_HasAttribute_dataSpecification
    @attribute_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   SELECT @dataSpecification_ID = dataSpecification_ID
      FROM DataMining_MiningAttribute
      WHERE _ID = @attribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_HasAttribute_attribute
    @dataSpecification_ID INT
AS
   SELECT _ID
      FROM DataMining_MiningAttribute
      WHERE dataSpecification_ID = @dataSpecification_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_HasAttribute_attribute
    @dataSpecification_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_MiningAttribute
         WHERE dataSpecification_ID = @dataSpecification_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_HasAttribute
    @dataSpecification_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningAttribute
      SET dataSpecification_ID = @dataSpecification_ID
      WHERE _ID = @attribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_HasAttribute
    @dataSpecification_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningAttribute
      SET dataSpecification_ID = Null
      WHERE dataSpecification_ID = @dataSpecification_ID
        AND _ID = @attribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesAsTaxonomy'
GO

ALTER TABLE DataMining_CategoricalAttribute ADD taxonomy_ID INT
ALTER TABLE DataMining_CategoricalAttribute ADD
      FOREIGN KEY (taxonomy_ID) REFERENCES DataMining_CategoryHierarchy(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesAsTaxonomy_categoricalAttribute
    @taxonomy_ID INT
AS
   SELECT _ID
      FROM DataMining_CategoricalAttribute
      WHERE taxonomy_ID = @taxonomy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesAsTaxonomy_categoricalAttribute
    @taxonomy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_CategoricalAttribute
         WHERE taxonomy_ID = @taxonomy_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesAsTaxonomy_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT OUTPUT
AS
   SELECT @taxonomy_ID = taxonomy_ID
      FROM DataMining_CategoricalAttribute
      WHERE _ID = @categoricalAttribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesAsTaxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_CategoricalAttribute
      SET taxonomy_ID = @taxonomy_ID
      WHERE _ID = @categoricalAttribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesAsTaxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_CategoricalAttribute
      SET taxonomy_ID = Null
      WHERE taxonomy_ID = @taxonomy_ID
        AND _ID = @categoricalAttribute_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.ContainsCategory'
GO

ALTER TABLE DataMining_Category ADD categoricalAttribute_ID INT
ALTER TABLE DataMining_Category ADD
      FOREIGN KEY (categoricalAttribute_ID) REFERENCES DataMining_CategoricalAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_ContainsCategory_categoricalAttribute
    @category_ID INT
   ,@categoricalAttribute_ID INT OUTPUT
AS
   SELECT @categoricalAttribute_ID = categoricalAttribute_ID
      FROM DataMining_Category
      WHERE _ID = @category_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ContainsCategory_category
    @categoricalAttribute_ID INT
AS
   SELECT _ID
      FROM DataMining_Category
      WHERE categoricalAttribute_ID = @categoricalAttribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ContainsCategory_category
    @categoricalAttribute_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_Category
         WHERE categoricalAttribute_ID = @categoricalAttribute_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ContainsCategory
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_Category
      SET categoricalAttribute_ID = @categoricalAttribute_ID
      WHERE _ID = @category_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ContainsCategory
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_Category
      SET categoricalAttribute_ID = Null
      WHERE categoricalAttribute_ID = @categoricalAttribute_ID
        AND _ID = @category_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.ContainsAttributeUsage'
GO

ALTER TABLE DataMining_AttributeUsageRelation ADD settings_ID INT
ALTER TABLE DataMining_AttributeUsageRelation ALTER COLUMN settings_ID INT NOT NULL
ALTER TABLE DataMining_AttributeUsageRelation ADD
      FOREIGN KEY (settings_ID) REFERENCES DataMining_MiningSettings(_ID)
GO

CREATE PROCEDURE Get_DataMining_ContainsAttributeUsage_settings
    @attributeUsage_ID INT
   ,@settings_ID INT OUTPUT
AS
   SELECT @settings_ID = settings_ID
      FROM DataMining_AttributeUsageRelation
      WHERE _ID = @attributeUsage_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_ContainsAttributeUsage_attributeUsage
    @settings_ID INT
AS
   SELECT _ID
      FROM DataMining_AttributeUsageRelation
      WHERE settings_ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ContainsAttributeUsage_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_AttributeUsageRelation
         WHERE settings_ID = @settings_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_ContainsAttributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AttributeUsageRelation
      SET settings_ID = @settings_ID
      WHERE _ID = @attributeUsage_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_ContainsAttributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AttributeUsageRelation
      SET settings_ID = Null
      WHERE settings_ID = @settings_ID
        AND _ID = @attributeUsage_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesAsInput'
GO

ALTER TABLE DataMining_MiningSettings ADD dataSpecification_ID INT
ALTER TABLE DataMining_MiningSettings ADD
      FOREIGN KEY (dataSpecification_ID) REFERENCES DataMining_MiningDataSpecification(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesAsInput_settings
    @dataSpecification_ID INT
AS
   SELECT _ID
      FROM DataMining_MiningSettings
      WHERE dataSpecification_ID = @dataSpecification_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesAsInput_settings
    @dataSpecification_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_MiningSettings
         WHERE dataSpecification_ID = @dataSpecification_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesAsInput_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   SELECT @dataSpecification_ID = dataSpecification_ID
      FROM DataMining_MiningSettings
      WHERE _ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesAsInput
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningSettings
      SET dataSpecification_ID = @dataSpecification_ID
      WHERE _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesAsInput
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_MiningSettings
      SET dataSpecification_ID = Null
      WHERE dataSpecification_ID = @dataSpecification_ID
        AND _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.PertainsToAttribute'
GO

ALTER TABLE DataMining_AttributeUsageRelation ADD attribute_ID INT
ALTER TABLE DataMining_AttributeUsageRelation ADD
      FOREIGN KEY (attribute_ID) REFERENCES DataMining_MiningAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_PertainsToAttribute_attributeUsage
    @attribute_ID INT
AS
   SELECT _ID
      FROM DataMining_AttributeUsageRelation
      WHERE attribute_ID = @attribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_PertainsToAttribute_attributeUsage
    @attribute_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_AttributeUsageRelation
         WHERE attribute_ID = @attribute_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_PertainsToAttribute_attribute
    @attributeUsage_ID INT
   ,@attribute_ID INT OUTPUT
AS
   SELECT @attribute_ID = attribute_ID
      FROM DataMining_AttributeUsageRelation
      WHERE _ID = @attributeUsage_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_PertainsToAttribute
    @attributeUsage_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AttributeUsageRelation
      SET attribute_ID = @attribute_ID
      WHERE _ID = @attributeUsage_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_PertainsToAttribute
    @attributeUsage_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AttributeUsageRelation
      SET attribute_ID = Null
      WHERE attribute_ID = @attribute_ID
        AND _ID = @attributeUsage_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesItemId'
GO

ALTER TABLE DataMining_AssociationRulesSettings ADD itemId_ID INT
ALTER TABLE DataMining_AssociationRulesSettings ADD
      FOREIGN KEY (itemId_ID) REFERENCES DataMining_MiningAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesItemId_settings
    @itemId_ID INT
AS
   SELECT _ID
      FROM DataMining_AssociationRulesSettings
      WHERE itemId_ID = @itemId_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesItemId_settings
    @itemId_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_AssociationRulesSettings
         WHERE itemId_ID = @itemId_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesItemId_itemId
    @settings_ID INT
   ,@itemId_ID INT OUTPUT
AS
   SELECT @itemId_ID = itemId_ID
      FROM DataMining_AssociationRulesSettings
      WHERE _ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesItemId
    @settings_ID INT
   ,@itemId_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AssociationRulesSettings
      SET itemId_ID = @itemId_ID
      WHERE _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesItemId
    @settings_ID INT
   ,@itemId_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AssociationRulesSettings
      SET itemId_ID = Null
      WHERE itemId_ID = @itemId_ID
        AND _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesTransactionId'
GO

ALTER TABLE DataMining_AssociationRulesSettings ADD transactionId_ID INT
ALTER TABLE DataMining_AssociationRulesSettings ADD
      FOREIGN KEY (transactionId_ID) REFERENCES DataMining_MiningAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesTransactionId_settings
    @transactionId_ID INT
AS
   SELECT _ID
      FROM DataMining_AssociationRulesSettings
      WHERE transactionId_ID = @transactionId_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesTransactionId_settings
    @transactionId_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_AssociationRulesSettings
         WHERE transactionId_ID = @transactionId_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesTransactionId_transactionId
    @settings_ID INT
   ,@transactionId_ID INT OUTPUT
AS
   SELECT @transactionId_ID = transactionId_ID
      FROM DataMining_AssociationRulesSettings
      WHERE _ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesTransactionId
    @settings_ID INT
   ,@transactionId_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AssociationRulesSettings
      SET transactionId_ID = @transactionId_ID
      WHERE _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesTransactionId
    @settings_ID INT
   ,@transactionId_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_AssociationRulesSettings
      SET transactionId_ID = Null
      WHERE transactionId_ID = @transactionId_ID
        AND _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesAsTarget'
GO

ALTER TABLE DataMining_SupervisedMiningSettings ADD target_ID INT
ALTER TABLE DataMining_SupervisedMiningSettings ADD
      FOREIGN KEY (target_ID) REFERENCES DataMining_MiningAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesAsTarget_settings
    @target_ID INT
AS
   SELECT _ID
      FROM DataMining_SupervisedMiningSettings
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesAsTarget_settings
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_SupervisedMiningSettings
         WHERE target_ID = @target_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesAsTarget_target
    @settings_ID INT
   ,@target_ID INT OUTPUT
AS
   SELECT @target_ID = target_ID
      FROM DataMining_SupervisedMiningSettings
      WHERE _ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesAsTarget
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_SupervisedMiningSettings
      SET target_ID = @target_ID
      WHERE _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesAsTarget
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_SupervisedMiningSettings
      SET target_ID = Null
      WHERE target_ID = @target_ID
        AND _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.UsesCostMatrix'
GO

ALTER TABLE DataMining_ClassificationSettings ADD costMatrix_ID INT
ALTER TABLE DataMining_ClassificationSettings ADD
      FOREIGN KEY (costMatrix_ID) REFERENCES DataMining_CostMatrix(_ID)
GO

CREATE PROCEDURE Get_DataMining_UsesCostMatrix_settings
    @costMatrix_ID INT
AS
   SELECT _ID
      FROM DataMining_ClassificationSettings
      WHERE costMatrix_ID = @costMatrix_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_UsesCostMatrix_settings
    @costMatrix_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_ClassificationSettings
         WHERE costMatrix_ID = @costMatrix_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_UsesCostMatrix_costMatrix
    @settings_ID INT
   ,@costMatrix_ID INT OUTPUT
AS
   SELECT @costMatrix_ID = costMatrix_ID
      FROM DataMining_ClassificationSettings
      WHERE _ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_DataMining_UsesCostMatrix
    @settings_ID INT
   ,@costMatrix_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ClassificationSettings
      SET costMatrix_ID = @costMatrix_ID
      WHERE _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_UsesCostMatrix
    @settings_ID INT
   ,@costMatrix_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ClassificationSettings
      SET costMatrix_ID = Null
      WHERE costMatrix_ID = @costMatrix_ID
        AND _ID = @settings_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.MiningModelOwnsInputSpecification'
GO

ALTER TABLE DataMining_ApplicationInputSpecification ADD miningModel_ID INT
ALTER TABLE DataMining_ApplicationInputSpecification ALTER COLUMN miningModel_ID INT NOT NULL
ALTER TABLE DataMining_ApplicationInputSpecification ADD
      FOREIGN KEY (miningModel_ID) REFERENCES DataMining_MiningModel(_ID)
GO

CREATE PROCEDURE Get_DataMining_MiningModelOwnsInputSpecification_miningModel
    @inputSpec_ID INT
   ,@miningModel_ID INT OUTPUT
AS
   SELECT @miningModel_ID = miningModel_ID
      FROM DataMining_ApplicationInputSpecification
      WHERE _ID = @inputSpec_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelOwnsInputSpecification_inputSpec
    @miningModel_ID INT
AS
   SELECT _ID
      FROM DataMining_ApplicationInputSpecification
      WHERE miningModel_ID = @miningModel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelOwnsInputSpecification_inputSpec
    @miningModel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_ApplicationInputSpecification
         WHERE miningModel_ID = @miningModel_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_MiningModelOwnsInputSpecification
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ApplicationInputSpecification
      SET miningModel_ID = @miningModel_ID
      WHERE _ID = @inputSpec_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_MiningModelOwnsInputSpecification
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_ApplicationInputSpecification
      SET miningModel_ID = Null
      WHERE miningModel_ID = @miningModel_ID
        AND _ID = @inputSpec_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.SupervisedMiningModelReferencesTargetAttribute'
GO

ALTER TABLE DataMining_SupervisedMiningModel ADD target_ID INT
ALTER TABLE DataMining_SupervisedMiningModel ADD
      FOREIGN KEY (target_ID) REFERENCES DataMining_ApplicationAttribute(_ID)
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModelReferencesTargetAttribute_target
    @supervisedMiningModel_ID INT
   ,@target_ID INT OUTPUT
AS
   SELECT @target_ID = target_ID
      FROM DataMining_SupervisedMiningModel
      WHERE _ID = @supervisedMiningModel_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModelReferencesTargetAttribute_supervisedMiningModel
    @target_ID INT
AS
   SELECT _ID
      FROM DataMining_SupervisedMiningModel
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModelReferencesTargetAttribute_supervisedMiningModel
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM DataMining_SupervisedMiningModel
         WHERE target_ID = @target_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_SupervisedMiningModelReferencesTargetAttribute
    @target_ID INT
   ,@supervisedMiningModel_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_SupervisedMiningModel
      SET target_ID = @target_ID
      WHERE _ID = @supervisedMiningModel_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_SupervisedMiningModelReferencesTargetAttribute
    @target_ID INT
   ,@supervisedMiningModel_ID INT
AS
   DECLARE @Error INT
   UPDATE DataMining_SupervisedMiningModel
      SET target_ID = Null
      WHERE target_ID = @target_ID
        AND _ID = @supervisedMiningModel_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association DataMining.OrdersCategory'
GO

CREATE TABLE DataMining_OrdersCategory
   (ordinalAttribute_ID INT NOT NULL FOREIGN KEY REFERENCES DataMining_OrdinalAttribute(_ID)
   ,category_ID INT NOT NULL FOREIGN KEY REFERENCES DataMining_Category(_ID)
   ,category_Ordinal INT
   )
GO

CREATE PROCEDURE Get_DataMining_OrdersCategory_ordinalAttribute
    @category_ID INT
   ,@ordinalAttribute_ID INT OUTPUT
AS
   SELECT @ordinalAttribute_ID = ordinalAttribute_ID
      FROM DataMining_OrdersCategory
      WHERE category_ID = @category_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_DataMining_OrdersCategory_category
    @ordinalAttribute_ID INT
AS
   SELECT category_ID
      FROM DataMining_OrdersCategory
      WHERE ordinalAttribute_ID = @ordinalAttribute_ID
      ORDER BY category_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdersCategory_category
    @ordinalAttribute_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT category_ID
         FROM DataMining_OrdersCategory
         WHERE ordinalAttribute_ID = @ordinalAttribute_ID
         ORDER BY category_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_DataMining_OrdersCategory
    @ordinalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(category_Ordinal)
      FROM DataMining_OrdersCategory
      WHERE category_ID = @category_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT DataMining_OrdersCategory (ordinalAttribute_ID, category_ID, category_Ordinal)
         VALUES (@ordinalAttribute_ID, @category_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_DataMining_OrdersCategory
    @ordinalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   DELETE FROM DataMining_OrdersCategory
      WHERE ordinalAttribute_ID = @ordinalAttribute_ID
        AND category_ID = @category_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- InformationVisualization Associations
--


PRINT 'Association InformationVisualization.CompositesReferenceComponents'
GO

CREATE TABLE InformationVisualization_CompositesReferenceComponents
   (composite_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_RenderedObject(_ID)
   ,component_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_RenderedObject(_ID)
   )
GO

CREATE PROCEDURE Get_InformationVisualization_CompositesReferenceComponents_composite
    @component_ID INT
AS
   SELECT composite_ID
      FROM InformationVisualization_CompositesReferenceComponents
      WHERE component_ID = @component_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_CompositesReferenceComponents_composite
    @component_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT composite_ID
         FROM InformationVisualization_CompositesReferenceComponents
         WHERE component_ID = @component_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_CompositesReferenceComponents_component
    @composite_ID INT
AS
   SELECT component_ID
      FROM InformationVisualization_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_CompositesReferenceComponents_component
    @composite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT component_ID
         FROM InformationVisualization_CompositesReferenceComponents
         WHERE composite_ID = @composite_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_CompositesReferenceComponents
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   INSERT InformationVisualization_CompositesReferenceComponents (composite_ID, component_ID)
      VALUES (@composite_ID, @component_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_CompositesReferenceComponents
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   DELETE FROM InformationVisualization_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
        AND component_ID = @component_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.RenderedObjectsReferenceRenderings'
GO

CREATE TABLE InformationVisualization_RenderedObjectsReferenceRenderings
   (rendering_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_Rendering(_ID)
   ,renderedObject_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_RenderedObject(_ID)
   )
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceRenderings_rendering
    @renderedObject_ID INT
AS
   SELECT rendering_ID
      FROM InformationVisualization_RenderedObjectsReferenceRenderings
      WHERE renderedObject_ID = @renderedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_rendering
    @renderedObject_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT rendering_ID
         FROM InformationVisualization_RenderedObjectsReferenceRenderings
         WHERE renderedObject_ID = @renderedObject_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceRenderings_renderedObject
    @rendering_ID INT
AS
   SELECT renderedObject_ID
      FROM InformationVisualization_RenderedObjectsReferenceRenderings
      WHERE rendering_ID = @rendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_renderedObject
    @rendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT renderedObject_ID
         FROM InformationVisualization_RenderedObjectsReferenceRenderings
         WHERE rendering_ID = @rendering_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectsReferenceRenderings
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   INSERT InformationVisualization_RenderedObjectsReferenceRenderings (rendering_ID, renderedObject_ID)
      VALUES (@rendering_ID, @renderedObject_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectsReferenceRenderings
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   DELETE FROM InformationVisualization_RenderedObjectsReferenceRenderings
      WHERE rendering_ID = @rendering_ID
        AND renderedObject_ID = @renderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.RenderedObjectsReferenceDefaultRendering'
GO

ALTER TABLE InformationVisualization_RenderedObject ADD defaultRendering_ID INT
ALTER TABLE InformationVisualization_RenderedObject ADD
      FOREIGN KEY (defaultRendering_ID) REFERENCES InformationVisualization_Rendering(_ID)
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultRendering
    @defaultedRenderedObject_ID INT
   ,@defaultRendering_ID INT OUTPUT
AS
   SELECT @defaultRendering_ID = defaultRendering_ID
      FROM InformationVisualization_RenderedObject
      WHERE _ID = @defaultedRenderedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultedRenderedObject
    @defaultRendering_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_RenderedObject
      WHERE defaultRendering_ID = @defaultRendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM InformationVisualization_RenderedObject
         WHERE defaultRendering_ID = @defaultRendering_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectsReferenceDefaultRendering
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET defaultRendering_ID = @defaultRendering_ID
      WHERE _ID = @defaultedRenderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET defaultRendering_ID = Null
      WHERE defaultRendering_ID = @defaultRendering_ID
        AND _ID = @defaultedRenderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.RenderedObjectsReferenceModelElement'
GO

ALTER TABLE InformationVisualization_RenderedObject ADD modelElement_ID INT
ALTER TABLE InformationVisualization_RenderedObject ADD
      FOREIGN KEY (modelElement_ID) REFERENCES Core_ModelElement(_ID)
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceModelElement_renderedObject
    @modelElement_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_RenderedObject
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectsReferenceModelElement_renderedObject
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM InformationVisualization_RenderedObject
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectsReferenceModelElement_modelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   SELECT @modelElement_ID = modelElement_ID
      FROM InformationVisualization_RenderedObject
      WHERE _ID = @renderedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectsReferenceModelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET modelElement_ID = @modelElement_ID
      WHERE _ID = @renderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectsReferenceModelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET modelElement_ID = Null
      WHERE modelElement_ID = @modelElement_ID
        AND _ID = @renderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.NeighborsReferenceNeighbors'
GO

CREATE TABLE InformationVisualization_NeighborsReferenceNeighbors
   (neighbor_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_RenderedObject(_ID)
   ,referencingNeighbor_ID INT NOT NULL FOREIGN KEY REFERENCES InformationVisualization_RenderedObject(_ID)
   )
GO

CREATE PROCEDURE Get_InformationVisualization_NeighborsReferenceNeighbors_neighbor
    @referencingNeighbor_ID INT
AS
   SELECT neighbor_ID
      FROM InformationVisualization_NeighborsReferenceNeighbors
      WHERE referencingNeighbor_ID = @referencingNeighbor_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_NeighborsReferenceNeighbors_neighbor
    @referencingNeighbor_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT neighbor_ID
         FROM InformationVisualization_NeighborsReferenceNeighbors
         WHERE referencingNeighbor_ID = @referencingNeighbor_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_NeighborsReferenceNeighbors_referencingNeighbor
    @neighbor_ID INT
AS
   SELECT referencingNeighbor_ID
      FROM InformationVisualization_NeighborsReferenceNeighbors
      WHERE neighbor_ID = @neighbor_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_NeighborsReferenceNeighbors_referencingNeighbor
    @neighbor_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT referencingNeighbor_ID
         FROM InformationVisualization_NeighborsReferenceNeighbors
         WHERE neighbor_ID = @neighbor_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_InformationVisualization_NeighborsReferenceNeighbors
    @neighbor_ID INT
   ,@referencingNeighbor_ID INT
AS
   DECLARE @Error INT
   INSERT InformationVisualization_NeighborsReferenceNeighbors (neighbor_ID, referencingNeighbor_ID)
      VALUES (@neighbor_ID, @referencingNeighbor_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_NeighborsReferenceNeighbors
    @neighbor_ID INT
   ,@referencingNeighbor_ID INT
AS
   DECLARE @Error INT
   DELETE FROM InformationVisualization_NeighborsReferenceNeighbors
      WHERE neighbor_ID = @neighbor_ID
        AND referencingNeighbor_ID = @referencingNeighbor_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.RenderedObjectSetOwnsRenderedObjects'
GO

ALTER TABLE InformationVisualization_RenderedObject ADD renderedObjectSet_ID INT
ALTER TABLE InformationVisualization_RenderedObject ADD
      FOREIGN KEY (renderedObjectSet_ID) REFERENCES InformationVisualization_RenderedObjectSet(_ID)
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObject
    @renderedObjectSet_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_RenderedObject
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObject
    @renderedObjectSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM InformationVisualization_RenderedObject
         WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObjectSet
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT OUTPUT
AS
   SELECT @renderedObjectSet_ID = renderedObjectSet_ID
      FROM InformationVisualization_RenderedObject
      WHERE _ID = @renderedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectSetOwnsRenderedObjects
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET renderedObjectSet_ID = @renderedObjectSet_ID
      WHERE _ID = @renderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_RenderedObject
      SET renderedObjectSet_ID = Null
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
        AND _ID = @renderedObject_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association InformationVisualization.RenderedObjectSetOwnsRenderings'
GO

ALTER TABLE InformationVisualization_Rendering ADD renderedObjectSet_ID INT
ALTER TABLE InformationVisualization_Rendering ADD
      FOREIGN KEY (renderedObjectSet_ID) REFERENCES InformationVisualization_RenderedObjectSet(_ID)
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSetOwnsRenderings_rendering
    @renderedObjectSet_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_Rendering
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderings_rendering
    @renderedObjectSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM InformationVisualization_Rendering
         WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSetOwnsRenderings_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT OUTPUT
AS
   SELECT @renderedObjectSet_ID = renderedObjectSet_ID
      FROM InformationVisualization_Rendering
      WHERE _ID = @rendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_InformationVisualization_RenderedObjectSetOwnsRenderings
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_Rendering
      SET renderedObjectSet_ID = @renderedObjectSet_ID
      WHERE _ID = @rendering_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_InformationVisualization_RenderedObjectSetOwnsRenderings
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   UPDATE InformationVisualization_Rendering
      SET renderedObjectSet_ID = Null
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
        AND _ID = @rendering_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- BusinessNomenclature Associations
--


PRINT 'Association BusinessNomenclature.GlossaryToTaxonomy'
GO

CREATE TABLE BusinessNomenclature_GlossaryToTaxonomy
   (glossary_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Glossary(_ID)
   ,taxonomy_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Taxonomy(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_GlossaryToTaxonomy_glossary
    @taxonomy_ID INT
AS
   SELECT glossary_ID
      FROM BusinessNomenclature_GlossaryToTaxonomy
      WHERE taxonomy_ID = @taxonomy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_GlossaryToTaxonomy_glossary
    @taxonomy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT glossary_ID
         FROM BusinessNomenclature_GlossaryToTaxonomy
         WHERE taxonomy_ID = @taxonomy_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_GlossaryToTaxonomy_taxonomy
    @glossary_ID INT
AS
   SELECT taxonomy_ID
      FROM BusinessNomenclature_GlossaryToTaxonomy
      WHERE glossary_ID = @glossary_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_GlossaryToTaxonomy_taxonomy
    @glossary_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT taxonomy_ID
         FROM BusinessNomenclature_GlossaryToTaxonomy
         WHERE glossary_ID = @glossary_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_GlossaryToTaxonomy
    @glossary_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_GlossaryToTaxonomy (glossary_ID, taxonomy_ID)
      VALUES (@glossary_ID, @taxonomy_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_GlossaryToTaxonomy
    @glossary_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_GlossaryToTaxonomy
      WHERE glossary_ID = @glossary_ID
        AND taxonomy_ID = @taxonomy_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.TermToConcept'
GO

CREATE TABLE BusinessNomenclature_TermToConcept
   (concept_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Concept(_ID)
   ,term_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Term(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_TermToConcept_concept
    @term_ID INT
AS
   SELECT concept_ID
      FROM BusinessNomenclature_TermToConcept
      WHERE term_ID = @term_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_TermToConcept_concept
    @term_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT concept_ID
         FROM BusinessNomenclature_TermToConcept
         WHERE term_ID = @term_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_TermToConcept_term
    @concept_ID INT
AS
   SELECT term_ID
      FROM BusinessNomenclature_TermToConcept
      WHERE concept_ID = @concept_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_TermToConcept_term
    @concept_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT term_ID
         FROM BusinessNomenclature_TermToConcept
         WHERE concept_ID = @concept_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_TermToConcept
    @concept_ID INT
   ,@term_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_TermToConcept (concept_ID, term_ID)
      VALUES (@concept_ID, @term_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_TermToConcept
    @concept_ID INT
   ,@term_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_TermToConcept
      WHERE concept_ID = @concept_ID
        AND term_ID = @term_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.RelatedVocabularyElements'
GO

CREATE TABLE BusinessNomenclature_RelatedVocabularyElements
   (relatedElement_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_VocabularyElement(_ID)
   ,element_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_VocabularyElement(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedVocabularyElements_relatedElement
    @element_ID INT
AS
   SELECT relatedElement_ID
      FROM BusinessNomenclature_RelatedVocabularyElements
      WHERE element_ID = @element_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedVocabularyElements_relatedElement
    @element_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT relatedElement_ID
         FROM BusinessNomenclature_RelatedVocabularyElements
         WHERE element_ID = @element_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedVocabularyElements_element
    @relatedElement_ID INT
AS
   SELECT element_ID
      FROM BusinessNomenclature_RelatedVocabularyElements
      WHERE relatedElement_ID = @relatedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedVocabularyElements_element
    @relatedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT element_ID
         FROM BusinessNomenclature_RelatedVocabularyElements
         WHERE relatedElement_ID = @relatedElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_RelatedVocabularyElements
    @relatedElement_ID INT
   ,@element_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_RelatedVocabularyElements (relatedElement_ID, element_ID)
      VALUES (@relatedElement_ID, @element_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_RelatedVocabularyElements
    @relatedElement_ID INT
   ,@element_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_RelatedVocabularyElements
      WHERE relatedElement_ID = @relatedElement_ID
        AND element_ID = @element_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.RelatedConcepts'
GO

CREATE TABLE BusinessNomenclature_RelatedConcepts
   (relatedConcept_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Concept(_ID)
   ,concept_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Concept(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedConcepts_relatedConcept
    @concept_ID INT
AS
   SELECT relatedConcept_ID
      FROM BusinessNomenclature_RelatedConcepts
      WHERE concept_ID = @concept_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedConcepts_relatedConcept
    @concept_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT relatedConcept_ID
         FROM BusinessNomenclature_RelatedConcepts
         WHERE concept_ID = @concept_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedConcepts_concept
    @relatedConcept_ID INT
AS
   SELECT concept_ID
      FROM BusinessNomenclature_RelatedConcepts
      WHERE relatedConcept_ID = @relatedConcept_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedConcepts_concept
    @relatedConcept_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT concept_ID
         FROM BusinessNomenclature_RelatedConcepts
         WHERE relatedConcept_ID = @relatedConcept_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_RelatedConcepts
    @relatedConcept_ID INT
   ,@concept_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_RelatedConcepts (relatedConcept_ID, concept_ID)
      VALUES (@relatedConcept_ID, @concept_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_RelatedConcepts
    @relatedConcept_ID INT
   ,@concept_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_RelatedConcepts
      WHERE relatedConcept_ID = @relatedConcept_ID
        AND concept_ID = @concept_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.RelatedTerms'
GO

CREATE TABLE BusinessNomenclature_RelatedTerms
   (relatedTerm_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Term(_ID)
   ,term_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Term(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedTerms_relatedTerm
    @term_ID INT
AS
   SELECT relatedTerm_ID
      FROM BusinessNomenclature_RelatedTerms
      WHERE term_ID = @term_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedTerms_relatedTerm
    @term_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT relatedTerm_ID
         FROM BusinessNomenclature_RelatedTerms
         WHERE term_ID = @term_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_RelatedTerms_term
    @relatedTerm_ID INT
AS
   SELECT term_ID
      FROM BusinessNomenclature_RelatedTerms
      WHERE relatedTerm_ID = @relatedTerm_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_RelatedTerms_term
    @relatedTerm_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT term_ID
         FROM BusinessNomenclature_RelatedTerms
         WHERE relatedTerm_ID = @relatedTerm_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_RelatedTerms
    @relatedTerm_ID INT
   ,@term_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_RelatedTerms (relatedTerm_ID, term_ID)
      VALUES (@relatedTerm_ID, @term_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_RelatedTerms
    @relatedTerm_ID INT
   ,@term_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_RelatedTerms
      WHERE relatedTerm_ID = @relatedTerm_ID
        AND term_ID = @term_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.VocabularyElementToModelElement'
GO

CREATE TABLE BusinessNomenclature_VocabularyElementToModelElement
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,vocabularyElement_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_VocabularyElement(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElementToModelElement_modelElement
    @vocabularyElement_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessNomenclature_VocabularyElementToModelElement
      WHERE vocabularyElement_ID = @vocabularyElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElementToModelElement_modelElement
    @vocabularyElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT modelElement_ID
         FROM BusinessNomenclature_VocabularyElementToModelElement
         WHERE vocabularyElement_ID = @vocabularyElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElementToModelElement_vocabularyElement
    @modelElement_ID INT
AS
   SELECT vocabularyElement_ID
      FROM BusinessNomenclature_VocabularyElementToModelElement
      WHERE modelElement_ID = @modelElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElementToModelElement_vocabularyElement
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT vocabularyElement_ID
         FROM BusinessNomenclature_VocabularyElementToModelElement
         WHERE modelElement_ID = @modelElement_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_VocabularyElementToModelElement
    @modelElement_ID INT
   ,@vocabularyElement_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_VocabularyElementToModelElement (modelElement_ID, vocabularyElement_ID)
      VALUES (@modelElement_ID, @vocabularyElement_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_VocabularyElementToModelElement
    @modelElement_ID INT
   ,@vocabularyElement_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_VocabularyElementToModelElement
      WHERE modelElement_ID = @modelElement_ID
        AND vocabularyElement_ID = @vocabularyElement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.SynonymToPreferredTerm'
GO

ALTER TABLE BusinessNomenclature_Term ADD preferredTerm_ID INT
ALTER TABLE BusinessNomenclature_Term ADD
      FOREIGN KEY (preferredTerm_ID) REFERENCES BusinessNomenclature_Term(_ID)
GO

CREATE PROCEDURE Get_BusinessNomenclature_SynonymToPreferredTerm_preferredTerm
    @synonym_ID INT
   ,@preferredTerm_ID INT OUTPUT
AS
   SELECT @preferredTerm_ID = preferredTerm_ID
      FROM BusinessNomenclature_Term
      WHERE _ID = @synonym_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_SynonymToPreferredTerm_synonym
    @preferredTerm_ID INT
AS
   SELECT _ID
      FROM BusinessNomenclature_Term
      WHERE preferredTerm_ID = @preferredTerm_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_SynonymToPreferredTerm_synonym
    @preferredTerm_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM BusinessNomenclature_Term
         WHERE preferredTerm_ID = @preferredTerm_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_SynonymToPreferredTerm
    @preferredTerm_ID INT
   ,@synonym_ID INT
AS
   DECLARE @Error INT
   UPDATE BusinessNomenclature_Term
      SET preferredTerm_ID = @preferredTerm_ID
      WHERE _ID = @synonym_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_SynonymToPreferredTerm
    @preferredTerm_ID INT
   ,@synonym_ID INT
AS
   DECLARE @Error INT
   UPDATE BusinessNomenclature_Term
      SET preferredTerm_ID = Null
      WHERE preferredTerm_ID = @preferredTerm_ID
        AND _ID = @synonym_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.WiderToNarrowerTerm'
GO

CREATE TABLE BusinessNomenclature_WiderToNarrowerTerm
   (widerTerm_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Term(_ID)
   ,narrowerTerm_ID INT NOT NULL FOREIGN KEY REFERENCES BusinessNomenclature_Term(_ID)
   )
GO

CREATE PROCEDURE Get_BusinessNomenclature_WiderToNarrowerTerm_widerTerm
    @narrowerTerm_ID INT
AS
   SELECT widerTerm_ID
      FROM BusinessNomenclature_WiderToNarrowerTerm
      WHERE narrowerTerm_ID = @narrowerTerm_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_WiderToNarrowerTerm_widerTerm
    @narrowerTerm_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT widerTerm_ID
         FROM BusinessNomenclature_WiderToNarrowerTerm
         WHERE narrowerTerm_ID = @narrowerTerm_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_WiderToNarrowerTerm_narrowerTerm
    @widerTerm_ID INT
AS
   SELECT narrowerTerm_ID
      FROM BusinessNomenclature_WiderToNarrowerTerm
      WHERE widerTerm_ID = @widerTerm_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_WiderToNarrowerTerm_narrowerTerm
    @widerTerm_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT narrowerTerm_ID
         FROM BusinessNomenclature_WiderToNarrowerTerm
         WHERE widerTerm_ID = @widerTerm_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_WiderToNarrowerTerm
    @widerTerm_ID INT
   ,@narrowerTerm_ID INT
AS
   DECLARE @Error INT
   INSERT BusinessNomenclature_WiderToNarrowerTerm (widerTerm_ID, narrowerTerm_ID)
      VALUES (@widerTerm_ID, @narrowerTerm_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_WiderToNarrowerTerm
    @widerTerm_ID INT
   ,@narrowerTerm_ID INT
AS
   DECLARE @Error INT
   DELETE FROM BusinessNomenclature_WiderToNarrowerTerm
      WHERE widerTerm_ID = @widerTerm_ID
        AND narrowerTerm_ID = @narrowerTerm_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association BusinessNomenclature.NomenclatureHierarchy'
GO

ALTER TABLE BusinessNomenclature_Nomenclature ADD parent_ID INT
ALTER TABLE BusinessNomenclature_Nomenclature ADD
      FOREIGN KEY (parent_ID) REFERENCES BusinessNomenclature_Nomenclature(_ID)
GO

CREATE PROCEDURE Get_BusinessNomenclature_NomenclatureHierarchy_parent
    @child_ID INT
   ,@parent_ID INT OUTPUT
AS
   SELECT @parent_ID = parent_ID
      FROM BusinessNomenclature_Nomenclature
      WHERE _ID = @child_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_NomenclatureHierarchy_child
    @parent_ID INT
AS
   SELECT _ID
      FROM BusinessNomenclature_Nomenclature
      WHERE parent_ID = @parent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_NomenclatureHierarchy_child
    @parent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM BusinessNomenclature_Nomenclature
         WHERE parent_ID = @parent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_BusinessNomenclature_NomenclatureHierarchy
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   UPDATE BusinessNomenclature_Nomenclature
      SET parent_ID = @parent_ID
      WHERE _ID = @child_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_BusinessNomenclature_NomenclatureHierarchy
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   UPDATE BusinessNomenclature_Nomenclature
      SET parent_ID = Null
      WHERE parent_ID = @parent_ID
        AND _ID = @child_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- WarehouseProcess.Events Associations
--


PRINT 'Association WarehouseProcess.EventUsesCustomCalendar'
GO

ALTER TABLE WarehouseProcess_Events_CustomCalendarEvent ADD customCalendar_ID INT
ALTER TABLE WarehouseProcess_Events_CustomCalendarEvent ADD
      FOREIGN KEY (customCalendar_ID) REFERENCES WarehouseProcess_Events_CustomCalendar(_ID)
GO

CREATE PROCEDURE Get_WarehouseProcess_EventUsesCustomCalendar_customCalendar
    @customCalendarEvent_ID INT
   ,@customCalendar_ID INT OUTPUT
AS
   SELECT @customCalendar_ID = customCalendar_ID
      FROM WarehouseProcess_Events_CustomCalendarEvent
      WHERE _ID = @customCalendarEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_EventUsesCustomCalendar_customCalendarEvent
    @customCalendar_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_Events_CustomCalendarEvent
      WHERE customCalendar_ID = @customCalendar_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_EventUsesCustomCalendar_customCalendarEvent
    @customCalendar_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseProcess_Events_CustomCalendarEvent
         WHERE customCalendar_ID = @customCalendar_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_EventUsesCustomCalendar
    @customCalendar_ID INT
   ,@customCalendarEvent_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_Events_CustomCalendarEvent
      SET customCalendar_ID = @customCalendar_ID
      WHERE _ID = @customCalendarEvent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_EventUsesCustomCalendar
    @customCalendar_ID INT
   ,@customCalendarEvent_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_Events_CustomCalendarEvent
      SET customCalendar_ID = Null
      WHERE customCalendar_ID = @customCalendar_ID
        AND _ID = @customCalendarEvent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseProcess.Event'
GO

ALTER TABLE WarehouseProcess_Events_WarehouseEvent ADD warehouseProcess_ID INT
ALTER TABLE WarehouseProcess_Events_WarehouseEvent ADD
      FOREIGN KEY (warehouseProcess_ID) REFERENCES WarehouseProcess_WarehouseProcess(_ID)
GO

CREATE PROCEDURE Get_WarehouseProcess_Event_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   SELECT @warehouseProcess_ID = warehouseProcess_ID
      FROM WarehouseProcess_Events_WarehouseEvent
      WHERE _ID = @warehouseEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Event_warehouseEvent
    @warehouseProcess_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_Events_WarehouseEvent
      WHERE warehouseProcess_ID = @warehouseProcess_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Event_warehouseEvent
    @warehouseProcess_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseProcess_Events_WarehouseEvent
         WHERE warehouseProcess_ID = @warehouseProcess_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_Event
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_Events_WarehouseEvent
      SET warehouseProcess_ID = @warehouseProcess_ID
      WHERE _ID = @warehouseEvent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_Event
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_Events_WarehouseEvent
      SET warehouseProcess_ID = Null
      WHERE warehouseProcess_ID = @warehouseProcess_ID
        AND _ID = @warehouseEvent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseProcess.TriggeringProcess'
GO

CREATE TABLE WarehouseProcess_TriggeringProcess
   (triggeringWP_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseProcess_WarehouseProcess(_ID)
   ,internalEvent_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseProcess_Events_InternalEvent(_ID)
   )
GO

CREATE PROCEDURE Get_WarehouseProcess_TriggeringProcess_triggeringWP
    @internalEvent_ID INT
AS
   SELECT triggeringWP_ID
      FROM WarehouseProcess_TriggeringProcess
      WHERE internalEvent_ID = @internalEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_TriggeringProcess_triggeringWP
    @internalEvent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT triggeringWP_ID
         FROM WarehouseProcess_TriggeringProcess
         WHERE internalEvent_ID = @internalEvent_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_TriggeringProcess_internalEvent
    @triggeringWP_ID INT
AS
   SELECT internalEvent_ID
      FROM WarehouseProcess_TriggeringProcess
      WHERE triggeringWP_ID = @triggeringWP_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_TriggeringProcess_internalEvent
    @triggeringWP_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT internalEvent_ID
         FROM WarehouseProcess_TriggeringProcess
         WHERE triggeringWP_ID = @triggeringWP_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_TriggeringProcess
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   INSERT WarehouseProcess_TriggeringProcess (triggeringWP_ID, internalEvent_ID)
      VALUES (@triggeringWP_ID, @internalEvent_ID)
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_TriggeringProcess
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   DELETE FROM WarehouseProcess_TriggeringProcess
      WHERE triggeringWP_ID = @triggeringWP_ID
        AND internalEvent_ID = @internalEvent_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseProcess.WarehouseStepRunsTransformationStep'
GO

ALTER TABLE WarehouseProcess_WarehouseStep ADD transformationStep_ID INT
ALTER TABLE WarehouseProcess_WarehouseStep ADD
      FOREIGN KEY (transformationStep_ID) REFERENCES Transformation_TransformationStep(_ID)
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStepRunsTransformationStep_transformationStep
    @warehouseStep_ID INT
   ,@transformationStep_ID INT OUTPUT
AS
   SELECT @transformationStep_ID = transformationStep_ID
      FROM WarehouseProcess_WarehouseStep
      WHERE _ID = @warehouseStep_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStepRunsTransformationStep_warehouseStep
    @transformationStep_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_WarehouseStep
      WHERE transformationStep_ID = @transformationStep_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStepRunsTransformationStep_warehouseStep
    @transformationStep_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseProcess_WarehouseStep
         WHERE transformationStep_ID = @transformationStep_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_WarehouseStepRunsTransformationStep
    @transformationStep_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_WarehouseStep
      SET transformationStep_ID = @transformationStep_ID
      WHERE _ID = @warehouseStep_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_WarehouseStepRunsTransformationStep
    @transformationStep_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_WarehouseStep
      SET transformationStep_ID = Null
      WHERE transformationStep_ID = @transformationStep_ID
        AND _ID = @warehouseStep_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseProcess.WarehouseActivityStep'
GO

CREATE TABLE WarehouseProcess_WarehouseActivityStep
   (warehouseActivity_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseProcess_WarehouseActivity(_ID)
   ,warehouseStep_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseProcess_WarehouseStep(_ID)
   ,warehouseStep_Ordinal INT
   )
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivityStep_warehouseActivity
    @warehouseStep_ID INT
   ,@warehouseActivity_ID INT OUTPUT
AS
   SELECT @warehouseActivity_ID = warehouseActivity_ID
      FROM WarehouseProcess_WarehouseActivityStep
      WHERE warehouseStep_ID = @warehouseStep_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivityStep_warehouseStep
    @warehouseActivity_ID INT
AS
   SELECT warehouseStep_ID
      FROM WarehouseProcess_WarehouseActivityStep
      WHERE warehouseActivity_ID = @warehouseActivity_ID
      ORDER BY warehouseStep_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivityStep_warehouseStep
    @warehouseActivity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT warehouseStep_ID
         FROM WarehouseProcess_WarehouseActivityStep
         WHERE warehouseActivity_ID = @warehouseActivity_ID
         ORDER BY warehouseStep_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseProcess_WarehouseActivityStep
    @warehouseActivity_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(warehouseStep_Ordinal)
      FROM WarehouseProcess_WarehouseActivityStep
      WHERE warehouseStep_ID = @warehouseStep_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT WarehouseProcess_WarehouseActivityStep (warehouseActivity_ID, warehouseStep_ID, warehouseStep_Ordinal)
         VALUES (@warehouseActivity_ID, @warehouseStep_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_WarehouseActivityStep
    @warehouseActivity_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   DELETE FROM WarehouseProcess_WarehouseActivityStep
      WHERE warehouseActivity_ID = @warehouseActivity_ID
        AND warehouseStep_ID = @warehouseStep_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseProcess.WarehouseActivityRunsTransformationActivity'
GO

ALTER TABLE WarehouseProcess_WarehouseActivity ADD transformationActivity_ID INT
ALTER TABLE WarehouseProcess_WarehouseActivity ADD
      FOREIGN KEY (transformationActivity_ID) REFERENCES Transformation_TransformationActivity(_ID)
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivityRunsTransformationActivity_warehouseActivity
    @transformationActivity_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_WarehouseActivity
      WHERE transformationActivity_ID = @transformationActivity_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivityRunsTransformationActivity_warehouseActivity
    @transformationActivity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseProcess_WarehouseActivity
         WHERE transformationActivity_ID = @transformationActivity_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivityRunsTransformationActivity_transformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT OUTPUT
AS
   SELECT @transformationActivity_ID = transformationActivity_ID
      FROM WarehouseProcess_WarehouseActivity
      WHERE _ID = @warehouseActivity_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_WarehouseProcess_WarehouseActivityRunsTransformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_WarehouseActivity
      SET transformationActivity_ID = @transformationActivity_ID
      WHERE _ID = @warehouseActivity_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseProcess_WarehouseActivityRunsTransformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseProcess_WarehouseActivity
      SET transformationActivity_ID = Null
      WHERE transformationActivity_ID = @transformationActivity_ID
        AND _ID = @warehouseActivity_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- WarehouseOperation Associations
--


PRINT 'Association WarehouseOperation.TransformationStepExecutions'
GO

ALTER TABLE WarehouseOperation_StepExecution ADD transformationStep_ID INT
ALTER TABLE WarehouseOperation_StepExecution ADD
      FOREIGN KEY (transformationStep_ID) REFERENCES Transformation_TransformationStep(_ID)
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationStepExecutions_execution
    @transformationStep_ID INT
AS
   SELECT _ID
      FROM WarehouseOperation_StepExecution
      WHERE transformationStep_ID = @transformationStep_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationStepExecutions_execution
    @transformationStep_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseOperation_StepExecution
         WHERE transformationStep_ID = @transformationStep_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationStepExecutions_transformationStep
    @execution_ID INT
   ,@transformationStep_ID INT OUTPUT
AS
   SELECT @transformationStep_ID = transformationStep_ID
      FROM WarehouseOperation_StepExecution
      WHERE _ID = @execution_ID
   RETURN @@Error
GO

CREATE PROCEDURE Create_WarehouseOperation_TransformationStepExecutions
    @execution_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET transformationStep_ID = @transformationStep_ID
      WHERE _ID = @execution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_TransformationStepExecutions
    @execution_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET transformationStep_ID = Null
      WHERE transformationStep_ID = @transformationStep_ID
        AND _ID = @execution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseOperation.TransformationActivityExecutions'
GO

ALTER TABLE WarehouseOperation_ActivityExecution ADD transformationActivity_ID INT
ALTER TABLE WarehouseOperation_ActivityExecution ADD
      FOREIGN KEY (transformationActivity_ID) REFERENCES Transformation_TransformationActivity(_ID)
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationActivityExecutions_transformationActivity
    @execution_ID INT
   ,@transformationActivity_ID INT OUTPUT
AS
   SELECT @transformationActivity_ID = transformationActivity_ID
      FROM WarehouseOperation_ActivityExecution
      WHERE _ID = @execution_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationActivityExecutions_execution
    @transformationActivity_ID INT
AS
   SELECT _ID
      FROM WarehouseOperation_ActivityExecution
      WHERE transformationActivity_ID = @transformationActivity_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationActivityExecutions_execution
    @transformationActivity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseOperation_ActivityExecution
         WHERE transformationActivity_ID = @transformationActivity_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_TransformationActivityExecutions
    @transformationActivity_ID INT
   ,@execution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_ActivityExecution
      SET transformationActivity_ID = @transformationActivity_ID
      WHERE _ID = @execution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_TransformationActivityExecutions
    @transformationActivity_ID INT
   ,@execution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_ActivityExecution
      SET transformationActivity_ID = Null
      WHERE transformationActivity_ID = @transformationActivity_ID
        AND _ID = @execution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseOperation.ActivityStepExecutions'
GO

ALTER TABLE WarehouseOperation_StepExecution ADD activityExecution_ID INT
ALTER TABLE WarehouseOperation_StepExecution ADD
      FOREIGN KEY (activityExecution_ID) REFERENCES WarehouseOperation_ActivityExecution(_ID)
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityStepExecutions_activityExecution
    @stepExecution_ID INT
   ,@activityExecution_ID INT OUTPUT
AS
   SELECT @activityExecution_ID = activityExecution_ID
      FROM WarehouseOperation_StepExecution
      WHERE _ID = @stepExecution_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityStepExecutions_stepExecution
    @activityExecution_ID INT
AS
   SELECT _ID
      FROM WarehouseOperation_StepExecution
      WHERE activityExecution_ID = @activityExecution_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityStepExecutions_stepExecution
    @activityExecution_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseOperation_StepExecution
         WHERE activityExecution_ID = @activityExecution_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_ActivityStepExecutions
    @activityExecution_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET activityExecution_ID = @activityExecution_ID
      WHERE _ID = @stepExecution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_ActivityStepExecutions
    @activityExecution_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET activityExecution_ID = Null
      WHERE activityExecution_ID = @activityExecution_ID
        AND _ID = @stepExecution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseOperation.ModelElementMeasurement'
GO

CREATE TABLE WarehouseOperation_ModelElementMeasurement
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,measurement_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseOperation_Measurement(_ID)
   ,measurement_Ordinal INT
   )
GO

CREATE PROCEDURE Get_WarehouseOperation_ModelElementMeasurement_modelElement
    @measurement_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   SELECT @modelElement_ID = modelElement_ID
      FROM WarehouseOperation_ModelElementMeasurement
      WHERE measurement_ID = @measurement_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ModelElementMeasurement_measurement
    @modelElement_ID INT
AS
   SELECT measurement_ID
      FROM WarehouseOperation_ModelElementMeasurement
      WHERE modelElement_ID = @modelElement_ID
      ORDER BY measurement_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ModelElementMeasurement_measurement
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT measurement_ID
         FROM WarehouseOperation_ModelElementMeasurement
         WHERE modelElement_ID = @modelElement_ID
         ORDER BY measurement_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_ModelElementMeasurement
    @modelElement_ID INT
   ,@measurement_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(measurement_Ordinal)
      FROM WarehouseOperation_ModelElementMeasurement
      WHERE measurement_ID = @measurement_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_ModelElementMeasurement (modelElement_ID, measurement_ID, measurement_Ordinal)
         VALUES (@modelElement_ID, @measurement_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_ModelElementMeasurement
    @modelElement_ID INT
   ,@measurement_ID INT
AS
   DECLARE @Error INT
   DELETE FROM WarehouseOperation_ModelElementMeasurement
      WHERE modelElement_ID = @modelElement_ID
        AND measurement_ID = @measurement_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseOperation.ModelElementChangeRequest'
GO

CREATE TABLE WarehouseOperation_ModelElementChangeRequest
   (modelElement_ID INT NOT NULL FOREIGN KEY REFERENCES Core_ModelElement(_ID)
   ,changeRequest_ID INT NOT NULL FOREIGN KEY REFERENCES WarehouseOperation_ChangeRequest(_ID)
   ,changeRequest_Ordinal INT
   )
GO

CREATE PROCEDURE Get_WarehouseOperation_ModelElementChangeRequest_modelElement
    @changeRequest_ID INT
AS
   SELECT modelElement_ID
      FROM WarehouseOperation_ModelElementChangeRequest
      WHERE changeRequest_ID = @changeRequest_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ModelElementChangeRequest_modelElement
    @changeRequest_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT modelElement_ID
         FROM WarehouseOperation_ModelElementChangeRequest
         WHERE changeRequest_ID = @changeRequest_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ModelElementChangeRequest_changeRequest
    @modelElement_ID INT
AS
   SELECT changeRequest_ID
      FROM WarehouseOperation_ModelElementChangeRequest
      WHERE modelElement_ID = @modelElement_ID
      ORDER BY changeRequest_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ModelElementChangeRequest_changeRequest
    @modelElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT changeRequest_ID
         FROM WarehouseOperation_ModelElementChangeRequest
         WHERE modelElement_ID = @modelElement_ID
         ORDER BY changeRequest_Ordinal
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_ModelElementChangeRequest
    @modelElement_ID INT
   ,@changeRequest_ID INT
AS
   DECLARE @Error INT
   DECLARE @MaxOrdinal INT
   SELECT @MaxOrdinal = MAX(changeRequest_Ordinal)
      FROM WarehouseOperation_ModelElementChangeRequest
      WHERE changeRequest_ID = @changeRequest_ID
   SELECT @Error = @@Error
   IF @Error = 0 AND @MaxOrdinal IS NULL
   BEGIN
      SET @MaxOrdinal = 0
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      INSERT WarehouseOperation_ModelElementChangeRequest (modelElement_ID, changeRequest_ID, changeRequest_Ordinal)
         VALUES (@modelElement_ID, @changeRequest_ID, @MaxOrdinal + 1)
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_ModelElementChangeRequest
    @modelElement_ID INT
   ,@changeRequest_ID INT
AS
   DECLARE @Error INT
   DELETE FROM WarehouseOperation_ModelElementChangeRequest
      WHERE modelElement_ID = @modelElement_ID
        AND changeRequest_ID = @changeRequest_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'Association WarehouseOperation.StepExecutionCallAction'
GO

ALTER TABLE WarehouseOperation_StepExecution ADD callAction_ID INT
ALTER TABLE WarehouseOperation_StepExecution ADD
      FOREIGN KEY (callAction_ID) REFERENCES Behavioral_CallAction(_ID)
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecutionCallAction_callAction
    @stepExecution_ID INT
   ,@callAction_ID INT OUTPUT
AS
   SELECT @callAction_ID = callAction_ID
      FROM WarehouseOperation_StepExecution
      WHERE _ID = @stepExecution_ID
   RETURN @@Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecutionCallAction_stepExecution
    @callAction_ID INT
AS
   SELECT _ID
      FROM WarehouseOperation_StepExecution
      WHERE callAction_ID = @callAction_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_StepExecutionCallAction_stepExecution
    @callAction_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR
      SELECT _ID
         FROM WarehouseOperation_StepExecution
         WHERE callAction_ID = @callAction_ID
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   RETURN @Error
GO

CREATE PROCEDURE Create_WarehouseOperation_StepExecutionCallAction
    @callAction_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET callAction_ID = @callAction_ID
      WHERE _ID = @stepExecution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Delete_WarehouseOperation_StepExecutionCallAction
    @callAction_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   UPDATE WarehouseOperation_StepExecution
      SET callAction_ID = Null
      WHERE callAction_ID = @callAction_ID
        AND _ID = @stepExecution_ID
   SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Core References
--


PRINT 'References Core.ModelElement'
GO

CREATE PROCEDURE Get_Core_ModelElement_clientDependency
    @client_ID INT
AS
   SELECT clientDependency_ID
      FROM Core_DependencyClient
      WHERE client_ID = @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ModelElement_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_ModelElement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_ModelElement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_ModelElement_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   DECLARE @clientDependency_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT clientDependency_ID
            FROM Core_DependencyClient
            WHERE client_ID = @client_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @client_ID, @clientDependency_ID
         FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ModelElement_constraint
    @constrainedElement_ID INT
AS
   SELECT constraint_ID
      FROM Core_ElementConstraint
      WHERE constrainedElement_ID = @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ModelElement_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementConstraint_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_ModelElement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementConstraint @constrainedElement_ID = @constrainedElement_ID, @constraint_ID = @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_ModelElement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementConstraint @constrainedElement_ID = @constrainedElement_ID, @constraint_ID = @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_ModelElement_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @constraint_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT constraint_ID
            FROM Core_ElementConstraint
            WHERE constrainedElement_ID = @constrainedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @constraint_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementConstraint @constrainedElement_ID, @constraint_ID
         FETCH NEXT FROM @_Cursor INTO @constraint_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ModelElement_importer
    @importedElement_ID INT
AS
   SELECT importer_ID
      FROM Core_ImportedElements
      WHERE importedElement_ID = @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_ModelElement_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ImportedElements_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_ModelElement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ImportedElements @importedElement_ID = @importedElement_ID, @importer_ID = @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_ModelElement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ImportedElements @importedElement_ID = @importedElement_ID, @importer_ID = @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_ModelElement_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @importer_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT importer_ID
            FROM Core_ImportedElements
            WHERE importedElement_ID = @importedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @importer_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ImportedElements @importedElement_ID, @importer_ID
         FETCH NEXT FROM @_Cursor INTO @importer_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_ModelElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_ModelElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_ModelElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_ModelElement_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_ModelElement
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_ModelElement
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'References Core.Namespace'
GO

CREATE PROCEDURE Get_Core_Namespace_ownedElement
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Namespace_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Namespace_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Namespace_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Namespace_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Namespace
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Namespace
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Namespace_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Namespace_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Namespace_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Namespace_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Namespace_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Namespace_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Namespace_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Namespace_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Namespace_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Namespace_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Namespace_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Namespace_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Namespace_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Namespace_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Namespace_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Namespace_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Classifier'
GO

CREATE PROCEDURE Get_Core_Classifier_feature
    @owner_ID INT
AS
   SELECT feature_ID
      FROM Core_ClassifierFeature
      WHERE owner_ID = @owner_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ClassifierFeature_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ClassifierFeature @owner_ID = @owner_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ClassifierFeature @owner_ID = @owner_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Classifier
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM Core_ClassifierFeature
            WHERE owner_ID = @owner_ID
            ORDER BY feature_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ClassifierFeature @owner_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Classifier
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Classifier_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Classifier_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Classifier_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Classifier_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Classifier_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Class_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Class_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Class_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Class_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Class_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_DataType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_DataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_DataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_DataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_DataType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Package'
GO

CREATE PROCEDURE Get_Core_Package_importedElement
    @importer_ID INT
AS
   SELECT importedElement_ID
      FROM Core_ImportedElements
      WHERE importer_ID = @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ImportedElements_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ImportedElements @importer_ID = @importer_ID, @importedElement_ID = @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ImportedElements @importer_ID = @importer_ID, @importedElement_ID = @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   DECLARE @importedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Package
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT importedElement_ID
            FROM Core_ImportedElements
            WHERE importer_ID = @importer_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @importedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ImportedElements @importer_ID, @importedElement_ID
         FETCH NEXT FROM @_Cursor INTO @importedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Package
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Package_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Package_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Package_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Package_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Package_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Subsystem_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Subsystem_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Subsystem_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Subsystem_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Subsystem_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Model_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Model_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Model_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Model_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Model_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Feature'
GO

CREATE PROCEDURE Get_Core_Feature_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ClassifierFeature_owner @feature_ID, @owner_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Feature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ClassifierFeature @feature_ID = @feature_ID, @owner_ID = @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Feature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ClassifierFeature @feature_ID = @feature_ID, @owner_ID = @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Feature_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   DECLARE @owner_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Feature
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT owner_ID
            FROM Core_ClassifierFeature
            WHERE feature_ID = @feature_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @owner_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ClassifierFeature @feature_ID, @owner_ID
         FETCH NEXT FROM @_Cursor INTO @owner_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Feature
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Feature_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Feature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Feature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Feature_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Feature_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Feature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Feature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Feature_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Feature_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Feature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Feature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Feature_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Feature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Feature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Feature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Feature_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.StructuralFeature'
GO

CREATE PROCEDURE Get_Core_StructuralFeature_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StructuralFeatureType_type @structuralFeature_ID, @type_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_StructuralFeatureType @structuralFeature_ID = @structuralFeature_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_StructuralFeatureType @structuralFeature_ID = @structuralFeature_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   DECLARE @type_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Str_53705EE420F1
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT type_ID
            FROM Core_StructuralFeature
            WHERE _ID = @structuralFeature_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @type_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_StructuralFeatureType @structuralFeature_ID, @type_ID
         FETCH NEXT FROM @_Cursor INTO @type_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Str_53705EE420F1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StructuralFeature_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StructuralFeature_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_StructuralFeature_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_StructuralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_StructuralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_StructuralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_StructuralFeature_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Attribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Attribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Attribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Attribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Constraint'
GO

CREATE PROCEDURE Get_Core_Constraint_constrainedElement
    @constraint_ID INT
AS
   SELECT constrainedElement_ID
      FROM Core_ElementConstraint
      WHERE constraint_ID = @constraint_ID
      ORDER BY constrainedElement_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Constraint_constrainedElement
    @constraint_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementConstraint_constrainedElement @constraint_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Constraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementConstraint @constraint_ID = @constraint_ID, @constrainedElement_ID = @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Constraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementConstraint @constraint_ID = @constraint_ID, @constrainedElement_ID = @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Constraint_constrainedElement
   @constraint_ID INT
AS
   DECLARE @Error INT
   DECLARE @constrainedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Constraint
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT constrainedElement_ID
            FROM Core_ElementConstraint
            WHERE constraint_ID = @constraint_ID
            ORDER BY constrainedElement_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @constrainedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementConstraint @constraint_ID, @constrainedElement_ID
         FETCH NEXT FROM @_Cursor INTO @constrainedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Constraint
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Constraint_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Constraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Constraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Constraint_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Constraint_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Constraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Constraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Constraint_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Constraint_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Constraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Constraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Constraint_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Constraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Constraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Constraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Constraint_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Dependency'
GO

CREATE PROCEDURE Get_Core_Dependency_client
    @clientDependency_ID INT
AS
   SELECT client_ID
      FROM Core_DependencyClient
      WHERE clientDependency_ID = @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency_client
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_client
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @client_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Dependency
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT client_ID
            FROM Core_DependencyClient
            WHERE clientDependency_ID = @clientDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @client_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID, @client_ID
         FETCH NEXT FROM @_Cursor INTO @client_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Dependency
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_supplier
    @supplierDependency_ID INT
AS
   SELECT supplier_ID
      FROM Core_DependencySupplier
      WHERE supplierDependency_ID = @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency_supplier
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencySupplier_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_supplier
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @supplier_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Dependency
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT supplier_ID
            FROM Core_DependencySupplier
            WHERE supplierDependency_ID = @supplierDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @supplier_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID, @supplier_ID
         FETCH NEXT FROM @_Cursor INTO @supplier_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Dependency
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Dependency_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Dependency_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Dependency_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Dependency_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Dependency_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.Multiplicity'
GO

CREATE PROCEDURE Get_Core_Multiplicity_range
    @multiplicity_ID INT
AS
   SELECT _ID
      FROM Core_MultiplicityRange
      WHERE multiplicity_ID = @multiplicity_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Multiplicity_range
    @multiplicity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_RangeMultiplicity_range @multiplicity_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Multiplicity_range
    @multiplicity_ID INT
   ,@range_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_RangeMultiplicity @multiplicity_ID = @multiplicity_ID, @range_ID = @range_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Multiplicity_range
    @multiplicity_ID INT
   ,@range_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_RangeMultiplicity @multiplicity_ID = @multiplicity_ID, @range_ID = @range_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Multiplicity_range
   @multiplicity_ID INT
AS
   DECLARE @Error INT
   DECLARE @range_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Multiplicity
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_MultiplicityRange
            WHERE multiplicity_ID = @multiplicity_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @range_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_RangeMultiplicity @multiplicity_ID, @range_ID
         FETCH NEXT FROM @_Cursor INTO @range_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Multiplicity
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'References Core.MultiplicityRange'
GO

CREATE PROCEDURE Get_Core_MultiplicityRange_multiplicity
    @range_ID INT
   ,@multiplicity_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_RangeMultiplicity_multiplicity @range_ID, @multiplicity_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_MultiplicityRange_multiplicity
    @range_ID INT
   ,@multiplicity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_RangeMultiplicity @range_ID = @range_ID, @multiplicity_ID = @multiplicity_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_MultiplicityRange_multiplicity
    @range_ID INT
   ,@multiplicity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_RangeMultiplicity @range_ID = @range_ID, @multiplicity_ID = @multiplicity_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_MultiplicityRange_multiplicity
   @range_ID INT
AS
   DECLARE @Error INT
   DECLARE @multiplicity_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Mul_5A2F9BB9B701
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT multiplicity_ID
            FROM Core_MultiplicityRange
            WHERE _ID = @range_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @multiplicity_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_RangeMultiplicity @range_ID, @multiplicity_ID
         FETCH NEXT FROM @_Cursor INTO @multiplicity_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Mul_5A2F9BB9B701
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO


PRINT 'References Core.Stereotype'
GO

CREATE PROCEDURE Get_Core_Stereotype_extendedElement
    @stereotype_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE stereotype_ID = @stereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_extendedElement
    @stereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_StereotypedElement_extendedElement @stereotype_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_extendedElement
    @stereotype_ID INT
   ,@extendedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_StereotypedElement @stereotype_ID = @stereotype_ID, @extendedElement_ID = @extendedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_extendedElement
    @stereotype_ID INT
   ,@extendedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_StereotypedElement @stereotype_ID = @stereotype_ID, @extendedElement_ID = @extendedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_extendedElement
   @stereotype_ID INT
AS
   DECLARE @Error INT
   DECLARE @extendedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE stereotype_ID = @stereotype_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @extendedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_StereotypedElement @stereotype_ID, @extendedElement_ID
         FETCH NEXT FROM @_Cursor INTO @extendedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_requiredTag
    @stereotype_ID INT
AS
   SELECT _ID
      FROM Core_TaggedValue
      WHERE stereotype_ID = @stereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_requiredTag
    @stereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_StereotypeTaggedValues_requiredTag @stereotype_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_requiredTag
    @stereotype_ID INT
   ,@requiredTag_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_StereotypeTaggedValues @stereotype_ID = @stereotype_ID, @requiredTag_ID = @requiredTag_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_requiredTag
    @stereotype_ID INT
   ,@requiredTag_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_StereotypeTaggedValues @stereotype_ID = @stereotype_ID, @requiredTag_ID = @requiredTag_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_requiredTag
   @stereotype_ID INT
AS
   DECLARE @Error INT
   DECLARE @requiredTag_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_TaggedValue
            WHERE stereotype_ID = @stereotype_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @requiredTag_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_StereotypeTaggedValues @stereotype_ID, @requiredTag_ID
         FETCH NEXT FROM @_Cursor INTO @requiredTag_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_stereotypeConstraint
    @constrainedStereotype_ID INT
AS
   SELECT _ID
      FROM Core_Constraint
      WHERE constrainedStereotype_ID = @constrainedStereotype_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_stereotypeConstraint
    @constrainedStereotype_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_StereotypeConstraints_stereotypeConstraint @constrainedStereotype_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_stereotypeConstraint
    @constrainedStereotype_ID INT
   ,@stereotypeConstraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_StereotypeConstraints @constrainedStereotype_ID = @constrainedStereotype_ID, @stereotypeConstraint_ID = @stereotypeConstraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_stereotypeConstraint
    @constrainedStereotype_ID INT
   ,@stereotypeConstraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_StereotypeConstraints @constrainedStereotype_ID = @constrainedStereotype_ID, @stereotypeConstraint_ID = @stereotypeConstraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_stereotypeConstraint
   @constrainedStereotype_ID INT
AS
   DECLARE @Error INT
   DECLARE @stereotypeConstraint_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_Stereotype
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_Constraint
            WHERE constrainedStereotype_ID = @constrainedStereotype_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @stereotypeConstraint_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_StereotypeConstraints @constrainedStereotype_ID, @stereotypeConstraint_ID
         FETCH NEXT FROM @_Cursor INTO @stereotypeConstraint_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_Stereotype
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Core_Stereotype_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_Stereotype_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_Stereotype_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_Stereotype_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_Stereotype_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Core.TaggedValue'
GO

CREATE PROCEDURE Get_Core_TaggedValue_modelElement
    @taggedValue_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_TaggedElement_modelElement @taggedValue_ID, @modelElement_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_TaggedValue_modelElement
    @taggedValue_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_TaggedElement @taggedValue_ID = @taggedValue_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_TaggedValue_modelElement
    @taggedValue_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_TaggedElement @taggedValue_ID = @taggedValue_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_TaggedValue_modelElement
   @taggedValue_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_TaggedValue
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM Core_TaggedValue
            WHERE _ID = @taggedValue_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_TaggedElement @taggedValue_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_TaggedValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Core_TaggedValue_stereotype
    @requiredTag_ID INT
   ,@stereotype_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_StereotypeTaggedValues_stereotype @requiredTag_ID, @stereotype_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Core_TaggedValue_stereotype
    @requiredTag_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_StereotypeTaggedValues @requiredTag_ID = @requiredTag_ID, @stereotype_ID = @stereotype_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Core_TaggedValue_stereotype
    @requiredTag_ID INT
   ,@stereotype_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_StereotypeTaggedValues @requiredTag_ID = @requiredTag_ID, @stereotype_ID = @stereotype_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Core_TaggedValue_stereotype
   @requiredTag_ID INT
AS
   DECLARE @Error INT
   DECLARE @stereotype_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Core_TaggedValue
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT stereotype_ID
            FROM Core_TaggedValue
            WHERE _ID = @requiredTag_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @stereotype_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_StereotypeTaggedValues @requiredTag_ID, @stereotype_ID
         FETCH NEXT FROM @_Cursor INTO @stereotype_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Core_TaggedValue
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO


--
-- Behavioral References
--


PRINT 'References Behavioral.Argument'
GO

CREATE PROCEDURE Get_Behavioral_Argument_callAction
    @actualArgument_ID INT
   ,@callAction_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_CallArguments_callAction @actualArgument_ID, @callAction_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Argument_callAction
    @actualArgument_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_CallArguments @actualArgument_ID = @actualArgument_ID, @callAction_ID = @callAction_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Argument_callAction
    @actualArgument_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_CallArguments @actualArgument_ID = @actualArgument_ID, @callAction_ID = @callAction_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Argument_callAction
   @actualArgument_ID INT
AS
   DECLARE @Error INT
   DECLARE @callAction_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Argument
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT callAction_ID
            FROM Behavioral_CallArguments
            WHERE actualArgument_ID = @actualArgument_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @callAction_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_CallArguments @actualArgument_ID, @callAction_ID
         FETCH NEXT FROM @_Cursor INTO @callAction_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Argument
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Argument_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Argument_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Argument_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Argument_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Argument_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Argument_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Argument_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Argument_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Argument_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Argument_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Argument_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Argument_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Argument_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Argument_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Argument_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Argument_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.BehavioralFeature'
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_parameter
    @behavioralFeature_ID INT
AS
   SELECT parameter_ID
      FROM Behavioral_BehavioralFeatureParameter
      WHERE behavioralFeature_ID = @behavioralFeature_ID
      ORDER BY parameter_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeature_parameter
    @behavioralFeature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_BehavioralFeatureParameter_parameter @behavioralFeature_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_BehavioralFeatureParameter @behavioralFeature_ID = @behavioralFeature_ID, @parameter_ID = @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_BehavioralFeatureParameter @behavioralFeature_ID = @behavioralFeature_ID, @parameter_ID = @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_parameter
   @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   DECLARE @parameter_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavior_62247B954617
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT parameter_ID
            FROM Behavioral_BehavioralFeatureParameter
            WHERE behavioralFeature_ID = @behavioralFeature_ID
            ORDER BY parameter_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @parameter_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_BehavioralFeatureParameter @behavioralFeature_ID, @parameter_ID
         FETCH NEXT FROM @_Cursor INTO @parameter_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavior_62247B954617
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeature_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeature_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_BehavioralFeature_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_BehavioralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_BehavioralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_BehavioralFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_BehavioralFeature_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.CallAction'
GO

CREATE PROCEDURE Get_Behavioral_CallAction_operation
    @callAction_ID INT
   ,@operation_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_CalledOperation_operation @callAction_ID, @operation_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_operation
    @callAction_ID INT
   ,@operation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_CalledOperation @callAction_ID = @callAction_ID, @operation_ID = @operation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_operation
    @callAction_ID INT
   ,@operation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_CalledOperation @callAction_ID = @callAction_ID, @operation_ID = @operation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_operation
   @callAction_ID INT
AS
   DECLARE @Error INT
   DECLARE @operation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_CallAction
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT operation_ID
            FROM Behavioral_CallAction
            WHERE _ID = @callAction_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @operation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_CalledOperation @callAction_ID, @operation_ID
         FETCH NEXT FROM @_Cursor INTO @operation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_CallAction
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_actualArgument
    @callAction_ID INT
AS
   SELECT actualArgument_ID
      FROM Behavioral_CallArguments
      WHERE callAction_ID = @callAction_ID
      ORDER BY actualArgument_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallAction_actualArgument
    @callAction_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_CallArguments_actualArgument @callAction_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_actualArgument
    @callAction_ID INT
   ,@actualArgument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_CallArguments @callAction_ID = @callAction_ID, @actualArgument_ID = @actualArgument_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_actualArgument
    @callAction_ID INT
   ,@actualArgument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_CallArguments @callAction_ID = @callAction_ID, @actualArgument_ID = @actualArgument_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_actualArgument
   @callAction_ID INT
AS
   DECLARE @Error INT
   DECLARE @actualArgument_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_CallAction
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT actualArgument_ID
            FROM Behavioral_CallArguments
            WHERE callAction_ID = @callAction_ID
            ORDER BY actualArgument_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @actualArgument_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_CallArguments @callAction_ID, @actualArgument_ID
         FETCH NEXT FROM @_Cursor INTO @actualArgument_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_CallAction
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallAction_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallAction_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_CallAction_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_CallAction_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_CallAction_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_CallAction_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_CallAction_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.Event'
GO

CREATE PROCEDURE Get_Behavioral_Event_parameter
    @event_ID INT
AS
   SELECT parameter_ID
      FROM Behavioral_EventParameter
      WHERE event_ID = @event_ID
      ORDER BY parameter_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Event_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_EventParameter_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Event_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_EventParameter @event_ID = @event_ID, @parameter_ID = @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Event_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_EventParameter @event_ID = @event_ID, @parameter_ID = @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Event_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   DECLARE @parameter_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Event
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT parameter_ID
            FROM Behavioral_EventParameter
            WHERE event_ID = @event_ID
            ORDER BY parameter_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @parameter_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_EventParameter @event_ID, @parameter_ID
         FETCH NEXT FROM @_Cursor INTO @parameter_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Event
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Event_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Event_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Event_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Event_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Event_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Event_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Event_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Event_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Event_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Event_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Event_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Event_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Event_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Event_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Event_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Event_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Interface_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Interface_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Interface_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Interface_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Interface_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.Method'
GO

CREATE PROCEDURE Get_Behavioral_Method_specification
    @method_ID INT
   ,@specification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_OperationMethod_specification @method_ID, @specification_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_specification
    @method_ID INT
   ,@specification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_OperationMethod @method_ID = @method_ID, @specification_ID = @specification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_specification
    @method_ID INT
   ,@specification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_OperationMethod @method_ID = @method_ID, @specification_ID = @specification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_specification
   @method_ID INT
AS
   DECLARE @Error INT
   DECLARE @specification_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Method
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT specification_ID
            FROM Behavioral_Method
            WHERE _ID = @method_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @specification_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_OperationMethod @method_ID, @specification_ID
         FETCH NEXT FROM @_Cursor INTO @specification_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Method
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_parameter
    @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Method_parameter
    @behavioralFeature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_parameter
   @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Method_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Method_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Method_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Method_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Method_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Method_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Method_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.Operation'
GO

CREATE PROCEDURE Get_Behavioral_Operation_method
    @specification_ID INT
AS
   SELECT _ID
      FROM Behavioral_Method
      WHERE specification_ID = @specification_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation_method
    @specification_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_OperationMethod_method @specification_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_method
    @specification_ID INT
   ,@method_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_OperationMethod @specification_ID = @specification_ID, @method_ID = @method_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_method
    @specification_ID INT
   ,@method_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_OperationMethod @specification_ID = @specification_ID, @method_ID = @method_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_method
   @specification_ID INT
AS
   DECLARE @Error INT
   DECLARE @method_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Operation
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Behavioral_Method
            WHERE specification_ID = @specification_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @method_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_OperationMethod @specification_ID, @method_ID
         FETCH NEXT FROM @_Cursor INTO @method_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Operation
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_parameter
    @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation_parameter
    @behavioralFeature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_parameter
   @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Operation_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Operation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Operation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Operation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Operation_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Behavioral.Parameter'
GO

CREATE PROCEDURE Get_Behavioral_Parameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_BehavioralFeatureParameter_behavioralFeature @parameter_ID, @behavioralFeature_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_BehavioralFeatureParameter @parameter_ID = @parameter_ID, @behavioralFeature_ID = @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_BehavioralFeatureParameter @parameter_ID = @parameter_ID, @behavioralFeature_ID = @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_behavioralFeature
   @parameter_ID INT
AS
   DECLARE @Error INT
   DECLARE @behavioralFeature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Parameter
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT behavioralFeature_ID
            FROM Behavioral_BehavioralFeatureParameter
            WHERE parameter_ID = @parameter_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @behavioralFeature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_BehavioralFeatureParameter @parameter_ID, @behavioralFeature_ID
         FETCH NEXT FROM @_Cursor INTO @behavioralFeature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Parameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_event
    @parameter_ID INT
   ,@event_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_EventParameter_event @parameter_ID, @event_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_event
    @parameter_ID INT
   ,@event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_EventParameter @parameter_ID = @parameter_ID, @event_ID = @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_event
    @parameter_ID INT
   ,@event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_EventParameter @parameter_ID = @parameter_ID, @event_ID = @event_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_event
   @parameter_ID INT
AS
   DECLARE @Error INT
   DECLARE @event_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Parameter
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT event_ID
            FROM Behavioral_EventParameter
            WHERE parameter_ID = @parameter_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @event_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_EventParameter @parameter_ID, @event_ID
         FETCH NEXT FROM @_Cursor INTO @event_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Parameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_type
    @parameter_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Behavioral_ParameterType_type @parameter_ID, @type_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_type
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Behavioral_ParameterType @parameter_ID = @parameter_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_type
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Behavioral_ParameterType @parameter_ID = @parameter_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_type
   @parameter_ID INT
AS
   DECLARE @Error INT
   DECLARE @type_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Behavioral_Parameter
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT type_ID
            FROM Behavioral_Parameter
            WHERE _ID = @parameter_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @type_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Behavioral_ParameterType @parameter_ID, @type_ID
         FETCH NEXT FROM @_Cursor INTO @type_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Behavioral_Parameter
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Parameter_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Parameter_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Behavioral_Parameter_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Behavioral_Parameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Behavioral_Parameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Behavioral_Parameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Behavioral_Parameter_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Association_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Association_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Association_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Association_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Association_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_AssociationEnd_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_AssociationEnd_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_AssociationEnd_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_AssociationEnd_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_AssociationEnd_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_AssociationEnd_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_AssociationEnd_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Relationships References
--


PRINT 'References Relationships.Generalization'
GO

CREATE PROCEDURE Get_Relationships_Generalization_child
    @generalization_ID INT
   ,@child_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relationships_ChildElement_child @generalization_ID, @child_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_child
    @generalization_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relationships_ChildElement @generalization_ID = @generalization_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_child
    @generalization_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relationships_ChildElement @generalization_ID = @generalization_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_child
   @generalization_ID INT
AS
   DECLARE @Error INT
   DECLARE @child_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_6E42AC5A5521
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT child_ID
            FROM Relationships_Generalization
            WHERE _ID = @generalization_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @child_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relationships_ChildElement @generalization_ID, @child_ID
         FETCH NEXT FROM @_Cursor INTO @child_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_6E42AC5A5521
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_parent
    @specialization_ID INT
   ,@parent_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relationships_ParentElement_parent @specialization_ID, @parent_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_parent
    @specialization_ID INT
   ,@parent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relationships_ParentElement @specialization_ID = @specialization_ID, @parent_ID = @parent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_parent
    @specialization_ID INT
   ,@parent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relationships_ParentElement @specialization_ID = @specialization_ID, @parent_ID = @parent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_parent
   @specialization_ID INT
AS
   DECLARE @Error INT
   DECLARE @parent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_9D579B0DEC2E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT parent_ID
            FROM Relationships_Generalization
            WHERE _ID = @specialization_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @parent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relationships_ParentElement @specialization_ID, @parent_ID
         FETCH NEXT FROM @_Cursor INTO @parent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_9D579B0DEC2E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Generalization_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Generalization_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relationships_Generalization_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relationships_Generalization_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relationships_Generalization_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relationships_Generalization_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relationships_Generalization_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Instance References
--


PRINT 'References Instance.Instance'
GO

CREATE PROCEDURE Get_Instance_Instance_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_InstanceClassifier_classifier @instance_ID, @classifier_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Instance_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Instance_InstanceClassifier @instance_ID = @instance_ID, @classifier_ID = @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Instance_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Instance_InstanceClassifier @instance_ID = @instance_ID, @classifier_ID = @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Instance_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   DECLARE @classifier_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Instance_Instance
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT classifier_ID
            FROM Instance_Instance
            WHERE _ID = @instance_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @classifier_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Instance_InstanceClassifier @instance_ID, @classifier_ID
         FETCH NEXT FROM @_Cursor INTO @classifier_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Instance_Instance
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Instance_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Instance_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Instance_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Instance_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Instance_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Instance_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Instance_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Instance_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Instance_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Instance_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Instance_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Instance_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Instance_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Instance_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Instance_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Instance_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Instance.Slot'
GO

CREATE PROCEDURE Get_Instance_Slot_object
    @slot_ID INT
   ,@object_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_ObjectSlot_object @slot_ID, @object_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_object
    @slot_ID INT
   ,@object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Instance_ObjectSlot @slot_ID = @slot_ID, @object_ID = @object_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_object
    @slot_ID INT
   ,@object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Instance_ObjectSlot @slot_ID = @slot_ID, @object_ID = @object_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_object
   @slot_ID INT
AS
   DECLARE @Error INT
   DECLARE @object_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT object_ID
            FROM Instance_Slot
            WHERE _ID = @slot_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @object_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Instance_ObjectSlot @slot_ID, @object_ID
         FETCH NEXT FROM @_Cursor INTO @object_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_value
    @valueSlot_ID INT
   ,@value_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_SlotValue_value @valueSlot_ID, @value_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_value
    @valueSlot_ID INT
   ,@value_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Instance_SlotValue @valueSlot_ID = @valueSlot_ID, @value_ID = @value_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_value
    @valueSlot_ID INT
   ,@value_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Instance_SlotValue @valueSlot_ID = @valueSlot_ID, @value_ID = @value_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_value
   @valueSlot_ID INT
AS
   DECLARE @Error INT
   DECLARE @value_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT value_ID
            FROM Instance_Slot
            WHERE _ID = @valueSlot_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @value_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Instance_SlotValue @valueSlot_ID, @value_ID
         FETCH NEXT FROM @_Cursor INTO @value_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_feature
    @slot_ID INT
   ,@feature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Instance_FeatureSlot_feature @slot_ID, @feature_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_feature
    @slot_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Instance_FeatureSlot @slot_ID = @slot_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_feature
    @slot_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Instance_FeatureSlot @slot_ID = @slot_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_feature
   @slot_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Instance_Slot
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM Instance_Slot
            WHERE _ID = @slot_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Instance_FeatureSlot @slot_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Instance_Slot
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Slot_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Slot_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Slot_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Slot_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Slot_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Slot_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Slot_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_DataValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_DataValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_DataValue_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_DataValue_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_DataValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_DataValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_DataValue_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_DataValue_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_DataValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_DataValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_DataValue_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_DataValue_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_DataValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_DataValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_DataValue_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_DataValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_DataValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_DataValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_DataValue_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Instance.Object'
GO

CREATE PROCEDURE Get_Instance_Object_slot
    @object_ID INT
AS
   SELECT _ID
      FROM Instance_Slot
      WHERE object_ID = @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Object_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Instance_ObjectSlot_slot @object_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Instance_ObjectSlot @object_ID = @object_ID, @slot_ID = @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Instance_ObjectSlot @object_ID = @object_ID, @slot_ID = @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_slot
   @object_ID INT
AS
   DECLARE @Error INT
   DECLARE @slot_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Instance_Object
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Instance_Slot
            WHERE object_ID = @object_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @slot_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Instance_ObjectSlot @object_ID, @slot_ID
         FETCH NEXT FROM @_Cursor INTO @slot_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Instance_Object
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Object_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Object_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Object_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Object_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Object_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Object_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Object_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Instance_Extent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Instance_Extent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Instance_Extent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Instance_Extent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Instance_Extent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- BusinessInformation References
--


PRINT 'References BusinessInformation.ResponsibleParty'
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_contact
    @responsibleParty_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ResponsiblePartyContact
      WHERE responsibleParty_ID = @responsibleParty_ID
      ORDER BY contact_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_contact
    @responsibleParty_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ResponsiblePartyContact_contact @responsibleParty_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_contact
    @responsibleParty_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ResponsiblePartyContact @responsibleParty_ID = @responsibleParty_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_contact
    @responsibleParty_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ResponsiblePartyContact @responsibleParty_ID = @responsibleParty_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_contact
   @responsibleParty_ID INT
AS
   DECLARE @Error INT
   DECLARE @contact_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_5B402AA10E0F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT contact_ID
            FROM BusinessInformation_ResponsiblePartyContact
            WHERE responsibleParty_ID = @responsibleParty_ID
            ORDER BY contact_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contact_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ResponsiblePartyContact @responsibleParty_ID, @contact_ID
         FETCH NEXT FROM @_Cursor INTO @contact_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_5B402AA10E0F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_modelElement
    @responsibleParty_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_ModelElementResponsibility
      WHERE responsibleParty_ID = @responsibleParty_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_modelElement
    @responsibleParty_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ModelElementResponsibility_modelElement @responsibleParty_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_modelElement
    @responsibleParty_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ModelElementResponsibility @responsibleParty_ID = @responsibleParty_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_modelElement
    @responsibleParty_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ModelElementResponsibility @responsibleParty_ID = @responsibleParty_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_modelElement
   @responsibleParty_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_F81D51F2701A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM BusinessInformation_ModelElementResponsibility
            WHERE responsibleParty_ID = @responsibleParty_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ModelElementResponsibility @responsibleParty_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_F81D51F2701A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResponsibleParty_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResponsibleParty_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResponsibleParty_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResponsibleParty_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResponsibleParty_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Telephone'
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_contact
    @telephone_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactTelephone
      WHERE telephone_ID = @telephone_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Telephone_contact
    @telephone_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactTelephone_contact @telephone_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Telephone_contact
    @telephone_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactTelephone @telephone_ID = @telephone_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Telephone_contact
    @telephone_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactTelephone @telephone_ID = @telephone_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Telephone_contact
   @telephone_ID INT
AS
   DECLARE @Error INT
   DECLARE @contact_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_59C8E8904EC5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT contact_ID
            FROM BusinessInformation_ContactTelephone
            WHERE telephone_ID = @telephone_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contact_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactTelephone @telephone_ID, @contact_ID
         FETCH NEXT FROM @_Cursor INTO @contact_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_59C8E8904EC5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Telephone_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Telephone_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Telephone_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Telephone_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Telephone_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Telephone_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Telephone_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Telephone_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Telephone_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Telephone_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Telephone_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Telephone_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Telephone_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Telephone_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Telephone_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Telephone_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Email'
GO

CREATE PROCEDURE Get_BusinessInformation_Email_contact
    @email_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactEmail
      WHERE email_ID = @email_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Email_contact
    @email_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactEmail_contact @email_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Email_contact
    @email_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactEmail @email_ID = @email_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Email_contact
    @email_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactEmail @email_ID = @email_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Email_contact
   @email_ID INT
AS
   DECLARE @Error INT
   DECLARE @contact_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_63E75F4B3B56
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT contact_ID
            FROM BusinessInformation_ContactEmail
            WHERE email_ID = @email_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contact_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactEmail @email_ID, @contact_ID
         FETCH NEXT FROM @_Cursor INTO @contact_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_63E75F4B3B56
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Email_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Email_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Email_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Email_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Email_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Email_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Email_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Email_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Email_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Email_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Email_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Email_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Email_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Email_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Email_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Email_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Location'
GO

CREATE PROCEDURE Get_BusinessInformation_Location_contact
    @location_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactLocation
      WHERE location_ID = @location_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Location_contact
    @location_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactLocation_contact @location_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Location_contact
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactLocation @location_ID = @location_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Location_contact
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactLocation @location_ID = @location_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Location_contact
   @location_ID INT
AS
   DECLARE @Error INT
   DECLARE @contact_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_B21DD4189B3F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT contact_ID
            FROM BusinessInformation_ContactLocation
            WHERE location_ID = @location_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contact_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactLocation @location_ID, @contact_ID
         FETCH NEXT FROM @_Cursor INTO @contact_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_B21DD4189B3F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Location_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Location_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Location_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Location_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Location_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Location_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Location_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Location_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Location_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Location_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Location_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Location_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Location_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Location_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Location_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Location_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Contact'
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_email
    @contact_ID INT
AS
   SELECT email_ID
      FROM BusinessInformation_ContactEmail
      WHERE contact_ID = @contact_ID
      ORDER BY email_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_email
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactEmail_email @contact_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_email
    @contact_ID INT
   ,@email_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactEmail @contact_ID = @contact_ID, @email_ID = @email_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_email
    @contact_ID INT
   ,@email_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactEmail @contact_ID = @contact_ID, @email_ID = @email_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_email
   @contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @email_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_3CFAD2D52634
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT email_ID
            FROM BusinessInformation_ContactEmail
            WHERE contact_ID = @contact_ID
            ORDER BY email_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @email_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactEmail @contact_ID, @email_ID
         FETCH NEXT FROM @_Cursor INTO @email_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_3CFAD2D52634
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_location
    @contact_ID INT
AS
   SELECT location_ID
      FROM BusinessInformation_ContactLocation
      WHERE contact_ID = @contact_ID
      ORDER BY location_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_location
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactLocation_location @contact_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_location
    @contact_ID INT
   ,@location_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactLocation @contact_ID = @contact_ID, @location_ID = @location_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_location
    @contact_ID INT
   ,@location_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactLocation @contact_ID = @contact_ID, @location_ID = @location_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_location
   @contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @location_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_27C48EBF22A3
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT location_ID
            FROM BusinessInformation_ContactLocation
            WHERE contact_ID = @contact_ID
            ORDER BY location_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @location_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactLocation @contact_ID, @location_ID
         FETCH NEXT FROM @_Cursor INTO @location_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_27C48EBF22A3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_responsibleParty
    @contact_ID INT
AS
   SELECT responsibleParty_ID
      FROM BusinessInformation_ResponsiblePartyContact
      WHERE contact_ID = @contact_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_responsibleParty
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ResponsiblePartyContact_responsibleParty @contact_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_responsibleParty
    @contact_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ResponsiblePartyContact @contact_ID = @contact_ID, @responsibleParty_ID = @responsibleParty_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_responsibleParty
    @contact_ID INT
   ,@responsibleParty_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ResponsiblePartyContact @contact_ID = @contact_ID, @responsibleParty_ID = @responsibleParty_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_responsibleParty
   @contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @responsibleParty_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_D7A2F3AEFF73
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT responsibleParty_ID
            FROM BusinessInformation_ResponsiblePartyContact
            WHERE contact_ID = @contact_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @responsibleParty_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ResponsiblePartyContact @contact_ID, @responsibleParty_ID
         FETCH NEXT FROM @_Cursor INTO @responsibleParty_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_D7A2F3AEFF73
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_telephone
    @contact_ID INT
AS
   SELECT telephone_ID
      FROM BusinessInformation_ContactTelephone
      WHERE contact_ID = @contact_ID
      ORDER BY telephone_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_telephone
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactTelephone_telephone @contact_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_telephone
    @contact_ID INT
   ,@telephone_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactTelephone @contact_ID = @contact_ID, @telephone_ID = @telephone_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_telephone
    @contact_ID INT
   ,@telephone_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactTelephone @contact_ID = @contact_ID, @telephone_ID = @telephone_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_telephone
   @contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @telephone_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_09A4FC88447F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT telephone_ID
            FROM BusinessInformation_ContactTelephone
            WHERE contact_ID = @contact_ID
            ORDER BY telephone_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @telephone_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactTelephone @contact_ID, @telephone_ID
         FETCH NEXT FROM @_Cursor INTO @telephone_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_09A4FC88447F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_url
    @contact_ID INT
AS
   SELECT url_ID
      FROM BusinessInformation_ContactResourceLocator
      WHERE contact_ID = @contact_ID
      ORDER BY url_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_url
    @contact_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactResourceLocator_url @contact_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_url
    @contact_ID INT
   ,@url_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactResourceLocator @contact_ID = @contact_ID, @url_ID = @url_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_url
    @contact_ID INT
   ,@url_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactResourceLocator @contact_ID = @contact_ID, @url_ID = @url_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_url
   @contact_ID INT
AS
   DECLARE @Error INT
   DECLARE @url_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_8357A0F5FF83
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT url_ID
            FROM BusinessInformation_ContactResourceLocator
            WHERE contact_ID = @contact_ID
            ORDER BY url_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @url_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactResourceLocator @contact_ID, @url_ID
         FETCH NEXT FROM @_Cursor INTO @url_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_8357A0F5FF83
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Contact_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Contact_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Contact_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Contact_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Contact_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Description'
GO

CREATE PROCEDURE Get_BusinessInformation_Description_modelElement
    @description_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_ModelElementDescription
      WHERE description_ID = @description_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description_modelElement
    @description_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ModelElementDescription_modelElement @description_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_modelElement
    @description_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ModelElementDescription @description_ID = @description_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_modelElement
    @description_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ModelElementDescription @description_ID = @description_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_modelElement
   @description_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_78192052C151
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM BusinessInformation_ModelElementDescription
            WHERE description_ID = @description_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ModelElementDescription @description_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_78192052C151
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Description_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Description_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Description_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Description_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Description_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.Document'
GO

CREATE PROCEDURE Get_BusinessInformation_Document_modelElement
    @document_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessInformation_DocumentDescribes
      WHERE document_ID = @document_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document_modelElement
    @document_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_DocumentDescribes_modelElement @document_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_modelElement
    @document_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_DocumentDescribes @document_ID = @document_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_modelElement
    @document_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_DocumentDescribes @document_ID = @document_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_modelElement
   @document_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_AE436260B1CB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM BusinessInformation_DocumentDescribes
            WHERE document_ID = @document_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_DocumentDescribes @document_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_AE436260B1CB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_Document_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_Document_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessInformation.ResourceLocator'
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_contact
    @url_ID INT
AS
   SELECT contact_ID
      FROM BusinessInformation_ContactResourceLocator
      WHERE url_ID = @url_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResourceLocator_contact
    @url_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_ContactResourceLocator_contact @url_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResourceLocator_contact
    @url_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessInformation_ContactResourceLocator @url_ID = @url_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResourceLocator_contact
    @url_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessInformation_ContactResourceLocator @url_ID = @url_ID, @contact_ID = @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResourceLocator_contact
   @url_ID INT
AS
   DECLARE @Error INT
   DECLARE @contact_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_8EE90F0EB9F7
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT contact_ID
            FROM BusinessInformation_ContactResourceLocator
            WHERE url_ID = @url_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contact_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessInformation_ContactResourceLocator @url_ID, @contact_ID
         FETCH NEXT FROM @_Cursor INTO @contact_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_8EE90F0EB9F7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResourceLocator_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResourceLocator_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResourceLocator_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResourceLocator_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResourceLocator_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResourceLocator_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResourceLocator_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResourceLocator_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessInformation_ResourceLocator_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResourceLocator_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResourceLocator_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResourceLocator_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessInformation_ResourceLocator_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessInformation_ResourceLocator_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessInformation_ResourceLocator_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessInformation_ResourceLocator_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- DataTypes References
--


PRINT 'References DataTypes.Enumeration'
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_literal
    @enumeration_ID INT
AS
   SELECT _ID
      FROM DataTypes_EnumerationLiteral
      WHERE enumeration_ID = @enumeration_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_literal
    @enumeration_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataTypes_EnumerationLiterals_literal @enumeration_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_literal
    @enumeration_ID INT
   ,@literal_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataTypes_EnumerationLiterals @enumeration_ID = @enumeration_ID, @literal_ID = @literal_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_literal
    @enumeration_ID INT
   ,@literal_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataTypes_EnumerationLiterals @enumeration_ID = @enumeration_ID, @literal_ID = @literal_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_literal
   @enumeration_ID INT
AS
   DECLARE @Error INT
   DECLARE @literal_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataTypes_Enumeration
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataTypes_EnumerationLiteral
            WHERE enumeration_ID = @enumeration_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @literal_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataTypes_EnumerationLiterals @enumeration_ID, @literal_ID
         FETCH NEXT FROM @_Cursor INTO @literal_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataTypes_Enumeration
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Enumeration_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Enumeration_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Enumeration_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Enumeration_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Enumeration_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataTypes.EnumerationLiteral'
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_enumeration
    @literal_ID INT
   ,@enumeration_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataTypes_EnumerationLiterals_enumeration @literal_ID, @enumeration_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_EnumerationLiteral_enumeration
    @literal_ID INT
   ,@enumeration_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataTypes_EnumerationLiterals @literal_ID = @literal_ID, @enumeration_ID = @enumeration_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_EnumerationLiteral_enumeration
    @literal_ID INT
   ,@enumeration_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataTypes_EnumerationLiterals @literal_ID = @literal_ID, @enumeration_ID = @enumeration_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_EnumerationLiteral_enumeration
   @literal_ID INT
AS
   DECLARE @Error INT
   DECLARE @enumeration_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataType_7A5DFDBB1F71
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT enumeration_ID
            FROM DataTypes_EnumerationLiteral
            WHERE _ID = @literal_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @enumeration_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataTypes_EnumerationLiterals @literal_ID, @enumeration_ID
         FETCH NEXT FROM @_Cursor INTO @enumeration_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataType_7A5DFDBB1F71
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_EnumerationLiteral_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_EnumerationLiteral_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_EnumerationLiteral_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_EnumerationLiteral_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_EnumerationLiteral_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_EnumerationLiteral_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_EnumerationLiteral_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_EnumerationLiteral_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_EnumerationLiteral_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_EnumerationLiteral_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_EnumerationLiteral_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_EnumerationLiteral_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_EnumerationLiteral_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_EnumerationLiteral_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_EnumerationLiteral_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_EnumerationLiteral_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataTypes.TypeAlias'
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_type
    @alias_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataTypes_ClassifierAlias_type @alias_ID, @type_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_type
    @alias_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataTypes_ClassifierAlias @alias_ID = @alias_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_type
    @alias_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataTypes_ClassifierAlias @alias_ID = @alias_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_type
   @alias_ID INT
AS
   DECLARE @Error INT
   DECLARE @type_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataTypes_TypeAlias
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT type_ID
            FROM DataTypes_TypeAlias
            WHERE _ID = @alias_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @type_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataTypes_ClassifierAlias @alias_ID, @type_ID
         FETCH NEXT FROM @_Cursor INTO @type_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataTypes_TypeAlias
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_TypeAlias_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_TypeAlias_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_TypeAlias_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_TypeAlias_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_TypeAlias_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataTypes.Union'
GO

CREATE PROCEDURE Get_DataTypes_Union_discriminator
    @discriminatedUnion_ID INT
   ,@discriminator_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataTypes_UnionDiscriminator_discriminator @discriminatedUnion_ID, @discriminator_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_discriminator
    @discriminatedUnion_ID INT
   ,@discriminator_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataTypes_UnionDiscriminator @discriminatedUnion_ID = @discriminatedUnion_ID, @discriminator_ID = @discriminator_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_discriminator
    @discriminatedUnion_ID INT
   ,@discriminator_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataTypes_UnionDiscriminator @discriminatedUnion_ID = @discriminatedUnion_ID, @discriminator_ID = @discriminator_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_discriminator
   @discriminatedUnion_ID INT
AS
   DECLARE @Error INT
   DECLARE @discriminator_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataTypes_Union
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT discriminator_ID
            FROM DataTypes_Union
            WHERE _ID = @discriminatedUnion_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @discriminator_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataTypes_UnionDiscriminator @discriminatedUnion_ID, @discriminator_ID
         FETCH NEXT FROM @_Cursor INTO @discriminator_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataTypes_Union
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_Union_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_Union_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_Union_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_Union_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_Union_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_UnionMember_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_UnionMember_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataTypes_UnionMember_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataTypes_UnionMember_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataTypes_UnionMember_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataTypes_UnionMember_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataTypes_UnionMember_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Expressions References
--


PRINT 'References Expressions.ExpressionNode'
GO

CREATE PROCEDURE Get_Expressions_ExpressionNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_OperationArgument_featureNode @argument_ID, @featureNode_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ExpressionNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Expressions_OperationArgument @argument_ID = @argument_ID, @featureNode_ID = @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ExpressionNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Expressions_OperationArgument @argument_ID = @argument_ID, @featureNode_ID = @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ExpressionNode_featureNode
   @argument_ID INT
AS
   DECLARE @Error INT
   DECLARE @featureNode_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Expressi_5119529CAAAB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT featureNode_ID
            FROM Expressions_OperationArgument
            WHERE argument_ID = @argument_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @featureNode_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Expressions_OperationArgument @argument_ID, @featureNode_ID
         FETCH NEXT FROM @_Cursor INTO @featureNode_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Expressi_5119529CAAAB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ExpressionNode_type
    @expressionNode_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_ExpressionNodeClassifier_type @expressionNode_ID, @type_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ExpressionNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Expressions_ExpressionNodeClassifier @expressionNode_ID = @expressionNode_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ExpressionNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Expressions_ExpressionNodeClassifier @expressionNode_ID = @expressionNode_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ExpressionNode_type
   @expressionNode_ID INT
AS
   DECLARE @Error INT
   DECLARE @type_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Expressi_4C716EB1CE04
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT type_ID
            FROM Expressions_ExpressionNode
            WHERE _ID = @expressionNode_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @type_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Expressions_ExpressionNodeClassifier @expressionNode_ID, @type_ID
         FETCH NEXT FROM @_Cursor INTO @type_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Expressi_4C716EB1CE04
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ConstantNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ConstantNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ConstantNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ConstantNode_featureNode
   @argument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ConstantNode_type
    @expressionNode_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ConstantNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ConstantNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ConstantNode_type
   @expressionNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO


PRINT 'References Expressions.ElementNode'
GO

CREATE PROCEDURE Get_Expressions_ElementNode_modelElement
    @elementNode_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_ReferencedElement_modelElement @elementNode_ID, @modelElement_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ElementNode_modelElement
    @elementNode_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Expressions_ReferencedElement @elementNode_ID = @elementNode_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ElementNode_modelElement
    @elementNode_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Expressions_ReferencedElement @elementNode_ID = @elementNode_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ElementNode_modelElement
   @elementNode_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Expressi_5FA1F3BC9D61
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM Expressions_ElementNode
            WHERE _ID = @elementNode_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Expressions_ReferencedElement @elementNode_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Expressi_5FA1F3BC9D61
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ElementNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ElementNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ElementNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ElementNode_featureNode
   @argument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_ElementNode_type
    @expressionNode_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_ElementNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_ElementNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_ElementNode_type
   @expressionNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO


PRINT 'References Expressions.FeatureNode'
GO

CREATE PROCEDURE Get_Expressions_FeatureNode_argument
    @featureNode_ID INT
AS
   SELECT argument_ID
      FROM Expressions_OperationArgument
      WHERE featureNode_ID = @featureNode_ID
      ORDER BY argument_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Expressions_FeatureNode_argument
    @featureNode_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Expressions_OperationArgument_argument @featureNode_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_FeatureNode_argument
    @featureNode_ID INT
   ,@argument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Expressions_OperationArgument @featureNode_ID = @featureNode_ID, @argument_ID = @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_FeatureNode_argument
    @featureNode_ID INT
   ,@argument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Expressions_OperationArgument @featureNode_ID = @featureNode_ID, @argument_ID = @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_FeatureNode_argument
   @featureNode_ID INT
AS
   DECLARE @Error INT
   DECLARE @argument_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Expressi_37B1A5FE4792
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT argument_ID
            FROM Expressions_OperationArgument
            WHERE featureNode_ID = @featureNode_ID
            ORDER BY argument_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @argument_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Expressions_OperationArgument @featureNode_ID, @argument_ID
         FETCH NEXT FROM @_Cursor INTO @argument_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Expressi_37B1A5FE4792
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_FeatureNode_feature
    @featureNode_ID INT
   ,@feature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Expressions_NodeFeature_feature @featureNode_ID, @feature_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_FeatureNode_feature
    @featureNode_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Expressions_NodeFeature @featureNode_ID = @featureNode_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_FeatureNode_feature
    @featureNode_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Expressions_NodeFeature @featureNode_ID = @featureNode_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_FeatureNode_feature
   @featureNode_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Expressi_E681997479B5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM Expressions_FeatureNode
            WHERE _ID = @featureNode_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Expressions_NodeFeature @featureNode_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Expressi_E681997479B5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_FeatureNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_FeatureNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_FeatureNode_featureNode
    @argument_ID INT
   ,@featureNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_featureNode @argument_ID, @featureNode_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_FeatureNode_featureNode
   @argument_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_featureNode @argument_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Expressions_FeatureNode_type
    @expressionNode_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Expressions_FeatureNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Expressions_FeatureNode_type
    @expressionNode_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Expressions_ExpressionNode_type @expressionNode_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Expressions_FeatureNode_type
   @expressionNode_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Expressions_ExpressionNode_type @expressionNode_ID
   RETURN @Error
GO


--
-- KeysIndexes References
--


PRINT 'References KeysIndexes.UniqueKey'
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_feature
    @uniqueKey_ID INT
AS
   SELECT feature_ID
      FROM KeysIndexes_UniqueFeature
      WHERE uniqueKey_ID = @uniqueKey_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey_feature
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueFeature_feature @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_UniqueFeature @uniqueKey_ID = @uniqueKey_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_UniqueFeature @uniqueKey_ID = @uniqueKey_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_feature
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysIndexes_UniqueKey
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM KeysIndexes_UniqueFeature
            WHERE uniqueKey_ID = @uniqueKey_ID
            ORDER BY feature_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_UniqueFeature @uniqueKey_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysIndexes_UniqueKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_keyRelationship
    @uniqueKey_ID INT
AS
   SELECT _ID
      FROM KeysIndexes_KeyRelationship
      WHERE uniqueKey_ID = @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey_keyRelationship
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueKeyRelationship_keyRelationship @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_UniqueKeyRelationship @uniqueKey_ID = @uniqueKey_ID, @keyRelationship_ID = @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_UniqueKeyRelationship @uniqueKey_ID = @uniqueKey_ID, @keyRelationship_ID = @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_keyRelationship
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   DECLARE @keyRelationship_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysIndexes_UniqueKey
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM KeysIndexes_KeyRelationship
            WHERE uniqueKey_ID = @uniqueKey_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @keyRelationship_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_UniqueKeyRelationship @uniqueKey_ID, @keyRelationship_ID
         FETCH NEXT FROM @_Cursor INTO @keyRelationship_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysIndexes_UniqueKey
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_UniqueKey_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_UniqueKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_UniqueKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_UniqueKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_UniqueKey_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References KeysIndexes.Index'
GO

CREATE PROCEDURE Get_KeysIndexes_Index_indexedFeature
    @index_ID INT
AS
   SELECT indexedFeature_ID
      FROM KeysIndexes_IndexedFeatureInfo
      WHERE index_ID = @index_ID
      ORDER BY indexedFeature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_Index_indexedFeature
    @index_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_IndexedFeatureInfo_indexedFeature @index_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_indexedFeature
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_IndexedFeatureInfo @index_ID = @index_ID, @indexedFeature_ID = @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_indexedFeature
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_IndexedFeatureInfo @index_ID = @index_ID, @indexedFeature_ID = @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_indexedFeature
   @index_ID INT
AS
   DECLARE @Error INT
   DECLARE @indexedFeature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysIndexes_Index
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT indexedFeature_ID
            FROM KeysIndexes_IndexedFeatureInfo
            WHERE index_ID = @index_ID
            ORDER BY indexedFeature_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @indexedFeature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_IndexedFeatureInfo @index_ID, @indexedFeature_ID
         FETCH NEXT FROM @_Cursor INTO @indexedFeature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysIndexes_Index
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_IndexSpansClass_spannedClass @index_ID, @spannedClass_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_IndexSpansClass @index_ID = @index_ID, @spannedClass_ID = @spannedClass_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_IndexSpansClass @index_ID = @index_ID, @spannedClass_ID = @spannedClass_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_spannedClass
   @index_ID INT
AS
   DECLARE @Error INT
   DECLARE @spannedClass_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysIndexes_Index
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT spannedClass_ID
            FROM KeysIndexes_Index
            WHERE _ID = @index_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @spannedClass_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_IndexSpansClass @index_ID, @spannedClass_ID
         FETCH NEXT FROM @_Cursor INTO @spannedClass_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysIndexes_Index
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_Index_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_Index_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_Index_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_Index_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_Index_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_Index_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_Index_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References KeysIndexes.KeyRelationship'
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_feature
    @keyRelationship_ID INT
AS
   SELECT feature_ID
      FROM KeysIndexes_KeyRelationshipFeatures
      WHERE keyRelationship_ID = @keyRelationship_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationship_feature
    @keyRelationship_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_KeyRelationshipFeatures_feature @keyRelationship_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_feature
    @keyRelationship_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_KeyRelationshipFeatures @keyRelationship_ID = @keyRelationship_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_feature
    @keyRelationship_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_KeyRelationshipFeatures @keyRelationship_ID = @keyRelationship_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_feature
   @keyRelationship_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysInde_73F39662EA05
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM KeysIndexes_KeyRelationshipFeatures
            WHERE keyRelationship_ID = @keyRelationship_ID
            ORDER BY feature_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_KeyRelationshipFeatures @keyRelationship_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysInde_73F39662EA05
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_UniqueKeyRelationship_uniqueKey @keyRelationship_ID, @uniqueKey_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_UniqueKeyRelationship @keyRelationship_ID = @keyRelationship_ID, @uniqueKey_ID = @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_UniqueKeyRelationship @keyRelationship_ID = @keyRelationship_ID, @uniqueKey_ID = @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_uniqueKey
   @keyRelationship_ID INT
AS
   DECLARE @Error INT
   DECLARE @uniqueKey_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysInde_D2ECD16D91DD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT uniqueKey_ID
            FROM KeysIndexes_KeyRelationship
            WHERE _ID = @keyRelationship_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @uniqueKey_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_UniqueKeyRelationship @keyRelationship_ID, @uniqueKey_ID
         FETCH NEXT FROM @_Cursor INTO @uniqueKey_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysInde_D2ECD16D91DD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationship_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationship_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_KeyRelationship_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_KeyRelationship_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_KeyRelationship_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_KeyRelationship_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_KeyRelationship_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References KeysIndexes.IndexedFeature'
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_feature
    @indexedFeature_ID INT
   ,@feature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_IndexedFeatures_feature @indexedFeature_ID, @feature_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_feature
    @indexedFeature_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_IndexedFeatures @indexedFeature_ID = @indexedFeature_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_feature
    @indexedFeature_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_IndexedFeatures @indexedFeature_ID = @indexedFeature_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_feature
   @indexedFeature_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysInde_3A965D7BBD50
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM KeysIndexes_IndexedFeature
            WHERE _ID = @indexedFeature_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_IndexedFeatures @indexedFeature_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysInde_3A965D7BBD50
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_index
    @indexedFeature_ID INT
   ,@index_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_KeysIndexes_IndexedFeatureInfo_index @indexedFeature_ID, @index_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_index
    @indexedFeature_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_KeysIndexes_IndexedFeatureInfo @indexedFeature_ID = @indexedFeature_ID, @index_ID = @index_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_index
    @indexedFeature_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_KeysIndexes_IndexedFeatureInfo @indexedFeature_ID = @indexedFeature_ID, @index_ID = @index_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_index
   @indexedFeature_ID INT
AS
   DECLARE @Error INT
   DECLARE @index_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_KeysInde_C89C5F02E4E4
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT index_ID
            FROM KeysIndexes_IndexedFeatureInfo
            WHERE indexedFeature_ID = @indexedFeature_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @index_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_KeysIndexes_IndexedFeatureInfo @indexedFeature_ID, @index_ID
         FETCH NEXT FROM @_Cursor INTO @index_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_KeysInde_C89C5F02E4E4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeature_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeature_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_KeysIndexes_IndexedFeature_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_KeysIndexes_IndexedFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_KeysIndexes_IndexedFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_KeysIndexes_IndexedFeature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_KeysIndexes_IndexedFeature_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- SoftwareDeployment References
--


PRINT 'References SoftwareDeployment.Site'
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_containingSite
    @containedSite_ID INT
AS
   SELECT containingSite_ID
      FROM SoftwareDeployment_RelatedSites
      WHERE containedSite_ID = @containedSite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site_containingSite
    @containedSite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_RelatedSites_containingSite @containedSite_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_containingSite
    @containedSite_ID INT
   ,@containingSite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_RelatedSites @containedSite_ID = @containedSite_ID, @containingSite_ID = @containingSite_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_containingSite
    @containedSite_ID INT
   ,@containingSite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_RelatedSites @containedSite_ID = @containedSite_ID, @containingSite_ID = @containingSite_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_containingSite
   @containedSite_ID INT
AS
   DECLARE @Error INT
   DECLARE @containingSite_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_775900B5BF06
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT containingSite_ID
            FROM SoftwareDeployment_RelatedSites
            WHERE containedSite_ID = @containedSite_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @containingSite_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_RelatedSites @containedSite_ID, @containingSite_ID
         FETCH NEXT FROM @_Cursor INTO @containingSite_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_775900B5BF06
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_contact
    @location_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessInformation_Location_contact @location_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site_contact
    @location_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessInformation_Location_contact @location_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_contact
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_BusinessInformation_Location_contact @location_ID, @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_contact
    @location_ID INT
   ,@contact_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_BusinessInformation_Location_contact @location_ID, @contact_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_contact
   @location_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessInformation_Location_contact @location_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Site_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Site_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Site_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Site_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Site_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.Machine'
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_site
    @machine_ID INT
   ,@site_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_SiteMachines_site @machine_ID, @site_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_site
    @machine_ID INT
   ,@site_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_SiteMachines @machine_ID = @machine_ID, @site_ID = @site_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_site
    @machine_ID INT
   ,@site_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_SiteMachines @machine_ID = @machine_ID, @site_ID = @site_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_site
   @machine_ID INT
AS
   DECLARE @Error INT
   DECLARE @site_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_2A4EF055982E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT site_ID
            FROM SoftwareDeployment_Machine
            WHERE _ID = @machine_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @site_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_SiteMachines @machine_ID, @site_ID
         FETCH NEXT FROM @_Cursor INTO @site_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_2A4EF055982E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_deployedComponent
    @machine_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_DeployedComponent
      WHERE machine_ID = @machine_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_deployedComponent
    @machine_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_ComponentsOnMachine_deployedComponent @machine_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_deployedComponent
    @machine_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_ComponentsOnMachine @machine_ID = @machine_ID, @deployedComponent_ID = @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_deployedComponent
    @machine_ID INT
   ,@deployedComponent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_ComponentsOnMachine @machine_ID = @machine_ID, @deployedComponent_ID = @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_deployedComponent
   @machine_ID INT
AS
   DECLARE @Error INT
   DECLARE @deployedComponent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_E1FCA0B7C556
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM SoftwareDeployment_DeployedComponent
            WHERE machine_ID = @machine_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @deployedComponent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_ComponentsOnMachine @machine_ID, @deployedComponent_ID
         FETCH NEXT FROM @_Cursor INTO @deployedComponent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_E1FCA0B7C556
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Machine_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Machine_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Machine_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Machine_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Machine_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.SoftwareSystem'
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_typespace
    @supportingSystem_ID INT
AS
   SELECT typespace_ID
      FROM SoftwareDeployment_SystemTypespace
      WHERE supportingSystem_ID = @supportingSystem_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_typespace
    @supportingSystem_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_SystemTypespace_typespace @supportingSystem_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_typespace
    @supportingSystem_ID INT
   ,@typespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_SystemTypespace @supportingSystem_ID = @supportingSystem_ID, @typespace_ID = @typespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_typespace
    @supportingSystem_ID INT
   ,@typespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_SystemTypespace @supportingSystem_ID = @supportingSystem_ID, @typespace_ID = @typespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_typespace
   @supportingSystem_ID INT
AS
   DECLARE @Error INT
   DECLARE @typespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_379511A1D940
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT typespace_ID
            FROM SoftwareDeployment_SystemTypespace
            WHERE supportingSystem_ID = @supportingSystem_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @typespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_SystemTypespace @supportingSystem_ID, @typespace_ID
         FETCH NEXT FROM @_Cursor INTO @typespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_379511A1D940
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_SoftwareSystem_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_SoftwareSystem_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_SoftwareSystem_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_SoftwareSystem_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_SoftwareSystem_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.DeployedComponent'
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_component
    @deployment_ID INT
   ,@component_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_ComponentDeployments_component @deployment_ID, @component_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_ComponentDeployments @deployment_ID = @deployment_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_ComponentDeployments @deployment_ID = @deployment_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_component
   @deployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @component_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_B1E155653C68
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT component_ID
            FROM SoftwareDeployment_DeployedComponent
            WHERE _ID = @deployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @component_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_ComponentDeployments @deployment_ID, @component_ID
         FETCH NEXT FROM @_Cursor INTO @component_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_B1E155653C68
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_machine
    @deployedComponent_ID INT
   ,@machine_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_ComponentsOnMachine_machine @deployedComponent_ID, @machine_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_ComponentsOnMachine @deployedComponent_ID = @deployedComponent_ID, @machine_ID = @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_ComponentsOnMachine @deployedComponent_ID = @deployedComponent_ID, @machine_ID = @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_machine
   @deployedComponent_ID INT
AS
   DECLARE @Error INT
   DECLARE @machine_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_1222720771F8
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT machine_ID
            FROM SoftwareDeployment_DeployedComponent
            WHERE _ID = @deployedComponent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @machine_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_ComponentsOnMachine @deployedComponent_ID, @machine_ID
         FETCH NEXT FROM @_Cursor INTO @machine_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_1222720771F8
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedComponent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedComponent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedComponent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedComponent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedComponent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.DeployedSoftwareSystem'
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_softwareSystem
    @deployment_ID INT
   ,@softwareSystem_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_SoftwareSystemDeployments_softwareSystem @deployment_ID, @softwareSystem_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_softwareSystem
    @deployment_ID INT
   ,@softwareSystem_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_SoftwareSystemDeployments @deployment_ID = @deployment_ID, @softwareSystem_ID = @softwareSystem_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_softwareSystem
    @deployment_ID INT
   ,@softwareSystem_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_SoftwareSystemDeployments @deployment_ID = @deployment_ID, @softwareSystem_ID = @softwareSystem_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_softwareSystem
   @deployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @softwareSystem_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_C7CC03BEF7CA
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT softwareSystem_ID
            FROM SoftwareDeployment_DeployedSoftwareSystem
            WHERE _ID = @deployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @softwareSystem_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_SoftwareSystemDeployments @deployment_ID, @softwareSystem_ID
         FETCH NEXT FROM @_Cursor INTO @softwareSystem_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_C7CC03BEF7CA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DeployedSoftwareSystem_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DeployedSoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DeployedSoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DeployedSoftwareSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DeployedSoftwareSystem_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.DataManager'
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_dataPackage
    @dataManager_ID INT
AS
   SELECT dataPackage_ID
      FROM SoftwareDeployment_DataManagerDataPackage
      WHERE dataManager_ID = @dataManager_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_dataPackage
    @dataManager_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_DataManagerDataPackage_dataPackage @dataManager_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_dataPackage
    @dataManager_ID INT
   ,@dataPackage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_DataManagerDataPackage @dataManager_ID = @dataManager_ID, @dataPackage_ID = @dataPackage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_dataPackage
    @dataManager_ID INT
   ,@dataPackage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_DataManagerDataPackage @dataManager_ID = @dataManager_ID, @dataPackage_ID = @dataPackage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_dataPackage
   @dataManager_ID INT
AS
   DECLARE @Error INT
   DECLARE @dataPackage_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_29C4B845BA2D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dataPackage_ID
            FROM SoftwareDeployment_DataManagerDataPackage
            WHERE dataManager_ID = @dataManager_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dataPackage_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_DataManagerDataPackage @dataManager_ID, @dataPackage_ID
         FETCH NEXT FROM @_Cursor INTO @dataPackage_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_29C4B845BA2D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_component
    @deployment_ID INT
   ,@component_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_component @deployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_SoftwareDeployment_DeployedComponent_component @deployment_ID, @component_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_SoftwareDeployment_DeployedComponent_component @deployment_ID, @component_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_component
   @deployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_component @deployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_machine
    @deployedComponent_ID INT
   ,@machine_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID, @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID, @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_machine
   @deployedComponent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataManager_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataManager_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataManager_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataManager_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataManager_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.DataProvider'
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_resourceConnection
    @dataProvider_ID INT
AS
   SELECT _ID
      FROM SoftwareDeployment_ProviderConnection
      WHERE dataProvider_ID = @dataProvider_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_resourceConnection
    @dataProvider_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_DataProviderConnections_resourceConnection @dataProvider_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_resourceConnection
    @dataProvider_ID INT
   ,@resourceConnection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_DataProviderConnections @dataProvider_ID = @dataProvider_ID, @resourceConnection_ID = @resourceConnection_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_resourceConnection
    @dataProvider_ID INT
   ,@resourceConnection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_DataProviderConnections @dataProvider_ID = @dataProvider_ID, @resourceConnection_ID = @resourceConnection_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_resourceConnection
   @dataProvider_ID INT
AS
   DECLARE @Error INT
   DECLARE @resourceConnection_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_34C7CC087053
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM SoftwareDeployment_ProviderConnection
            WHERE dataProvider_ID = @dataProvider_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @resourceConnection_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_DataProviderConnections @dataProvider_ID, @resourceConnection_ID
         FETCH NEXT FROM @_Cursor INTO @resourceConnection_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_34C7CC087053
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_dataPackage
    @dataManager_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DataManager_dataPackage @dataManager_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_dataPackage
    @dataManager_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_SoftwareDeployment_DataManager_dataPackage @dataManager_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_dataPackage
    @dataManager_ID INT
   ,@dataPackage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_SoftwareDeployment_DataManager_dataPackage @dataManager_ID, @dataPackage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_dataPackage
    @dataManager_ID INT
   ,@dataPackage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_SoftwareDeployment_DataManager_dataPackage @dataManager_ID, @dataPackage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_dataPackage
   @dataManager_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DataManager_dataPackage @dataManager_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_component
    @deployment_ID INT
   ,@component_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_component @deployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_SoftwareDeployment_DeployedComponent_component @deployment_ID, @component_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_component
    @deployment_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_SoftwareDeployment_DeployedComponent_component @deployment_ID, @component_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_component
   @deployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_component @deployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_machine
    @deployedComponent_ID INT
   ,@machine_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID, @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_machine
    @deployedComponent_ID INT
   ,@machine_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID, @machine_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_machine
   @deployedComponent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_SoftwareDeployment_DeployedComponent_machine @deployedComponent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_DataProvider_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_DataProvider_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_DataProvider_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_DataProvider_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_DataProvider_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References SoftwareDeployment.ProviderConnection'
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_dataProvider
    @resourceConnection_ID INT
   ,@dataProvider_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_DataProviderConnections_dataProvider @resourceConnection_ID, @dataProvider_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_dataProvider
    @resourceConnection_ID INT
   ,@dataProvider_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_DataProviderConnections @resourceConnection_ID = @resourceConnection_ID, @dataProvider_ID = @dataProvider_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_dataProvider
    @resourceConnection_ID INT
   ,@dataProvider_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_DataProviderConnections @resourceConnection_ID = @resourceConnection_ID, @dataProvider_ID = @dataProvider_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_dataProvider
   @resourceConnection_ID INT
AS
   DECLARE @Error INT
   DECLARE @dataProvider_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_4BDF2BDD197D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dataProvider_ID
            FROM SoftwareDeployment_ProviderConnection
            WHERE _ID = @resourceConnection_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dataProvider_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_DataProviderConnections @resourceConnection_ID, @dataProvider_ID
         FETCH NEXT FROM @_Cursor INTO @dataProvider_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_4BDF2BDD197D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_dataManager
    @clientConnection_ID INT
   ,@dataManager_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_SoftwareDeployment_DataManagerConnections_dataManager @clientConnection_ID, @dataManager_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_dataManager
    @clientConnection_ID INT
   ,@dataManager_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_SoftwareDeployment_DataManagerConnections @clientConnection_ID = @clientConnection_ID, @dataManager_ID = @dataManager_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_dataManager
    @clientConnection_ID INT
   ,@dataManager_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_SoftwareDeployment_DataManagerConnections @clientConnection_ID = @clientConnection_ID, @dataManager_ID = @dataManager_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_dataManager
   @clientConnection_ID INT
AS
   DECLARE @Error INT
   DECLARE @dataManager_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Software_7D7FDE42A9E6
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dataManager_ID
            FROM SoftwareDeployment_ProviderConnection
            WHERE _ID = @clientConnection_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dataManager_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_SoftwareDeployment_DataManagerConnections @clientConnection_ID, @dataManager_ID
         FETCH NEXT FROM @_Cursor INTO @dataManager_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Software_7D7FDE42A9E6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ProviderConnection_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ProviderConnection_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_ProviderConnection_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_ProviderConnection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_ProviderConnection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_ProviderConnection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_ProviderConnection_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_Component_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_Component_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_Component_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_Component_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_Component_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_client
    @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage_client
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_client
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_supplier
    @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage_supplier
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_supplier
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_SoftwareDeployment_PackageUsage_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_SoftwareDeployment_PackageUsage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_SoftwareDeployment_PackageUsage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_SoftwareDeployment_PackageUsage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_SoftwareDeployment_PackageUsage_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- TypeMapping References
--


PRINT 'References TypeMapping.TypeMapping'
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_sourceType
    @mappingFrom_ID INT
   ,@sourceType_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_TypeMapping_MappingSource_sourceType @mappingFrom_ID, @sourceType_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_sourceType
    @mappingFrom_ID INT
   ,@sourceType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_TypeMapping_MappingSource @mappingFrom_ID = @mappingFrom_ID, @sourceType_ID = @sourceType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_sourceType
    @mappingFrom_ID INT
   ,@sourceType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_TypeMapping_MappingSource @mappingFrom_ID = @mappingFrom_ID, @sourceType_ID = @sourceType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_sourceType
   @mappingFrom_ID INT
AS
   DECLARE @Error INT
   DECLARE @sourceType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_TypeMapp_AB2367EC0046
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT sourceType_ID
            FROM TypeMapping_TypeMapping
            WHERE _ID = @mappingFrom_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @sourceType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_TypeMapping_MappingSource @mappingFrom_ID, @sourceType_ID
         FETCH NEXT FROM @_Cursor INTO @sourceType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_TypeMapp_AB2367EC0046
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_targetType
    @mappingTo_ID INT
   ,@targetType_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_TypeMapping_MappingTarget_targetType @mappingTo_ID, @targetType_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_targetType
    @mappingTo_ID INT
   ,@targetType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_TypeMapping_MappingTarget @mappingTo_ID = @mappingTo_ID, @targetType_ID = @targetType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_targetType
    @mappingTo_ID INT
   ,@targetType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_TypeMapping_MappingTarget @mappingTo_ID = @mappingTo_ID, @targetType_ID = @targetType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_targetType
   @mappingTo_ID INT
AS
   DECLARE @Error INT
   DECLARE @targetType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_TypeMapp_4E1E62FADC48
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT targetType_ID
            FROM TypeMapping_TypeMapping
            WHERE _ID = @mappingTo_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @targetType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_TypeMapping_MappingTarget @mappingTo_ID, @targetType_ID
         FETCH NEXT FROM @_Cursor INTO @targetType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_TypeMapp_4E1E62FADC48
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeMapping_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeMapping_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeMapping_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeMapping_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeMapping_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeMapping_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeMapping_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_TypeMapping_TypeSystem_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_TypeMapping_TypeSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_TypeMapping_TypeSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_TypeMapping_TypeSystem_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_TypeMapping_TypeSystem_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Catalog_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Catalog_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Catalog_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Catalog_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Catalog_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Schema_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Schema_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Relational.Enumerations References
--


PRINT 'References Relational.NamedColumnSet'
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
AS
   SELECT _ID
      FROM Relational_Column
      WHERE optionScopeColumnSet_ID = @optionScopeColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_ColumnOptionsColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnOptionsColumnSet @optionScopeColumnSet_ID = @optionScopeColumnSet_ID, @optionScopeColumn_ID = @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnOptionsColumnSet @optionScopeColumnSet_ID = @optionScopeColumnSet_ID, @optionScopeColumn_ID = @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_optionScopeColumn
   @optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @optionScopeColumn_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_8524E8AB7829
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Relational_Column
            WHERE optionScopeColumnSet_ID = @optionScopeColumnSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @optionScopeColumn_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnOptionsColumnSet @optionScopeColumnSet_ID, @optionScopeColumn_ID
         FETCH NEXT FROM @_Cursor INTO @optionScopeColumn_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_8524E8AB7829
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_type
    @columnSet_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_ColumnSetOfStructuredType_type @columnSet_ID, @type_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnSetOfStructuredType @columnSet_ID = @columnSet_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnSetOfStructuredType @columnSet_ID = @columnSet_ID, @type_ID = @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_type
   @columnSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @type_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_2C19113EE18D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT type_ID
            FROM Relational_NamedColumnSet
            WHERE _ID = @columnSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @type_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnSetOfStructuredType @columnSet_ID, @type_ID
         FETCH NEXT FROM @_Cursor INTO @type_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_2C19113EE18D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_usingTrigger
    @usedColumnSet_ID INT
AS
   SELECT usingTrigger_ID
      FROM Relational_TriggerUsingColumnSet
      WHERE usedColumnSet_ID = @usedColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_usingTrigger
    @usedColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_TriggerUsingColumnSet_usingTrigger @usedColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_TriggerUsingColumnSet @usedColumnSet_ID = @usedColumnSet_ID, @usingTrigger_ID = @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_TriggerUsingColumnSet @usedColumnSet_ID = @usedColumnSet_ID, @usingTrigger_ID = @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_usingTrigger
   @usedColumnSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @usingTrigger_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_935CBE8BD447
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT usingTrigger_ID
            FROM Relational_TriggerUsingColumnSet
            WHERE usedColumnSet_ID = @usedColumnSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @usingTrigger_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_TriggerUsingColumnSet @usedColumnSet_ID, @usingTrigger_ID
         FETCH NEXT FROM @_Cursor INTO @usingTrigger_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_935CBE8BD447
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_NamedColumnSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_NamedColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_NamedColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_NamedColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_NamedColumnSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Relational.Table'
GO

CREATE PROCEDURE Get_Relational_Table_trigger
    @table_ID INT
AS
   SELECT trigger_ID
      FROM Relational_TableOwningTrigger
      WHERE table_ID = @table_ID
      ORDER BY trigger_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_trigger
    @table_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_TableOwningTrigger_trigger @table_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_trigger
    @table_ID INT
   ,@trigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_TableOwningTrigger @table_ID = @table_ID, @trigger_ID = @trigger_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_trigger
    @table_ID INT
   ,@trigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_TableOwningTrigger @table_ID = @table_ID, @trigger_ID = @trigger_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_trigger
   @table_ID INT
AS
   DECLARE @Error INT
   DECLARE @trigger_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relational_Table
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT trigger_ID
            FROM Relational_TableOwningTrigger
            WHERE table_ID = @table_ID
            ORDER BY trigger_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @trigger_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_TableOwningTrigger @table_ID, @trigger_ID
         FETCH NEXT FROM @_Cursor INTO @trigger_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relational_Table
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_optionScopeColumn
    @optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_optionScopeColumn
   @optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_type
    @columnSet_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_type @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_type @columnSet_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_type @columnSet_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_type
   @columnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_type @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_usingTrigger
    @usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_usingTrigger
    @usedColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_usingTrigger
   @usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Table_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Table_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Table_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Table_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Table_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_optionScopeColumn
    @optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_optionScopeColumn
    @optionScopeColumnSet_ID INT
   ,@optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID, @optionScopeColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_optionScopeColumn
   @optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_optionScopeColumn @optionScopeColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_type
    @columnSet_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_type @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_type @columnSet_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_type
    @columnSet_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_type @columnSet_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_type
   @columnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_type @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_usingTrigger
    @usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_usingTrigger
    @usedColumnSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_usingTrigger
    @usedColumnSet_ID INT
   ,@usingTrigger_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID, @usingTrigger_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_usingTrigger
   @usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Relational_NamedColumnSet_usingTrigger @usedColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_View_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_View_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_View_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_View_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_View_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_QueryColumnSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_QueryColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_QueryColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_QueryColumnSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_QueryColumnSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDataType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDataType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDataType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Relational.SQLDistinctType'
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_sqlSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_DistinctTypeHasSimpleType_sqlSimpleType @sqlDistinctType_ID, @sqlSimpleType_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_sqlSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_DistinctTypeHasSimpleType @sqlDistinctType_ID = @sqlDistinctType_ID, @sqlSimpleType_ID = @sqlSimpleType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_sqlSimpleType
    @sqlDistinctType_ID INT
   ,@sqlSimpleType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_DistinctTypeHasSimpleType @sqlDistinctType_ID = @sqlDistinctType_ID, @sqlSimpleType_ID = @sqlSimpleType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_sqlSimpleType
   @sqlDistinctType_ID INT
AS
   DECLARE @Error INT
   DECLARE @sqlSimpleType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_C10D1B0737DC
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT sqlSimpleType_ID
            FROM Relational_SQLDistinctType
            WHERE _ID = @sqlDistinctType_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @sqlSimpleType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_DistinctTypeHasSimpleType @sqlDistinctType_ID, @sqlSimpleType_ID
         FETCH NEXT FROM @_Cursor INTO @sqlSimpleType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_C10D1B0737DC
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLDistinctType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLDistinctType_type
    @alias_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataTypes_TypeAlias_type @alias_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLDistinctType_type
    @alias_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataTypes_TypeAlias_type @alias_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLDistinctType_type
    @alias_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataTypes_TypeAlias_type @alias_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLDistinctType_type
   @alias_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataTypes_TypeAlias_type @alias_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLSimpleType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLSimpleType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLSimpleType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLSimpleType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLSimpleType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Relational.SQLStructuredType'
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_referencingColumn
    @referencedTableType_ID INT
AS
   SELECT _ID
      FROM Relational_Column
      WHERE referencedTableType_ID = @referencedTableType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_referencingColumn
    @referencedTableType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_ColumnRefStructuredType_referencingColumn @referencedTableType_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_referencingColumn
    @referencedTableType_ID INT
   ,@referencingColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnRefStructuredType @referencedTableType_ID = @referencedTableType_ID, @referencingColumn_ID = @referencingColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_referencingColumn
    @referencedTableType_ID INT
   ,@referencingColumn_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnRefStructuredType @referencedTableType_ID = @referencedTableType_ID, @referencingColumn_ID = @referencingColumn_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_referencingColumn
   @referencedTableType_ID INT
AS
   DECLARE @Error INT
   DECLARE @referencingColumn_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_956AA236669E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Relational_Column
            WHERE referencedTableType_ID = @referencedTableType_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @referencingColumn_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnRefStructuredType @referencedTableType_ID, @referencingColumn_ID
         FETCH NEXT FROM @_Cursor INTO @referencingColumn_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_956AA236669E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_columnSet
    @type_ID INT
AS
   SELECT _ID
      FROM Relational_NamedColumnSet
      WHERE type_ID = @type_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_columnSet
    @type_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_ColumnSetOfStructuredType_columnSet @type_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_columnSet
    @type_ID INT
   ,@columnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnSetOfStructuredType @type_ID = @type_ID, @columnSet_ID = @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_columnSet
    @type_ID INT
   ,@columnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnSetOfStructuredType @type_ID = @type_ID, @columnSet_ID = @columnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_columnSet
   @type_ID INT
AS
   DECLARE @Error INT
   DECLARE @columnSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relation_E6775CD8F02F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Relational_NamedColumnSet
            WHERE type_ID = @type_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @columnSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnSetOfStructuredType @type_ID, @columnSet_ID
         FETCH NEXT FROM @_Cursor INTO @columnSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relation_E6775CD8F02F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLStructuredType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLStructuredType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLStructuredType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLStructuredType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLStructuredType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Relational.Column'
GO

CREATE PROCEDURE Get_Relational_Column_optionScopeColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_ColumnOptionsColumnSet_optionScopeColumnSet @optionScopeColumn_ID, @optionScopeColumnSet_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_optionScopeColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnOptionsColumnSet @optionScopeColumn_ID = @optionScopeColumn_ID, @optionScopeColumnSet_ID = @optionScopeColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_optionScopeColumnSet
    @optionScopeColumn_ID INT
   ,@optionScopeColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnOptionsColumnSet @optionScopeColumn_ID = @optionScopeColumn_ID, @optionScopeColumnSet_ID = @optionScopeColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_optionScopeColumnSet
   @optionScopeColumn_ID INT
AS
   DECLARE @Error INT
   DECLARE @optionScopeColumnSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relational_Column
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT optionScopeColumnSet_ID
            FROM Relational_Column
            WHERE _ID = @optionScopeColumn_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @optionScopeColumnSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnOptionsColumnSet @optionScopeColumn_ID, @optionScopeColumnSet_ID
         FETCH NEXT FROM @_Cursor INTO @optionScopeColumnSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relational_Column
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_referencedTableType
    @referencingColumn_ID INT
   ,@referencedTableType_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_ColumnRefStructuredType_referencedTableType @referencingColumn_ID, @referencedTableType_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_referencedTableType
    @referencingColumn_ID INT
   ,@referencedTableType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_ColumnRefStructuredType @referencingColumn_ID = @referencingColumn_ID, @referencedTableType_ID = @referencedTableType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_referencedTableType
    @referencingColumn_ID INT
   ,@referencedTableType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_ColumnRefStructuredType @referencingColumn_ID = @referencingColumn_ID, @referencedTableType_ID = @referencedTableType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_referencedTableType
   @referencingColumn_ID INT
AS
   DECLARE @Error INT
   DECLARE @referencedTableType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relational_Column
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT referencedTableType_ID
            FROM Relational_Column
            WHERE _ID = @referencingColumn_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @referencedTableType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_ColumnRefStructuredType @referencingColumn_ID, @referencedTableType_ID
         FETCH NEXT FROM @_Cursor INTO @referencedTableType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relational_Column
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Column_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Column_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Column_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Column_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Column_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Column_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Column_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_specification
    @method_ID INT
   ,@specification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Method_specification @method_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_specification
    @method_ID INT
   ,@specification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Method_specification @method_ID, @specification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_specification
    @method_ID INT
   ,@specification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Method_specification @method_ID, @specification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_specification
   @method_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Method_specification @method_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_parameter
    @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Procedure_parameter
    @behavioralFeature_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_parameter
    @behavioralFeature_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_parameter
   @behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_BehavioralFeature_parameter @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Procedure_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Procedure_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Procedure_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Procedure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Procedure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Procedure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Procedure_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Relational.Trigger'
GO

CREATE PROCEDURE Get_Relational_Trigger_table
    @trigger_ID INT
   ,@table_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Relational_TableOwningTrigger_table @trigger_ID, @table_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_table
    @trigger_ID INT
   ,@table_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_TableOwningTrigger @trigger_ID = @trigger_ID, @table_ID = @table_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_table
    @trigger_ID INT
   ,@table_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_TableOwningTrigger @trigger_ID = @trigger_ID, @table_ID = @table_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_table
   @trigger_ID INT
AS
   DECLARE @Error INT
   DECLARE @table_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relational_Trigger
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT table_ID
            FROM Relational_TableOwningTrigger
            WHERE trigger_ID = @trigger_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @table_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_TableOwningTrigger @trigger_ID, @table_ID
         FETCH NEXT FROM @_Cursor INTO @table_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relational_Trigger
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_usedColumnSet
    @usingTrigger_ID INT
AS
   SELECT usedColumnSet_ID
      FROM Relational_TriggerUsingColumnSet
      WHERE usingTrigger_ID = @usingTrigger_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Trigger_usedColumnSet
    @usingTrigger_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Relational_TriggerUsingColumnSet_usedColumnSet @usingTrigger_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_usedColumnSet
    @usingTrigger_ID INT
   ,@usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Relational_TriggerUsingColumnSet @usingTrigger_ID = @usingTrigger_ID, @usedColumnSet_ID = @usedColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_usedColumnSet
    @usingTrigger_ID INT
   ,@usedColumnSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Relational_TriggerUsingColumnSet @usingTrigger_ID = @usingTrigger_ID, @usedColumnSet_ID = @usedColumnSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_usedColumnSet
   @usingTrigger_ID INT
AS
   DECLARE @Error INT
   DECLARE @usedColumnSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Relational_Trigger
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT usedColumnSet_ID
            FROM Relational_TriggerUsingColumnSet
            WHERE usingTrigger_ID = @usingTrigger_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @usedColumnSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Relational_TriggerUsingColumnSet @usingTrigger_ID, @usedColumnSet_ID
         FETCH NEXT FROM @_Cursor INTO @usedColumnSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Relational_Trigger
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Trigger_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Trigger_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Trigger_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Trigger_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Trigger_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Trigger_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Trigger_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_indexedFeature
    @index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_Index_indexedFeature @index_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndex_indexedFeature
    @index_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_Index_indexedFeature @index_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_indexedFeature
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_Index_indexedFeature @index_ID, @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_indexedFeature
    @index_ID INT
   ,@indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_Index_indexedFeature @index_ID, @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_indexedFeature
   @index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_Index_indexedFeature @index_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_Index_spannedClass @index_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_Index_spannedClass @index_ID, @spannedClass_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_spannedClass
    @index_ID INT
   ,@spannedClass_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_Index_spannedClass @index_ID, @spannedClass_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_spannedClass
   @index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_Index_spannedClass @index_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndex_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndex_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndex_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndex_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndex_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndex_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndex_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_feature
    @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_feature @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint_feature
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_feature
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_feature @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_keyRelationship
    @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint_keyRelationship
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_keyRelationship
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_UniqueConstraint_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_UniqueConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_UniqueConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_UniqueConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_UniqueConstraint_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_feature
    @keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_KeyRelationship_feature @keyRelationship_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ForeignKey_feature
    @keyRelationship_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_KeyRelationship_feature @keyRelationship_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_feature
    @keyRelationship_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_KeyRelationship_feature @keyRelationship_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_feature
    @keyRelationship_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_KeyRelationship_feature @keyRelationship_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_feature
   @keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_KeyRelationship_feature @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_KeyRelationship_uniqueKey @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_KeyRelationship_uniqueKey @keyRelationship_ID, @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_uniqueKey
    @keyRelationship_ID INT
   ,@uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_KeyRelationship_uniqueKey @keyRelationship_ID, @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_uniqueKey
   @keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_KeyRelationship_uniqueKey @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ForeignKey_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ForeignKey_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ForeignKey_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ForeignKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ForeignKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ForeignKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ForeignKey_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_feature
    @indexedFeature_ID INT
   ,@feature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_IndexedFeature_feature @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_feature
    @indexedFeature_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_IndexedFeature_feature @indexedFeature_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_feature
    @indexedFeature_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_IndexedFeature_feature @indexedFeature_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_feature
   @indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_IndexedFeature_feature @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_index
    @indexedFeature_ID INT
   ,@index_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_IndexedFeature_index @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_index
    @indexedFeature_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_IndexedFeature_index @indexedFeature_ID, @index_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_index
    @indexedFeature_ID INT
   ,@index_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_IndexedFeature_index @indexedFeature_ID, @index_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_index
   @indexedFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_IndexedFeature_index @indexedFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndexColumn_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndexColumn_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLIndexColumn_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLIndexColumn_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLIndexColumn_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLIndexColumn_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLIndexColumn_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_feature
    @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_feature @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey_feature
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_feature
    @uniqueKey_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_UniqueKey_feature @uniqueKey_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_feature
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_feature @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_keyRelationship
    @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey_keyRelationship
    @uniqueKey_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_keyRelationship
    @uniqueKey_ID INT
   ,@keyRelationship_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID, @keyRelationship_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_keyRelationship
   @uniqueKey_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_KeysIndexes_UniqueKey_keyRelationship @uniqueKey_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_PrimaryKey_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_PrimaryKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_PrimaryKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_PrimaryKey_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_PrimaryKey_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_slot
    @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Row_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Instance_Object_slot @object_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_slot
   @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Row_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Row_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_Row_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_Row_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_Row_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_Row_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_Row_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnValue_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnValue_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnValue_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnValue_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnValue_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_ColumnValue_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnValue_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_ColumnValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_ColumnValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_ColumnValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_ColumnValue_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_constrainedElement
    @constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Constraint_constrainedElement @constraint_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_CheckConstraint_constrainedElement
    @constraint_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Constraint_constrainedElement @constraint_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_CheckConstraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Constraint_constrainedElement @constraint_ID, @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_CheckConstraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Constraint_constrainedElement @constraint_ID, @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_CheckConstraint_constrainedElement
   @constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Constraint_constrainedElement @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_CheckConstraint_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_CheckConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_CheckConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_CheckConstraint_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_CheckConstraint_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_CheckConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_CheckConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_CheckConstraint_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_CheckConstraint_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_CheckConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_CheckConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_CheckConstraint_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_CheckConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_CheckConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_CheckConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_CheckConstraint_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_RowSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_RowSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_RowSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_RowSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_RowSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_behavioralFeature @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Parameter_behavioralFeature @parameter_ID, @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_behavioralFeature
    @parameter_ID INT
   ,@behavioralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Parameter_behavioralFeature @parameter_ID, @behavioralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_behavioralFeature
   @parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_behavioralFeature @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_event
    @parameter_ID INT
   ,@event_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_event @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_event
    @parameter_ID INT
   ,@event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Parameter_event @parameter_ID, @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_event
    @parameter_ID INT
   ,@event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Parameter_event @parameter_ID, @event_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_event
   @parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_event @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_type
    @parameter_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_type @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_type
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Parameter_type @parameter_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_type
    @parameter_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Parameter_type @parameter_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_type
   @parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Parameter_type @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLParameter_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLParameter_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Relational_SQLParameter_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Relational_SQLParameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Relational_SQLParameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Relational_SQLParameter_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Relational_SQLParameter_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Field_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Field_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Field_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Field_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Field_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Field_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Field_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Record References
--


PRINT 'References Record.RecordDef'
GO

CREATE PROCEDURE Get_Record_RecordDef_file
    @record_ID INT
AS
   SELECT file_ID
      FROM Record_RecordToFile
      WHERE record_ID = @record_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_file
    @record_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Record_RecordToFile_file @record_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_file
    @record_ID INT
   ,@file_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Record_RecordToFile @record_ID = @record_ID, @file_ID = @file_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_file
    @record_ID INT
   ,@file_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Record_RecordToFile @record_ID = @record_ID, @file_ID = @file_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_file
   @record_ID INT
AS
   DECLARE @Error INT
   DECLARE @file_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Record_RecordDef
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT file_ID
            FROM Record_RecordToFile
            WHERE record_ID = @record_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @file_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Record_RecordToFile @record_ID, @file_ID
         FETCH NEXT FROM @_Cursor INTO @file_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Record_RecordDef
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordDef_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordDef_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordDef_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordDef_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordDef_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FixedOffsetField_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FixedOffsetField_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FixedOffsetField_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FixedOffsetField_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FixedOffsetField_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FixedOffsetField_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FixedOffsetField_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Record.RecordFile'
GO

CREATE PROCEDURE Get_Record_RecordFile_record
    @file_ID INT
AS
   SELECT record_ID
      FROM Record_RecordToFile
      WHERE file_ID = @file_ID
      ORDER BY record_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_record
    @file_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Record_RecordToFile_record @file_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_record
    @file_ID INT
   ,@record_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Record_RecordToFile @file_ID = @file_ID, @record_ID = @record_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_record
    @file_ID INT
   ,@record_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Record_RecordToFile @file_ID = @file_ID, @record_ID = @record_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_record
   @file_ID INT
AS
   DECLARE @Error INT
   DECLARE @record_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Record_RecordFile
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT record_ID
            FROM Record_RecordToFile
            WHERE file_ID = @file_ID
            ORDER BY record_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @record_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Record_RecordToFile @file_ID, @record_ID
         FETCH NEXT FROM @_Cursor INTO @record_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Record_RecordFile
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordFile_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordFile_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordFile_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordFile_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordFile_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FieldValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FieldValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FieldValue_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FieldValue_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FieldValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FieldValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FieldValue_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FieldValue_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FieldValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FieldValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FieldValue_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_FieldValue_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FieldValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FieldValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FieldValue_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_FieldValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_FieldValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_FieldValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_FieldValue_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_slot
    @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Record_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Instance_Object_slot @object_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_slot
   @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Record_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Record_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Record_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Record_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Record_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Record_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Record_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_RecordSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_RecordSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_RecordSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_RecordSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_RecordSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Record_Group_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Record_Group_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Record_Group_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Record_Group_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Record_Group_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Multidimensional References
--


PRINT 'References Multidimensional.Dimension'
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_dimensionedObject
    @dimension_ID INT
AS
   SELECT dimensionedObject_ID
      FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimension_ID = @dimension_ID
      ORDER BY dimensionedObject_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_dimensionedObject
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimensionedObject @dimension_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_dimensionedObject
    @dimension_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_DimensionsReferenceDimensionedObjects @dimension_ID = @dimension_ID, @dimensionedObject_ID = @dimensionedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_dimensionedObject
    @dimension_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_DimensionsReferenceDimensionedObjects @dimension_ID = @dimension_ID, @dimensionedObject_ID = @dimensionedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_dimensionedObject
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionedObject_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_56D295A88181
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimensionedObject_ID
            FROM Multidimensional_DimensionsReferenceDimensionedObjects
            WHERE dimension_ID = @dimension_ID
            ORDER BY dimensionedObject_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionedObject_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_DimensionsReferenceDimensionedObjects @dimension_ID, @dimensionedObject_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionedObject_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_56D295A88181
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_component
    @composite_ID INT
AS
   SELECT component_ID
      FROM Multidimensional_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_component
    @composite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_CompositesReferenceComponents_component @composite_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_component
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_CompositesReferenceComponents @composite_ID = @composite_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_component
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_CompositesReferenceComponents @composite_ID = @composite_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_component
   @composite_ID INT
AS
   DECLARE @Error INT
   DECLARE @component_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_F755D743CF55
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT component_ID
            FROM Multidimensional_CompositesReferenceComponents
            WHERE composite_ID = @composite_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @component_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_CompositesReferenceComponents @composite_ID, @component_ID
         FETCH NEXT FROM @_Cursor INTO @component_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_F755D743CF55
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_composite
    @component_ID INT
AS
   SELECT composite_ID
      FROM Multidimensional_CompositesReferenceComponents
      WHERE component_ID = @component_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_composite
    @component_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_CompositesReferenceComponents_composite @component_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_composite
    @component_ID INT
   ,@composite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_CompositesReferenceComponents @component_ID = @component_ID, @composite_ID = @composite_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_composite
    @component_ID INT
   ,@composite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_CompositesReferenceComponents @component_ID = @component_ID, @composite_ID = @composite_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_composite
   @component_ID INT
AS
   DECLARE @Error INT
   DECLARE @composite_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_401CCD7B3AB3
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT composite_ID
            FROM Multidimensional_CompositesReferenceComponents
            WHERE component_ID = @component_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @composite_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_CompositesReferenceComponents @component_ID, @composite_ID
         FETCH NEXT FROM @_Cursor INTO @composite_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_401CCD7B3AB3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_memberSet
    @dimension_ID INT
AS
   SELECT _ID
      FROM Multidimensional_MemberSet
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_memberSet
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_DimensionOwnsMemberSets_memberSet @dimension_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_memberSet
    @dimension_ID INT
   ,@memberSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_DimensionOwnsMemberSets @dimension_ID = @dimension_ID, @memberSet_ID = @memberSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_memberSet
    @dimension_ID INT
   ,@memberSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_DimensionOwnsMemberSets @dimension_ID = @dimension_ID, @memberSet_ID = @memberSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_memberSet
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_C9C1813FF92B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Multidimensional_MemberSet
            WHERE dimension_ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @memberSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_DimensionOwnsMemberSets @dimension_ID, @memberSet_ID
         FETCH NEXT FROM @_Cursor INTO @memberSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_C9C1813FF92B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Multidimensional_MDSchemaOwnsDimensions_schema @dimension_ID, @schema_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_MDSchemaOwnsDimensions @dimension_ID = @dimension_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensions @dimension_ID = @dimension_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_schema
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @schema_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_7266B674DC3F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT schema_ID
            FROM Multidimensional_Dimension
            WHERE _ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @schema_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensions @dimension_ID, @schema_ID
         FETCH NEXT FROM @_Cursor INTO @schema_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_7266B674DC3F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Dimension_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Dimension_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Multidimensional.DimensionedObject'
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_dimension
    @dimensionedObject_ID INT
AS
   SELECT dimension_ID
      FROM Multidimensional_DimensionsReferenceDimensionedObjects
      WHERE dimensionedObject_ID = @dimensionedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionedObject_dimension
    @dimensionedObject_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_DimensionsReferenceDimensionedObjects_dimension @dimensionedObject_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_dimension
    @dimensionedObject_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_DimensionsReferenceDimensionedObjects @dimensionedObject_ID = @dimensionedObject_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_dimension
    @dimensionedObject_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_DimensionsReferenceDimensionedObjects @dimensionedObject_ID = @dimensionedObject_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_dimension
   @dimensionedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_809FA4AE4AFD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimension_ID
            FROM Multidimensional_DimensionsReferenceDimensionedObjects
            WHERE dimensionedObject_ID = @dimensionedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_DimensionsReferenceDimensionedObjects @dimensionedObject_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_809FA4AE4AFD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_schema
    @dimensionedObject_ID INT
   ,@schema_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Multidimensional_MDSchemaOwnsDimensionedObjects_schema @dimensionedObject_ID, @schema_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_schema
    @dimensionedObject_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_MDSchemaOwnsDimensionedObjects @dimensionedObject_ID = @dimensionedObject_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_schema
    @dimensionedObject_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensionedObjects @dimensionedObject_ID = @dimensionedObject_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_schema
   @dimensionedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @schema_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_89C55B9B0E18
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT schema_ID
            FROM Multidimensional_DimensionedObject
            WHERE _ID = @dimensionedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @schema_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensionedObjects @dimensionedObject_ID, @schema_ID
         FETCH NEXT FROM @_Cursor INTO @schema_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_89C55B9B0E18
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionedObject_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionedObject_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_DimensionedObject_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_DimensionedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_DimensionedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_DimensionedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_DimensionedObject_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_slot
    @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Member_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Instance_Object_slot @object_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_slot
   @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Member_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Member_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Member_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Member_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Member_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Member_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Member_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Multidimensional.MemberSet'
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_dimension
    @memberSet_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Multidimensional_DimensionOwnsMemberSets_dimension @memberSet_ID, @dimension_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_dimension
    @memberSet_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_DimensionOwnsMemberSets @memberSet_ID = @memberSet_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_dimension
    @memberSet_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_DimensionOwnsMemberSets @memberSet_ID = @memberSet_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_dimension
   @memberSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_8C454FADC0B6
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimension_ID
            FROM Multidimensional_MemberSet
            WHERE _ID = @memberSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_DimensionOwnsMemberSets @memberSet_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_8C454FADC0B6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberValue_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberValue_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberValue_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberValue_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberValue_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberValue_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberValue_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberValue_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_MemberValue_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberValue_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberValue_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_MemberValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_MemberValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_MemberValue_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_MemberValue_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Multidimensional.Schema'
GO

CREATE PROCEDURE Get_Multidimensional_Schema_dimensionedObject
    @schema_ID INT
AS
   SELECT _ID
      FROM Multidimensional_DimensionedObject
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_dimensionedObject
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_MDSchemaOwnsDimensionedObjects_dimensionedObject @schema_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_dimensionedObject
    @schema_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_MDSchemaOwnsDimensionedObjects @schema_ID = @schema_ID, @dimensionedObject_ID = @dimensionedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_dimensionedObject
    @schema_ID INT
   ,@dimensionedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensionedObjects @schema_ID = @schema_ID, @dimensionedObject_ID = @dimensionedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_dimensionedObject
   @schema_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionedObject_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_DCBF13A5EB22
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Multidimensional_DimensionedObject
            WHERE schema_ID = @schema_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionedObject_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensionedObjects @schema_ID, @dimensionedObject_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionedObject_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_DCBF13A5EB22
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_dimension
    @schema_ID INT
AS
   SELECT _ID
      FROM Multidimensional_Dimension
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_dimension
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Multidimensional_MDSchemaOwnsDimensions_dimension @schema_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_dimension
    @schema_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Multidimensional_MDSchemaOwnsDimensions @schema_ID = @schema_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_dimension
    @schema_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensions @schema_ID = @schema_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_dimension
   @schema_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Multidim_15A2CE9C0652
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Multidimensional_Dimension
            WHERE schema_ID = @schema_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Multidimensional_MDSchemaOwnsDimensions @schema_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Multidim_15A2CE9C0652
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Multidimensional_Schema_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Multidimensional_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Multidimensional_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Multidimensional_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Multidimensional_Schema_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- XML References
--


PRINT 'References XML.Schema'
GO

CREATE PROCEDURE Get_XML_Schema_elementType
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_elementType
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_elementType
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_elementType
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_elementType
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Schema_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Schema_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.ElementType'
GO

CREATE PROCEDURE Get_XML_ElementType_schema
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_schema
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_schema
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_schema
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_attribute
    @owner_ID INT
AS
   SELECT feature_ID
      FROM Core_ClassifierFeature
      WHERE owner_ID = @owner_ID
      ORDER BY feature_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_attribute
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ClassifierFeature_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_attribute
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ClassifierFeature @owner_ID = @owner_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_attribute
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ClassifierFeature @owner_ID = @owner_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_attribute
   @owner_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM Core_ClassifierFeature
            WHERE owner_ID = @owner_ID
            ORDER BY feature_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ClassifierFeature @owner_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_content
    @elementType_ID INT
   ,@content_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_ElementTypeContent_content @elementType_ID, @content_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_content
    @elementType_ID INT
   ,@content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_ElementTypeContent @elementType_ID = @elementType_ID, @content_ID = @content_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_content
    @elementType_ID INT
   ,@content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_ElementTypeContent @elementType_ID = @elementType_ID, @content_ID = @content_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_content
   @elementType_ID INT
AS
   DECLARE @Error INT
   DECLARE @content_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_ElementType
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT content_ID
            FROM XML_ElementType
            WHERE _ID = @elementType_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @content_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_ElementTypeContent @elementType_ID, @content_ID
         FETCH NEXT FROM @_Cursor INTO @content_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_ElementType
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementType_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementType_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementType_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.Attribute'
GO

CREATE PROCEDURE Get_XML_Attribute_elementType
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ClassifierFeature_owner @feature_ID, @owner_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_elementType
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ClassifierFeature @feature_ID = @feature_ID, @owner_ID = @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_elementType
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ClassifierFeature @feature_ID = @feature_ID, @owner_ID = @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_elementType
   @feature_ID INT
AS
   DECLARE @Error INT
   DECLARE @owner_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Attribute
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT owner_ID
            FROM Core_ClassifierFeature
            WHERE feature_ID = @feature_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @owner_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ClassifierFeature @feature_ID, @owner_ID
         FETCH NEXT FROM @_Cursor INTO @owner_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Attribute
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Attribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Attribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Attribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Attribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Attribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.Content'
GO

CREATE PROCEDURE Get_XML_Content_elementType
    @content_ID INT
AS
   SELECT _ID
      FROM XML_ElementType
      WHERE content_ID = @content_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content_elementType
    @content_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_ElementTypeContent_elementType @content_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_ElementTypeContent @content_ID = @content_ID, @elementType_ID = @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_ElementTypeContent @content_ID = @content_ID, @elementType_ID = @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_elementType
   @content_ID INT
AS
   DECLARE @Error INT
   DECLARE @elementType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Content
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM XML_ElementType
            WHERE content_ID = @content_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @elementType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_ElementTypeContent @content_ID, @elementType_ID
         FETCH NEXT FROM @_Cursor INTO @elementType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Content
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_ownedElementType
    @ownerContent_ID INT
AS
   SELECT ownedElementType_ID
      FROM XML_ContentElementTypeReference
      WHERE ownerContent_ID = @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content_ownedElementType
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_ContentElementTypeReference_ownedElementType @ownerContent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_ContentElementTypeReference @ownerContent_ID = @ownerContent_ID, @ownedElementType_ID = @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_ContentElementTypeReference @ownerContent_ID = @ownerContent_ID, @ownedElementType_ID = @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_ownedElementType
   @ownerContent_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElementType_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Content
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT ownedElementType_ID
            FROM XML_ContentElementTypeReference
            WHERE ownerContent_ID = @ownerContent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElementType_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_ContentElementTypeReference @ownerContent_ID, @ownedElementType_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElementType_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Content
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Content_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Content_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Content_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Content_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Content_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.ElementContent'
GO

CREATE PROCEDURE Get_XML_ElementContent_ownedContent
    @ownerContent_ID INT
AS
   SELECT ownedContent_ID
      FROM XML_OwnedElementContent
      WHERE ownerContent_ID = @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_ownedContent
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_OwnedElementContent_ownedContent @ownerContent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_ownedContent
    @ownerContent_ID INT
   ,@ownedContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_OwnedElementContent @ownerContent_ID = @ownerContent_ID, @ownedContent_ID = @ownedContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_ownedContent
    @ownerContent_ID INT
   ,@ownedContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_OwnedElementContent @ownerContent_ID = @ownerContent_ID, @ownedContent_ID = @ownedContent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_ownedContent
   @ownerContent_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedContent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_ElementContent
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT ownedContent_ID
            FROM XML_OwnedElementContent
            WHERE ownerContent_ID = @ownerContent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedContent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_OwnedElementContent @ownerContent_ID, @ownedContent_ID
         FETCH NEXT FROM @_Cursor INTO @ownedContent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_ElementContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_ownerContent
    @ownedContent_ID INT
AS
   SELECT ownerContent_ID
      FROM XML_OwnedElementContent
      WHERE ownedContent_ID = @ownedContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_ownerContent
    @ownedContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_OwnedElementContent_ownerContent @ownedContent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_ownerContent
    @ownedContent_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_OwnedElementContent @ownedContent_ID = @ownedContent_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_ownerContent
    @ownedContent_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_OwnedElementContent @ownedContent_ID = @ownedContent_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_ownerContent
   @ownedContent_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownerContent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_ElementContent
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT ownerContent_ID
            FROM XML_OwnedElementContent
            WHERE ownedContent_ID = @ownedContent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_OwnedElementContent @ownedContent_ID, @ownerContent_ID
         FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_ElementContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_elementType
    @content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_elementType @content_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_elementType
    @content_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_Content_elementType @content_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_XML_Content_elementType @content_ID, @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_XML_Content_elementType @content_ID, @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_elementType
   @content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_elementType @content_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_ownedElementType
    @ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_ownedElementType @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_ownedElementType
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_Content_ownedElementType @ownerContent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_XML_Content_ownedElementType @ownerContent_ID, @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_XML_Content_ownedElementType @ownerContent_ID, @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_ownedElementType
   @ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_ownedElementType @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementContent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementContent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.MixedContent'
GO

CREATE PROCEDURE Get_XML_MixedContent_text
    @ownerContent_ID INT
   ,@text_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_MixedContentText_text @ownerContent_ID, @text_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_text
    @ownerContent_ID INT
   ,@text_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_MixedContentText @ownerContent_ID = @ownerContent_ID, @text_ID = @text_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_text
    @ownerContent_ID INT
   ,@text_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_MixedContentText @ownerContent_ID = @ownerContent_ID, @text_ID = @text_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_text
   @ownerContent_ID INT
AS
   DECLARE @Error INT
   DECLARE @text_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_MixedContent
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM XML_Text
            WHERE ownerContent_ID = @ownerContent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @text_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_MixedContentText @ownerContent_ID, @text_ID
         FETCH NEXT FROM @_Cursor INTO @text_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_MixedContent
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_elementType
    @content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_elementType @content_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent_elementType
    @content_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_Content_elementType @content_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_XML_Content_elementType @content_ID, @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_elementType
    @content_ID INT
   ,@elementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_XML_Content_elementType @content_ID, @elementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_elementType
   @content_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_elementType @content_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_ownedElementType
    @ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_ownedElementType @ownerContent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent_ownedElementType
    @ownerContent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_Content_ownedElementType @ownerContent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_XML_Content_ownedElementType @ownerContent_ID, @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_ownedElementType
    @ownerContent_ID INT
   ,@ownedElementType_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_XML_Content_ownedElementType @ownerContent_ID, @ownedElementType_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_ownedElementType
   @ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_XML_Content_ownedElementType @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_MixedContent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_MixedContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_MixedContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_MixedContent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_MixedContent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.ElementTypeReference'
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_ownerContent
    @ownedElementType_ID INT
AS
   SELECT ownerContent_ID
      FROM XML_ContentElementTypeReference
      WHERE ownedElementType_ID = @ownedElementType_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeReference_ownerContent
    @ownedElementType_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_XML_ContentElementTypeReference_ownerContent @ownedElementType_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_ownerContent
    @ownedElementType_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_ContentElementTypeReference @ownedElementType_ID = @ownedElementType_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_ownerContent
    @ownedElementType_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_ContentElementTypeReference @ownedElementType_ID = @ownedElementType_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_ownerContent
   @ownedElementType_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownerContent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Elem_662EBB26B5A5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT ownerContent_ID
            FROM XML_ContentElementTypeReference
            WHERE ownedElementType_ID = @ownedElementType_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_ContentElementTypeReference @ownedElementType_ID, @ownerContent_ID
         FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Elem_662EBB26B5A5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeReference_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeReference_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_ElementTypeReference_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_ElementTypeReference_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_ElementTypeReference_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_ElementTypeReference_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_ElementTypeReference_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References XML.Text'
GO

CREATE PROCEDURE Get_XML_Text_ownerContent
    @text_ID INT
   ,@ownerContent_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_XML_MixedContentText_ownerContent @text_ID, @ownerContent_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_ownerContent
    @text_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_XML_MixedContentText @text_ID = @text_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_ownerContent
    @text_ID INT
   ,@ownerContent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_XML_MixedContentText @text_ID = @text_ID, @ownerContent_ID = @ownerContent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_ownerContent
   @text_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownerContent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_XML_Text
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM XML_MixedContent
            WHERE text_ID = @text_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_XML_MixedContentText @text_ID, @ownerContent_ID
         FETCH NEXT FROM @_Cursor INTO @ownerContent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_XML_Text
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Text_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Text_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Text_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Text_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Text_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Text_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Text_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_slot
    @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Element_slot
    @object_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Instance_Object_slot @object_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_slot
    @object_ID INT
   ,@slot_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Object_slot @object_ID, @slot_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_slot
   @object_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Object_slot @object_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_classifier
    @instance_ID INT
   ,@classifier_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_classifier
    @instance_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Instance_Instance_classifier @instance_ID, @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_classifier
   @instance_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Instance_Instance_classifier @instance_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Element_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Element_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Element_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Element_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Element_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Element_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Element_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_XML_Document_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_XML_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_XML_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_XML_Document_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_XML_Document_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Transformation References
--


PRINT 'References Transformation.Transformation'
GO

CREATE PROCEDURE Get_Transformation_Transformation_source
    @sourceTransformation_ID INT
AS
   SELECT source_ID
      FROM Transformation_TransformationSource
      WHERE sourceTransformation_ID = @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationSource_source @sourceTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationSource @sourceTransformation_ID = @sourceTransformation_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationSource @sourceTransformation_ID = @sourceTransformation_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_source
   @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   DECLARE @source_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_8D4235F966A5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT source_ID
            FROM Transformation_TransformationSource
            WHERE sourceTransformation_ID = @sourceTransformation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @source_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationSource @sourceTransformation_ID, @source_ID
         FETCH NEXT FROM @_Cursor INTO @source_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_8D4235F966A5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_target
    @targetTransformation_ID INT
AS
   SELECT target_ID
      FROM Transformation_TransformationTarget
      WHERE targetTransformation_ID = @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationTarget_target @targetTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationTarget @targetTransformation_ID = @targetTransformation_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationTarget @targetTransformation_ID = @targetTransformation_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_target
   @targetTransformation_ID INT
AS
   DECLARE @Error INT
   DECLARE @target_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_651C501BD840
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT target_ID
            FROM Transformation_TransformationTarget
            WHERE targetTransformation_ID = @targetTransformation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @target_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationTarget @targetTransformation_ID, @target_ID
         FETCH NEXT FROM @_Cursor INTO @target_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_651C501BD840
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_use
    @client_ID INT
AS
   SELECT clientDependency_ID
      FROM Core_DependencyClient
      WHERE client_ID = @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_use
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_use
   @client_ID INT
AS
   DECLARE @Error INT
   DECLARE @clientDependency_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_9A67981517A9
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT clientDependency_ID
            FROM Core_DependencyClient
            WHERE client_ID = @client_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @client_ID, @clientDependency_ID
         FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_9A67981517A9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_Transformation_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_Transformation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_Transformation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_Transformation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_Transformation_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.DataObjectSet'
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_element
    @set_ID INT
AS
   SELECT element_ID
      FROM Transformation_DataObjectSetElement
      WHERE set_ID = @set_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_element
    @set_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_DataObjectSetElement_element @set_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_element
    @set_ID INT
   ,@element_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_DataObjectSetElement @set_ID = @set_ID, @element_ID = @element_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_element
    @set_ID INT
   ,@element_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_DataObjectSetElement @set_ID = @set_ID, @element_ID = @element_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_element
   @set_ID INT
AS
   DECLARE @Error INT
   DECLARE @element_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_AA15AC91E8F5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT element_ID
            FROM Transformation_DataObjectSetElement
            WHERE set_ID = @set_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @element_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_DataObjectSetElement @set_ID, @element_ID
         FETCH NEXT FROM @_Cursor INTO @element_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_AA15AC91E8F5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_sourceTransformation
    @source_ID INT
AS
   SELECT sourceTransformation_ID
      FROM Transformation_TransformationSource
      WHERE source_ID = @source_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_sourceTransformation
    @source_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationSource_sourceTransformation @source_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_sourceTransformation
    @source_ID INT
   ,@sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationSource @source_ID = @source_ID, @sourceTransformation_ID = @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_sourceTransformation
    @source_ID INT
   ,@sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationSource @source_ID = @source_ID, @sourceTransformation_ID = @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_sourceTransformation
   @source_ID INT
AS
   DECLARE @Error INT
   DECLARE @sourceTransformation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_A166E938EA3A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT sourceTransformation_ID
            FROM Transformation_TransformationSource
            WHERE source_ID = @source_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @sourceTransformation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationSource @source_ID, @sourceTransformation_ID
         FETCH NEXT FROM @_Cursor INTO @sourceTransformation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_A166E938EA3A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_targetTransformation
    @target_ID INT
AS
   SELECT targetTransformation_ID
      FROM Transformation_TransformationTarget
      WHERE target_ID = @target_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_targetTransformation
    @target_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationTarget_targetTransformation @target_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_targetTransformation
    @target_ID INT
   ,@targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationTarget @target_ID = @target_ID, @targetTransformation_ID = @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_targetTransformation
    @target_ID INT
   ,@targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationTarget @target_ID = @target_ID, @targetTransformation_ID = @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_targetTransformation
   @target_ID INT
AS
   DECLARE @Error INT
   DECLARE @targetTransformation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_E732DC6F70FB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT targetTransformation_ID
            FROM Transformation_TransformationTarget
            WHERE target_ID = @target_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @targetTransformation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationTarget @target_ID, @targetTransformation_ID
         FETCH NEXT FROM @_Cursor INTO @targetTransformation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_E732DC6F70FB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_DataObjectSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_DataObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_DataObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_DataObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_DataObjectSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.TransformationTask'
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_transformation
    @task_ID INT
AS
   SELECT transformation_ID
      FROM Transformation_TransformationTaskElement
      WHERE task_ID = @task_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_transformation
    @task_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationTaskElement_transformation @task_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_transformation
    @task_ID INT
   ,@transformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationTaskElement @task_ID = @task_ID, @transformation_ID = @transformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_transformation
    @task_ID INT
   ,@transformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationTaskElement @task_ID = @task_ID, @transformation_ID = @transformation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_transformation
   @task_ID INT
AS
   DECLARE @Error INT
   DECLARE @transformation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_6E2C9E68DFFB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transformation_ID
            FROM Transformation_TransformationTaskElement
            WHERE task_ID = @task_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transformation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationTaskElement @task_ID, @transformation_ID
         FETCH NEXT FROM @_Cursor INTO @transformation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_6E2C9E68DFFB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_inverseTask
    @originalTask_ID INT
AS
   SELECT inverseTask_ID
      FROM Transformation_InverseTransformationTask
      WHERE originalTask_ID = @originalTask_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_inverseTask
    @originalTask_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_InverseTransformationTask_inverseTask @originalTask_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_inverseTask
    @originalTask_ID INT
   ,@inverseTask_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_InverseTransformationTask @originalTask_ID = @originalTask_ID, @inverseTask_ID = @inverseTask_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_inverseTask
    @originalTask_ID INT
   ,@inverseTask_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_InverseTransformationTask @originalTask_ID = @originalTask_ID, @inverseTask_ID = @inverseTask_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_inverseTask
   @originalTask_ID INT
AS
   DECLARE @Error INT
   DECLARE @inverseTask_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_69F9576B2280
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT inverseTask_ID
            FROM Transformation_InverseTransformationTask
            WHERE originalTask_ID = @originalTask_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @inverseTask_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_InverseTransformationTask @originalTask_ID, @inverseTask_ID
         FETCH NEXT FROM @_Cursor INTO @inverseTask_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_69F9576B2280
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_originalTask
    @inverseTask_ID INT
AS
   SELECT originalTask_ID
      FROM Transformation_InverseTransformationTask
      WHERE inverseTask_ID = @inverseTask_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_originalTask
    @inverseTask_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_InverseTransformationTask_originalTask @inverseTask_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_originalTask
    @inverseTask_ID INT
   ,@originalTask_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_InverseTransformationTask @inverseTask_ID = @inverseTask_ID, @originalTask_ID = @originalTask_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_originalTask
    @inverseTask_ID INT
   ,@originalTask_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_InverseTransformationTask @inverseTask_ID = @inverseTask_ID, @originalTask_ID = @originalTask_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_originalTask
   @inverseTask_ID INT
AS
   DECLARE @Error INT
   DECLARE @originalTask_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_627734744A5B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT originalTask_ID
            FROM Transformation_InverseTransformationTask
            WHERE inverseTask_ID = @inverseTask_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @originalTask_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_InverseTransformationTask @inverseTask_ID, @originalTask_ID
         FETCH NEXT FROM @_Cursor INTO @originalTask_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_627734744A5B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTask_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTask_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTask_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTask_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTask_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.TransformationStep'
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_task
    @step_ID INT
   ,@task_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_TransformationStepTask_task @step_ID, @task_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_task
    @step_ID INT
   ,@task_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_TransformationStepTask @step_ID = @step_ID, @task_ID = @task_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_task
    @step_ID INT
   ,@task_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_TransformationStepTask @step_ID = @step_ID, @task_ID = @task_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_task
   @step_ID INT
AS
   DECLARE @Error INT
   DECLARE @task_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_AD47A1B0C12D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT task_ID
            FROM Transformation_TransformationStep
            WHERE _ID = @step_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @task_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_TransformationStepTask @step_ID, @task_ID
         FETCH NEXT FROM @_Cursor INTO @task_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_AD47A1B0C12D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_activity
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_activity
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_activity
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_activity
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_A0CF25081668
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_A0CF25081668
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_precedence
    @constrainedElement_ID INT
AS
   SELECT constraint_ID
      FROM Core_ElementConstraint
      WHERE constrainedElement_ID = @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_precedence
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementConstraint_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_precedence
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementConstraint @constrainedElement_ID = @constrainedElement_ID, @constraint_ID = @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_precedence
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementConstraint @constrainedElement_ID = @constrainedElement_ID, @constraint_ID = @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_precedence
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @constraint_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_F1065A41BD8B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT constraint_ID
            FROM Core_ElementConstraint
            WHERE constrainedElement_ID = @constrainedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @constraint_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementConstraint @constrainedElement_ID, @constraint_ID
         FETCH NEXT FROM @_Cursor INTO @constraint_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_F1065A41BD8B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_precedingStep
    @client_ID INT
AS
   SELECT clientDependency_ID
      FROM Core_DependencyClient
      WHERE client_ID = @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_precedingStep
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_precedingStep
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_precedingStep
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @client_ID = @client_ID, @clientDependency_ID = @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_precedingStep
   @client_ID INT
AS
   DECLARE @Error INT
   DECLARE @clientDependency_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_9067E1C92B04
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT clientDependency_ID
            FROM Core_DependencyClient
            WHERE client_ID = @client_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @client_ID, @clientDependency_ID
         FETCH NEXT FROM @_Cursor INTO @clientDependency_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_9067E1C92B04
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_succeedingStep
    @supplier_ID INT
AS
   SELECT supplierDependency_ID
      FROM Core_DependencySupplier
      WHERE supplier_ID = @supplier_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_succeedingStep
    @supplier_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencySupplier_supplierDependency @supplier_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_succeedingStep
    @supplier_ID INT
   ,@supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencySupplier @supplier_ID = @supplier_ID, @supplierDependency_ID = @supplierDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_succeedingStep
    @supplier_ID INT
   ,@supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencySupplier @supplier_ID = @supplier_ID, @supplierDependency_ID = @supplierDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_succeedingStep
   @supplier_ID INT
AS
   DECLARE @Error INT
   DECLARE @supplierDependency_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_A7FE80E1CE5B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT supplierDependency_ID
            FROM Core_DependencySupplier
            WHERE supplier_ID = @supplier_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @supplierDependency_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencySupplier @supplier_ID, @supplierDependency_ID
         FETCH NEXT FROM @_Cursor INTO @supplierDependency_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_A7FE80E1CE5B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationStep_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationStep_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.TransformationActivity'
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_step
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_step
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_step
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_step
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_step
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_8C4A9A6811D7
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_8C4A9A6811D7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationActivity_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationActivity_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationActivity_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationActivity_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationActivity_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_constrainedElement
    @constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Constraint_constrainedElement @constraint_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_PrecedenceConstraint_constrainedElement
    @constraint_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Constraint_constrainedElement @constraint_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_PrecedenceConstraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Constraint_constrainedElement @constraint_ID, @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_PrecedenceConstraint_constrainedElement
    @constraint_ID INT
   ,@constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Constraint_constrainedElement @constraint_ID, @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_PrecedenceConstraint_constrainedElement
   @constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Constraint_constrainedElement @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_PrecedenceConstraint_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_PrecedenceConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_PrecedenceConstraint_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_PrecedenceConstraint_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_PrecedenceConstraint_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_PrecedenceConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_PrecedenceConstraint_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_PrecedenceConstraint_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_PrecedenceConstraint_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_PrecedenceConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_PrecedenceConstraint_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_PrecedenceConstraint_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_PrecedenceConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_PrecedenceConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_PrecedenceConstraint_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_PrecedenceConstraint_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.TransformationUse'
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_transformation
    @clientDependency_ID INT
AS
   SELECT client_ID
      FROM Core_DependencyClient
      WHERE clientDependency_ID = @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_transformation
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_transformation
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_transformation
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_transformation
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @client_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_73A77F54C5B1
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT client_ID
            FROM Core_DependencyClient
            WHERE clientDependency_ID = @clientDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @client_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID, @client_ID
         FETCH NEXT FROM @_Cursor INTO @client_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_73A77F54C5B1
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_operation
    @supplierDependency_ID INT
AS
   SELECT supplier_ID
      FROM Core_DependencySupplier
      WHERE supplierDependency_ID = @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_operation
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencySupplier_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_operation
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_operation
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_operation
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @supplier_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_57A8BAB7EE3B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT supplier_ID
            FROM Core_DependencySupplier
            WHERE supplierDependency_ID = @supplierDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @supplier_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID, @supplier_ID
         FETCH NEXT FROM @_Cursor INTO @supplier_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_57A8BAB7EE3B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_client
    @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_client
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_client
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_supplier
    @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_supplier
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_supplier
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationUse_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationUse_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationUse_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationUse_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationUse_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.TransformationMap'
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_classifierMap
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_classifierMap
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_classifierMap
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_EFED2B23D8E4
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_EFED2B23D8E4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_source
    @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_source @sourceTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_source
   @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_target
    @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_target @targetTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_target
   @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_use
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_use
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_use @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_use
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_source
    @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_source @sourceTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_source
   @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_target
    @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_target @targetTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_target
   @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_use
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_use
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_use @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_use
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_TransformationTree_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_TransformationTree_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_TransformationTree_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_TransformationTree_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_TransformationTree_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.ClassifierMap'
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_source
    @classifierMap_ID INT
AS
   SELECT source_ID
      FROM Transformation_ClassifierMapSource
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_source
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_ClassifierMapSource_source @classifierMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_source
    @classifierMap_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapSource @classifierMap_ID = @classifierMap_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_source
    @classifierMap_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapSource @classifierMap_ID = @classifierMap_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_source
   @classifierMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @source_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_27A226413DFD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT source_ID
            FROM Transformation_ClassifierMapSource
            WHERE classifierMap_ID = @classifierMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @source_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapSource @classifierMap_ID, @source_ID
         FETCH NEXT FROM @_Cursor INTO @source_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_27A226413DFD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_target
    @classifierMap_ID INT
AS
   SELECT target_ID
      FROM Transformation_ClassifierMapTarget
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_target
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_ClassifierMapTarget_target @classifierMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_target
    @classifierMap_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapTarget @classifierMap_ID = @classifierMap_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_target
    @classifierMap_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapTarget @classifierMap_ID = @classifierMap_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_target
   @classifierMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @target_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_9B2E2D9C5933
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT target_ID
            FROM Transformation_ClassifierMapTarget
            WHERE classifierMap_ID = @classifierMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @target_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapTarget @classifierMap_ID, @target_ID
         FETCH NEXT FROM @_Cursor INTO @target_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_9B2E2D9C5933
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_transformationMap
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_transformationMap
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_transformationMap
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_transformationMap
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_BA3FF999F2B5
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_BA3FF999F2B5
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_featureMap
    @classifierMap_ID INT
AS
   SELECT _ID
      FROM Transformation_FeatureMap
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_featureMap
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_ClassifierMapToFeatureMap_featureMap @classifierMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_featureMap
    @classifierMap_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapToFeatureMap @classifierMap_ID = @classifierMap_ID, @featureMap_ID = @featureMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_featureMap
    @classifierMap_ID INT
   ,@featureMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapToFeatureMap @classifierMap_ID = @classifierMap_ID, @featureMap_ID = @featureMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_featureMap
   @classifierMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @featureMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_F7857102A686
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Transformation_FeatureMap
            WHERE classifierMap_ID = @classifierMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @featureMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapToFeatureMap @classifierMap_ID, @featureMap_ID
         FETCH NEXT FROM @_Cursor INTO @featureMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_F7857102A686
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_cfMap
    @classifierMap_ID INT
AS
   SELECT _ID
      FROM Transformation_ClassifierFeatureMap
      WHERE classifierMap_ID = @classifierMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_cfMap
    @classifierMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_ClassifierMapToCFMap_cfMap @classifierMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_cfMap
    @classifierMap_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapToCFMap @classifierMap_ID = @classifierMap_ID, @cfMap_ID = @cfMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_cfMap
    @classifierMap_ID INT
   ,@cfMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapToCFMap @classifierMap_ID = @classifierMap_ID, @cfMap_ID = @cfMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_cfMap
   @classifierMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @cfMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_9E6E353B22ED
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Transformation_ClassifierFeatureMap
            WHERE classifierMap_ID = @classifierMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cfMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapToCFMap @classifierMap_ID, @cfMap_ID
         FETCH NEXT FROM @_Cursor INTO @cfMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_9E6E353B22ED
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.FeatureMap'
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_source
    @featureMap_ID INT
AS
   SELECT source_ID
      FROM Transformation_FeatureMapSource
      WHERE featureMap_ID = @featureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap_source
    @featureMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_FeatureMapSource_source @featureMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_source
    @featureMap_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_FeatureMapSource @featureMap_ID = @featureMap_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_source
    @featureMap_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_FeatureMapSource @featureMap_ID = @featureMap_ID, @source_ID = @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_source
   @featureMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @source_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_58863D1B2588
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT source_ID
            FROM Transformation_FeatureMapSource
            WHERE featureMap_ID = @featureMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @source_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_FeatureMapSource @featureMap_ID, @source_ID
         FETCH NEXT FROM @_Cursor INTO @source_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_58863D1B2588
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_target
    @featureMap_ID INT
AS
   SELECT target_ID
      FROM Transformation_FeatureMapTarget
      WHERE featureMap_ID = @featureMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap_target
    @featureMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_FeatureMapTarget_target @featureMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_target
    @featureMap_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_FeatureMapTarget @featureMap_ID = @featureMap_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_target
    @featureMap_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_FeatureMapTarget @featureMap_ID = @featureMap_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_target
   @featureMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @target_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_BDA9BC07D646
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT target_ID
            FROM Transformation_FeatureMapTarget
            WHERE featureMap_ID = @featureMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @target_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_FeatureMapTarget @featureMap_ID, @target_ID
         FETCH NEXT FROM @_Cursor INTO @target_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_BDA9BC07D646
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_classifierMap
    @featureMap_ID INT
   ,@classifierMap_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_ClassifierMapToFeatureMap_classifierMap @featureMap_ID, @classifierMap_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_classifierMap
    @featureMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapToFeatureMap @featureMap_ID = @featureMap_ID, @classifierMap_ID = @classifierMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_classifierMap
    @featureMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapToFeatureMap @featureMap_ID = @featureMap_ID, @classifierMap_ID = @classifierMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_classifierMap
   @featureMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @classifierMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_3B56097BE773
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT classifierMap_ID
            FROM Transformation_FeatureMap
            WHERE _ID = @featureMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @classifierMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapToFeatureMap @featureMap_ID, @classifierMap_ID
         FETCH NEXT FROM @_Cursor INTO @classifierMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_3B56097BE773
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_FeatureMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_FeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_FeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_FeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_FeatureMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.StepPrecedence'
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_precedingStep
    @supplierDependency_ID INT
AS
   SELECT supplier_ID
      FROM Core_DependencySupplier
      WHERE supplierDependency_ID = @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_precedingStep
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencySupplier_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_precedingStep
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_precedingStep
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID = @supplierDependency_ID, @supplier_ID = @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_precedingStep
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @supplier_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_84EF11299249
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT supplier_ID
            FROM Core_DependencySupplier
            WHERE supplierDependency_ID = @supplierDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @supplier_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencySupplier @supplierDependency_ID, @supplier_ID
         FETCH NEXT FROM @_Cursor INTO @supplier_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_84EF11299249
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_succeedingStep
    @clientDependency_ID INT
AS
   SELECT client_ID
      FROM Core_DependencyClient
      WHERE clientDependency_ID = @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_succeedingStep
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_DependencyClient_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_succeedingStep
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_succeedingStep
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID = @clientDependency_ID, @client_ID = @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_succeedingStep
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   DECLARE @client_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_3D5FADACD21C
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT client_ID
            FROM Core_DependencyClient
            WHERE clientDependency_ID = @clientDependency_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @client_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_DependencyClient @clientDependency_ID, @client_ID
         FETCH NEXT FROM @_Cursor INTO @client_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_3D5FADACD21C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_client
    @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_client
    @clientDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_client @clientDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_client
    @clientDependency_ID INT
   ,@client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_client @clientDependency_ID, @client_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_client
   @clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_client @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_supplier
    @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_supplier
    @supplierDependency_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Dependency_supplier @supplierDependency_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_supplier
    @supplierDependency_ID INT
   ,@supplier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Dependency_supplier @supplierDependency_ID, @supplier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_supplier
   @supplierDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Dependency_supplier @supplierDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_StepPrecedence_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_StepPrecedence_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_StepPrecedence_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_StepPrecedence_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_StepPrecedence_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Transformation.ClassifierFeatureMap'
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_classifier
    @cfMap_ID INT
AS
   SELECT classifier_ID
      FROM Transformation_CFMapClassifier
      WHERE cfMap_ID = @cfMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap_classifier
    @cfMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_CFMapClassifier_classifier @cfMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_classifier
    @cfMap_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_CFMapClassifier @cfMap_ID = @cfMap_ID, @classifier_ID = @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_classifier
    @cfMap_ID INT
   ,@classifier_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_CFMapClassifier @cfMap_ID = @cfMap_ID, @classifier_ID = @classifier_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_classifier
   @cfMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @classifier_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_7437509713AF
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT classifier_ID
            FROM Transformation_CFMapClassifier
            WHERE cfMap_ID = @cfMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @classifier_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_CFMapClassifier @cfMap_ID, @classifier_ID
         FETCH NEXT FROM @_Cursor INTO @classifier_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_7437509713AF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_feature
    @cfMap_ID INT
AS
   SELECT feature_ID
      FROM Transformation_CFMapFeature
      WHERE cfMap_ID = @cfMap_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap_feature
    @cfMap_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_CFMapFeature_feature @cfMap_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_feature
    @cfMap_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_CFMapFeature @cfMap_ID = @cfMap_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_feature
    @cfMap_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_CFMapFeature @cfMap_ID = @cfMap_ID, @feature_ID = @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_feature
   @cfMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @feature_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_067E294C32C4
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT feature_ID
            FROM Transformation_CFMapFeature
            WHERE cfMap_ID = @cfMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @feature_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_CFMapFeature @cfMap_ID, @feature_ID
         FETCH NEXT FROM @_Cursor INTO @feature_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_067E294C32C4
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_classifierMap
    @cfMap_ID INT
   ,@classifierMap_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Transformation_ClassifierMapToCFMap_classifierMap @cfMap_ID, @classifierMap_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_classifierMap
    @cfMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Transformation_ClassifierMapToCFMap @cfMap_ID = @cfMap_ID, @classifierMap_ID = @classifierMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_classifierMap
    @cfMap_ID INT
   ,@classifierMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Transformation_ClassifierMapToCFMap @cfMap_ID = @cfMap_ID, @classifierMap_ID = @classifierMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_classifierMap
   @cfMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @classifierMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Transfor_B05780198A96
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT classifierMap_ID
            FROM Transformation_ClassifierFeatureMap
            WHERE _ID = @cfMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @classifierMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Transformation_ClassifierMapToCFMap @cfMap_ID, @classifierMap_ID
         FETCH NEXT FROM @_Cursor INTO @classifierMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Transfor_B05780198A96
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Transformation_ClassifierFeatureMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Transformation_ClassifierFeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Transformation_ClassifierFeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Transformation_ClassifierFeatureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Transformation_ClassifierFeatureMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- Olap References
--


PRINT 'References Olap.ContentMap'
GO

CREATE PROCEDURE Get_Olap_ContentMap_cubeDeployment
    @contentMap_ID INT
   ,@cubeDeployment_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeDeploymentOwnsContentMaps_cubeDeployment @contentMap_ID, @cubeDeployment_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_cubeDeployment
    @contentMap_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDeploymentOwnsContentMaps @contentMap_ID = @contentMap_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_cubeDeployment
    @contentMap_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDeploymentOwnsContentMaps @contentMap_ID = @contentMap_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_cubeDeployment
   @contentMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_ContentMap
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cubeDeployment_ID
            FROM Olap_ContentMap
            WHERE _ID = @contentMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDeploymentOwnsContentMaps @contentMap_ID, @cubeDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_ContentMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_classifierMap
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_TransformationMap_classifierMap @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_classifierMap
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationMap_classifierMap @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_TransformationMap_classifierMap @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_TransformationMap_classifierMap @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_classifierMap
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_TransformationMap_classifierMap @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_source
    @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_source @sourceTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_source
   @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_target
    @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_target @targetTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_target
   @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_use
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_use
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_use @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_use
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ContentMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ContentMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ContentMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ContentMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ContentMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.Cube'
GO

CREATE PROCEDURE Get_Olap_Cube_cubeDimensionAssociation
    @cube_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE cube_ID = @cube_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_cubeDimensionAssociation
    @cube_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeOwnsCubeDimensionAssociations_cubeDimensionAssociation @cube_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_cubeDimensionAssociation
    @cube_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeOwnsCubeDimensionAssociations @cube_ID = @cube_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_cubeDimensionAssociation
    @cube_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeOwnsCubeDimensionAssociations @cube_ID = @cube_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_cubeDimensionAssociation
   @cube_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDimensionAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_CubeDimensionAssociation
            WHERE cube_ID = @cube_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeOwnsCubeDimensionAssociations @cube_ID, @cubeDimensionAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_cubeRegion
    @cube_ID INT
AS
   SELECT _ID
      FROM Olap_CubeRegion
      WHERE cube_ID = @cube_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_cubeRegion
    @cube_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeOwnsCubeRegions_cubeRegion @cube_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_cubeRegion
    @cube_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeOwnsCubeRegions @cube_ID = @cube_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_cubeRegion
    @cube_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeOwnsCubeRegions @cube_ID = @cube_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_cubeRegion
   @cube_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeRegion_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_CubeRegion
            WHERE cube_ID = @cube_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeOwnsCubeRegions @cube_ID, @cubeRegion_ID
         FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_schema
    @cube_ID INT
   ,@schema_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_SchemaOwnsCubes_schema @cube_ID, @schema_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_schema
    @cube_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsCubes @cube_ID = @cube_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_schema
    @cube_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsCubes @cube_ID = @cube_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_schema
   @cube_ID INT
AS
   DECLARE @Error INT
   DECLARE @schema_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cube
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT schema_ID
            FROM Olap_Cube
            WHERE _ID = @cube_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @schema_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsCubes @cube_ID, @schema_ID
         FETCH NEXT FROM @_Cursor INTO @schema_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cube
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Cube_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Cube_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Cube_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Cube_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Cube_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.CubeDeployment'
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_cubeRegion
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeRegionOwnsCubeDeployments_cubeRegion @cubeDeployment_ID, @cubeRegion_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_cubeRegion
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeRegionOwnsCubeDeployments @cubeDeployment_ID = @cubeDeployment_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_cubeRegion
    @cubeDeployment_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeRegionOwnsCubeDeployments @cubeDeployment_ID = @cubeDeployment_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_cubeRegion
   @cubeDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeRegion_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cubeRegion_ID
            FROM Olap_CubeRegionOwnsCubeDeployments
            WHERE cubeDeployment_ID = @cubeDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeRegionOwnsCubeDeployments @cubeDeployment_ID, @cubeRegion_ID
         FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_deploymentGroup
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DeploymentGroupReferencesCubeDeployments_deploymentGroup @cubeDeployment_ID, @deploymentGroup_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_deploymentGroup
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DeploymentGroupReferencesCubeDeployments @cubeDeployment_ID = @cubeDeployment_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_deploymentGroup
    @cubeDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesCubeDeployments @cubeDeployment_ID = @cubeDeployment_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_deploymentGroup
   @cubeDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @deploymentGroup_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT deploymentGroup_ID
            FROM Olap_CubeDeployment
            WHERE _ID = @cubeDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesCubeDeployments @cubeDeployment_ID, @deploymentGroup_ID
         FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_contentMap
    @cubeDeployment_ID INT
AS
   SELECT _ID
      FROM Olap_ContentMap
      WHERE cubeDeployment_ID = @cubeDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_contentMap
    @cubeDeployment_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeDeploymentOwnsContentMaps_contentMap @cubeDeployment_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_contentMap
    @cubeDeployment_ID INT
   ,@contentMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDeploymentOwnsContentMaps @cubeDeployment_ID = @cubeDeployment_ID, @contentMap_ID = @contentMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_contentMap
    @cubeDeployment_ID INT
   ,@contentMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDeploymentOwnsContentMaps @cubeDeployment_ID = @cubeDeployment_ID, @contentMap_ID = @contentMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_contentMap
   @cubeDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @contentMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeDeployment
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_ContentMap
            WHERE cubeDeployment_ID = @cubeDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @contentMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDeploymentOwnsContentMaps @cubeDeployment_ID, @contentMap_ID
         FETCH NEXT FROM @_Cursor INTO @contentMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeDeployment
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDeployment_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDeployment_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.CubeDimensionAssociation'
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_dimension
    @cubeDimensionAssociation_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeDimensionAssociationsReferenceDimension_dimension @cubeDimensionAssociation_ID, @dimension_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_dimension
    @cubeDimensionAssociation_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDimensionAssociationsReferenceDimension @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_dimension
    @cubeDimensionAssociation_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceDimension @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_dimension
   @cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cub_CC6C53BFD082
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimension_ID
            FROM Olap_CubeDimensionAssociation
            WHERE _ID = @cubeDimensionAssociation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceDimension @cubeDimensionAssociation_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cub_CC6C53BFD082
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_cube
    @cubeDimensionAssociation_ID INT
   ,@cube_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeOwnsCubeDimensionAssociations_cube @cubeDimensionAssociation_ID, @cube_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_cube
    @cubeDimensionAssociation_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeOwnsCubeDimensionAssociations @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_cube
    @cubeDimensionAssociation_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeOwnsCubeDimensionAssociations @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_cube
   @cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @cube_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cub_FE3AA926C35C
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cube_ID
            FROM Olap_CubeDimensionAssociation
            WHERE _ID = @cubeDimensionAssociation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cube_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeOwnsCubeDimensionAssociations @cubeDimensionAssociation_ID, @cube_ID
         FETCH NEXT FROM @_Cursor INTO @cube_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cub_FE3AA926C35C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_calcHierarchy
    @cubeDimensionAssociation_ID INT
   ,@calcHierarchy_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_calcHierarchy @cubeDimensionAssociation_ID, @calcHierarchy_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_calcHierarchy
    @cubeDimensionAssociation_ID INT
   ,@calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @calcHierarchy_ID = @calcHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_calcHierarchy
    @cubeDimensionAssociation_ID INT
   ,@calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID, @calcHierarchy_ID = @calcHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_calcHierarchy
   @cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @calcHierarchy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Cub_B6D31463D80F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT calcHierarchy_ID
            FROM Olap_CubeDimensionAssociation
            WHERE _ID = @cubeDimensionAssociation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @calcHierarchy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @cubeDimensionAssociation_ID, @calcHierarchy_ID
         FETCH NEXT FROM @_Cursor INTO @calcHierarchy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Cub_B6D31463D80F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeDimensionAssociation_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeDimensionAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeDimensionAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeDimensionAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeDimensionAssociation_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.CubeRegion'
GO

CREATE PROCEDURE Get_Olap_CubeRegion_memberSelectionGroup
    @cubeRegion_ID INT
AS
   SELECT _ID
      FROM Olap_MemberSelectionGroup
      WHERE cubeRegion_ID = @cubeRegion_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_memberSelectionGroup
    @cubeRegion_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeRegionOwnsMemberSelectionGroups_memberSelectionGroup @cubeRegion_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_memberSelectionGroup
    @cubeRegion_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeRegionOwnsMemberSelectionGroups @cubeRegion_ID = @cubeRegion_ID, @memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_memberSelectionGroup
    @cubeRegion_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeRegionOwnsMemberSelectionGroups @cubeRegion_ID = @cubeRegion_ID, @memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_memberSelectionGroup
   @cubeRegion_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberSelectionGroup_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_MemberSelectionGroup
            WHERE cubeRegion_ID = @cubeRegion_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @memberSelectionGroup_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeRegionOwnsMemberSelectionGroups @cubeRegion_ID, @memberSelectionGroup_ID
         FETCH NEXT FROM @_Cursor INTO @memberSelectionGroup_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_cube
    @cubeRegion_ID INT
   ,@cube_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeOwnsCubeRegions_cube @cubeRegion_ID, @cube_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_cube
    @cubeRegion_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeOwnsCubeRegions @cubeRegion_ID = @cubeRegion_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_cube
    @cubeRegion_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeOwnsCubeRegions @cubeRegion_ID = @cubeRegion_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_cube
   @cubeRegion_ID INT
AS
   DECLARE @Error INT
   DECLARE @cube_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cube_ID
            FROM Olap_CubeRegion
            WHERE _ID = @cubeRegion_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cube_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeOwnsCubeRegions @cubeRegion_ID, @cube_ID
         FETCH NEXT FROM @_Cursor INTO @cube_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_cubeDeployment
    @cubeRegion_ID INT
AS
   SELECT cubeDeployment_ID
      FROM Olap_CubeRegionOwnsCubeDeployments
      WHERE cubeRegion_ID = @cubeRegion_ID
      ORDER BY cubeDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_cubeDeployment
    @cubeRegion_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeRegionOwnsCubeDeployments_cubeDeployment @cubeRegion_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_cubeDeployment
    @cubeRegion_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeRegionOwnsCubeDeployments @cubeRegion_ID = @cubeRegion_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_cubeDeployment
    @cubeRegion_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeRegionOwnsCubeDeployments @cubeRegion_ID = @cubeRegion_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_cubeDeployment
   @cubeRegion_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_CubeRegion
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cubeDeployment_ID
            FROM Olap_CubeRegionOwnsCubeDeployments
            WHERE cubeRegion_ID = @cubeRegion_ID
            ORDER BY cubeDeployment_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeRegionOwnsCubeDeployments @cubeRegion_ID, @cubeDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_CubeRegion
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CubeRegion_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CubeRegion_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CubeRegion_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CubeRegion_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CubeRegion_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.DeploymentGroup'
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_schema
    @deploymentGroup_ID INT
   ,@schema_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_SchemaOwnsDeploymentGroups_schema @deploymentGroup_ID, @schema_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_schema
    @deploymentGroup_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsDeploymentGroups @deploymentGroup_ID = @deploymentGroup_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_schema
    @deploymentGroup_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsDeploymentGroups @deploymentGroup_ID = @deploymentGroup_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_schema
   @deploymentGroup_ID INT
AS
   DECLARE @Error INT
   DECLARE @schema_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT schema_ID
            FROM Olap_DeploymentGroup
            WHERE _ID = @deploymentGroup_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @schema_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsDeploymentGroups @deploymentGroup_ID, @schema_ID
         FETCH NEXT FROM @_Cursor INTO @schema_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_cubeDeployment
    @deploymentGroup_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDeployment
      WHERE deploymentGroup_ID = @deploymentGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_cubeDeployment
    @deploymentGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_DeploymentGroupReferencesCubeDeployments_cubeDeployment @deploymentGroup_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_cubeDeployment
    @deploymentGroup_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DeploymentGroupReferencesCubeDeployments @deploymentGroup_ID = @deploymentGroup_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_cubeDeployment
    @deploymentGroup_ID INT
   ,@cubeDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesCubeDeployments @deploymentGroup_ID = @deploymentGroup_ID, @cubeDeployment_ID = @cubeDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_cubeDeployment
   @deploymentGroup_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_CubeDeployment
            WHERE deploymentGroup_ID = @deploymentGroup_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesCubeDeployments @deploymentGroup_ID, @cubeDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_dimensionDeployment
    @deploymentGroup_ID INT
AS
   SELECT _ID
      FROM Olap_DimensionDeployment
      WHERE deploymentGroup_ID = @deploymentGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_dimensionDeployment
    @deploymentGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_DeploymentGroupReferencesDimensionDeployments_dimensionDeployment @deploymentGroup_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_dimensionDeployment
    @deploymentGroup_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DeploymentGroupReferencesDimensionDeployments @deploymentGroup_ID = @deploymentGroup_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_dimensionDeployment
    @deploymentGroup_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesDimensionDeployments @deploymentGroup_ID = @deploymentGroup_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_dimensionDeployment
   @deploymentGroup_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_DeploymentGroup
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_DimensionDeployment
            WHERE deploymentGroup_ID = @deploymentGroup_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesDimensionDeployments @deploymentGroup_ID, @dimensionDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_DeploymentGroup
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DeploymentGroup_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DeploymentGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DeploymentGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DeploymentGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DeploymentGroup_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.Dimension'
GO

CREATE PROCEDURE Get_Olap_Dimension_hierarchy
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_Hierarchy
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_hierarchy
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_DimensionOwnsHierarchies_hierarchy @dimension_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_hierarchy
    @dimension_ID INT
   ,@hierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionOwnsHierarchies @dimension_ID = @dimension_ID, @hierarchy_ID = @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_hierarchy
    @dimension_ID INT
   ,@hierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionOwnsHierarchies @dimension_ID = @dimension_ID, @hierarchy_ID = @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_hierarchy
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @hierarchy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_Hierarchy
            WHERE dimension_ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @hierarchy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionOwnsHierarchies @dimension_ID, @hierarchy_ID
         FETCH NEXT FROM @_Cursor INTO @hierarchy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_memberSelection
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_MemberSelection
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_memberSelection
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_DimensionOwnsMemberSelections_memberSelection @dimension_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_memberSelection
    @dimension_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionOwnsMemberSelections @dimension_ID = @dimension_ID, @memberSelection_ID = @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_memberSelection
    @dimension_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionOwnsMemberSelections @dimension_ID = @dimension_ID, @memberSelection_ID = @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_memberSelection
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberSelection_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_MemberSelection
            WHERE dimension_ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @memberSelection_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionOwnsMemberSelections @dimension_ID, @memberSelection_ID
         FETCH NEXT FROM @_Cursor INTO @memberSelection_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_cubeDimensionAssociation
    @dimension_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE dimension_ID = @dimension_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_cubeDimensionAssociation
    @dimension_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeDimensionAssociationsReferenceDimension_cubeDimensionAssociation @dimension_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_cubeDimensionAssociation
    @dimension_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDimensionAssociationsReferenceDimension @dimension_ID = @dimension_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_cubeDimensionAssociation
    @dimension_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceDimension @dimension_ID = @dimension_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_cubeDimensionAssociation
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDimensionAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_CubeDimensionAssociation
            WHERE dimension_ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceDimension @dimension_ID, @cubeDimensionAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_displayDefault
    @defaultedDimension_ID INT
   ,@displayDefault_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionHasDefaultHierarchy_displayDefault @defaultedDimension_ID, @displayDefault_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_displayDefault
    @defaultedDimension_ID INT
   ,@displayDefault_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionHasDefaultHierarchy @defaultedDimension_ID = @defaultedDimension_ID, @displayDefault_ID = @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_displayDefault
    @defaultedDimension_ID INT
   ,@displayDefault_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionHasDefaultHierarchy @defaultedDimension_ID = @defaultedDimension_ID, @displayDefault_ID = @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_displayDefault
   @defaultedDimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @displayDefault_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_Hierarchy
            WHERE defaultedDimension_ID = @defaultedDimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @displayDefault_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionHasDefaultHierarchy @defaultedDimension_ID, @displayDefault_ID
         FETCH NEXT FROM @_Cursor INTO @displayDefault_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_SchemaOwnsDimensions_schema @dimension_ID, @schema_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsDimensions @dimension_ID = @dimension_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_schema
    @dimension_ID INT
   ,@schema_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsDimensions @dimension_ID = @dimension_ID, @schema_ID = @schema_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_schema
   @dimension_ID INT
AS
   DECLARE @Error INT
   DECLARE @schema_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dimension
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT schema_ID
            FROM Olap_Dimension
            WHERE _ID = @dimension_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @schema_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsDimensions @dimension_ID, @schema_ID
         FETCH NEXT FROM @_Cursor INTO @schema_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dimension
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Dimension_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Dimension_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Dimension_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.DimensionDeployment'
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_hierarchyLevelAssociation
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_hierarchyLevelAssociation @dimensionDeployment_ID, @hierarchyLevelAssociation_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_hierarchyLevelAssociation
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_hierarchyLevelAssociation
    @dimensionDeployment_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_hierarchyLevelAssociation
   @dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @hierarchyLevelAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_11CCB8024104
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT hierarchyLevelAssociation_ID
            FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
            WHERE dimensionDeployment_ID = @dimensionDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @dimensionDeployment_ID, @hierarchyLevelAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_11CCB8024104
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_valueBasedHierarchy
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_ValueBasedHierarchyOwnsDimensionDeployments_valueBasedHierarchy @dimensionDeployment_ID, @valueBasedHierarchy_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_valueBasedHierarchy
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_ValueBasedHierarchyOwnsDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @valueBasedHierarchy_ID = @valueBasedHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_valueBasedHierarchy
    @dimensionDeployment_ID INT
   ,@valueBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @valueBasedHierarchy_ID = @valueBasedHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_valueBasedHierarchy
   @dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @valueBasedHierarchy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_B0C755090CA6
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT valueBasedHierarchy_ID
            FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
            WHERE dimensionDeployment_ID = @dimensionDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @valueBasedHierarchy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments @dimensionDeployment_ID, @valueBasedHierarchy_ID
         FETCH NEXT FROM @_Cursor INTO @valueBasedHierarchy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_B0C755090CA6
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_structureMap
    @dimensionDeployment_ID INT
AS
   SELECT _ID
      FROM Olap_StructureMap
      WHERE dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_structureMap
    @dimensionDeployment_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_DimensionDeploymentOwnsStructureMaps_structureMap @dimensionDeployment_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_structureMap
    @dimensionDeployment_ID INT
   ,@structureMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentOwnsStructureMaps @dimensionDeployment_ID = @dimensionDeployment_ID, @structureMap_ID = @structureMap_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_structureMap
    @dimensionDeployment_ID INT
   ,@structureMap_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentOwnsStructureMaps @dimensionDeployment_ID = @dimensionDeployment_ID, @structureMap_ID = @structureMap_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_structureMap
   @dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @structureMap_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_062BA49AAE57
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_StructureMap
            WHERE dimensionDeployment_ID = @dimensionDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @structureMap_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentOwnsStructureMaps @dimensionDeployment_ID, @structureMap_ID
         FETCH NEXT FROM @_Cursor INTO @structureMap_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_062BA49AAE57
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_listOfValues
    @dimensionDeploymentLV_ID INT
   ,@listOfValues_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionDeploymentHasListOfValues_listOfValues @dimensionDeploymentLV_ID, @listOfValues_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_listOfValues
    @dimensionDeploymentLV_ID INT
   ,@listOfValues_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentHasListOfValues @dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID, @listOfValues_ID = @listOfValues_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_listOfValues
    @dimensionDeploymentLV_ID INT
   ,@listOfValues_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentHasListOfValues @dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID, @listOfValues_ID = @listOfValues_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_listOfValues
   @dimensionDeploymentLV_ID INT
AS
   DECLARE @Error INT
   DECLARE @listOfValues_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_94F0C8949F98
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_StructureMap
            WHERE dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @listOfValues_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentHasListOfValues @dimensionDeploymentLV_ID, @listOfValues_ID
         FETCH NEXT FROM @_Cursor INTO @listOfValues_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_94F0C8949F98
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_immediateParent
    @dimensionDeploymentIP_ID INT
   ,@immediateParent_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionDeploymentHasImmediateParent_immediateParent @dimensionDeploymentIP_ID, @immediateParent_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_immediateParent
    @dimensionDeploymentIP_ID INT
   ,@immediateParent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentHasImmediateParent @dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID, @immediateParent_ID = @immediateParent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_immediateParent
    @dimensionDeploymentIP_ID INT
   ,@immediateParent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentHasImmediateParent @dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID, @immediateParent_ID = @immediateParent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_immediateParent
   @dimensionDeploymentIP_ID INT
AS
   DECLARE @Error INT
   DECLARE @immediateParent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_010BF3FE7F3B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_StructureMap
            WHERE dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @immediateParent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentHasImmediateParent @dimensionDeploymentIP_ID, @immediateParent_ID
         FETCH NEXT FROM @_Cursor INTO @immediateParent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_010BF3FE7F3B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_deploymentGroup
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DeploymentGroupReferencesDimensionDeployments_deploymentGroup @dimensionDeployment_ID, @deploymentGroup_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_deploymentGroup
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DeploymentGroupReferencesDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_deploymentGroup
    @dimensionDeployment_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesDimensionDeployments @dimensionDeployment_ID = @dimensionDeployment_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_deploymentGroup
   @dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   DECLARE @deploymentGroup_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Dim_A4F36A872CE9
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT deploymentGroup_ID
            FROM Olap_DimensionDeployment
            WHERE _ID = @dimensionDeployment_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DeploymentGroupReferencesDimensionDeployments @dimensionDeployment_ID, @deploymentGroup_ID
         FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Dim_A4F36A872CE9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_DimensionDeployment_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_DimensionDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_DimensionDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_DimensionDeployment_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_DimensionDeployment_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.Hierarchy'
GO

CREATE PROCEDURE Get_Olap_Hierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionOwnsHierarchies_dimension @hierarchy_ID, @dimension_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionOwnsHierarchies @hierarchy_ID = @hierarchy_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionOwnsHierarchies @hierarchy_ID = @hierarchy_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_dimension
   @hierarchy_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hierarchy
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimension_ID
            FROM Olap_Hierarchy
            WHERE _ID = @hierarchy_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionOwnsHierarchies @hierarchy_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
AS
   SELECT _ID
      FROM Olap_CubeDimensionAssociation
      WHERE calcHierarchy_ID = @calcHierarchy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_CubeDimensionAssociationsReferenceCalcHierarchy_cubeDimensionAssociation @calcHierarchy_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @calcHierarchy_ID = @calcHierarchy_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @calcHierarchy_ID = @calcHierarchy_ID, @cubeDimensionAssociation_ID = @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_cubeDimensionAssociation
   @calcHierarchy_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeDimensionAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hierarchy
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_CubeDimensionAssociation
            WHERE calcHierarchy_ID = @calcHierarchy_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeDimensionAssociationsReferenceCalcHierarchy @calcHierarchy_ID, @cubeDimensionAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @cubeDimensionAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionHasDefaultHierarchy_defaultedDimension @displayDefault_ID, @defaultedDimension_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionHasDefaultHierarchy @displayDefault_ID = @displayDefault_ID, @defaultedDimension_ID = @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionHasDefaultHierarchy @displayDefault_ID = @displayDefault_ID, @defaultedDimension_ID = @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_defaultedDimension
   @displayDefault_ID INT
AS
   DECLARE @Error INT
   DECLARE @defaultedDimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hierarchy
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_Dimension
            WHERE displayDefault_ID = @displayDefault_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @defaultedDimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionHasDefaultHierarchy @displayDefault_ID, @defaultedDimension_ID
         FETCH NEXT FROM @_Cursor INTO @defaultedDimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hierarchy
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Hierarchy_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Hierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Hierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Hierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Hierarchy_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.HierarchyLevelAssociation'
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_levelBasedHierarchy
    @hierarchyLevelAssociation_ID INT
   ,@levelBasedHierarchy_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_levelBasedHierarchy @hierarchyLevelAssociation_ID, @levelBasedHierarchy_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_levelBasedHierarchy
    @hierarchyLevelAssociation_ID INT
   ,@levelBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @levelBasedHierarchy_ID = @levelBasedHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_levelBasedHierarchy
    @hierarchyLevelAssociation_ID INT
   ,@levelBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @levelBasedHierarchy_ID = @levelBasedHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_levelBasedHierarchy
   @hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @levelBasedHierarchy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hie_B88ADC5ECC20
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT levelBasedHierarchy_ID
            FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
            WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @levelBasedHierarchy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @hierarchyLevelAssociation_ID, @levelBasedHierarchy_ID
         FETCH NEXT FROM @_Cursor INTO @levelBasedHierarchy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hie_B88ADC5ECC20
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_currentLevel
    @hierarchyLevelAssociation_ID INT
   ,@currentLevel_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_HierarchyLevelAssocsReferenceLevel_currentLevel @hierarchyLevelAssociation_ID, @currentLevel_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_currentLevel
    @hierarchyLevelAssociation_ID INT
   ,@currentLevel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_HierarchyLevelAssocsReferenceLevel @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @currentLevel_ID = @currentLevel_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_currentLevel
    @hierarchyLevelAssociation_ID INT
   ,@currentLevel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_HierarchyLevelAssocsReferenceLevel @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @currentLevel_ID = @currentLevel_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_currentLevel
   @hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @currentLevel_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hie_BD1E1DCB5F2E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT currentLevel_ID
            FROM Olap_HierarchyLevelAssociation
            WHERE _ID = @hierarchyLevelAssociation_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @currentLevel_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_HierarchyLevelAssocsReferenceLevel @hierarchyLevelAssociation_ID, @currentLevel_ID
         FETCH NEXT FROM @_Cursor INTO @currentLevel_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hie_BD1E1DCB5F2E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
AS
   SELECT dimensionDeployment_ID
      FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
      WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
      ORDER BY dimensionDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_HierarchyLevelAssociationOwnsDimensionDeployments_dimensionDeployment @hierarchyLevelAssociation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_dimensionDeployment
    @hierarchyLevelAssociation_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_dimensionDeployment
   @hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Hie_F0F3E4F02CD3
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimensionDeployment_ID
            FROM Olap_HierarchyLevelAssociationOwnsDimensionDeployments
            WHERE hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
            ORDER BY dimensionDeployment_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_HierarchyLevelAssociationOwnsDimensionDeployments @hierarchyLevelAssociation_ID, @dimensionDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Hie_F0F3E4F02CD3
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_HierarchyLevelAssociation_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_HierarchyLevelAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_HierarchyLevelAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_HierarchyLevelAssociation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_HierarchyLevelAssociation_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.LevelBasedHierarchy'
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
AS
   SELECT hierarchyLevelAssociation_ID
      FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
      WHERE levelBasedHierarchy_ID = @levelBasedHierarchy_ID
      ORDER BY hierarchyLevelAssociation_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations_hierarchyLevelAssociation @levelBasedHierarchy_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @levelBasedHierarchy_ID = @levelBasedHierarchy_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_hierarchyLevelAssociation
    @levelBasedHierarchy_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @levelBasedHierarchy_ID = @levelBasedHierarchy_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_hierarchyLevelAssociation
   @levelBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   DECLARE @hierarchyLevelAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Lev_27EE222178BA
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT hierarchyLevelAssociation_ID
            FROM Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations
            WHERE levelBasedHierarchy_ID = @levelBasedHierarchy_ID
            ORDER BY hierarchyLevelAssociation_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_LevelBasedHierarchyOwnsHierarchyLevelAssociations @levelBasedHierarchy_ID, @hierarchyLevelAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Lev_27EE222178BA
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_dimension @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_dimension @hierarchy_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_dimension @hierarchy_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_dimension
   @hierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_dimension @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_cubeDimensionAssociation
   @calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_defaultedDimension @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_defaultedDimension @displayDefault_ID, @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_defaultedDimension @displayDefault_ID, @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_defaultedDimension
   @displayDefault_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_defaultedDimension @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_LevelBasedHierarchy_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_LevelBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_LevelBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_LevelBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_LevelBasedHierarchy_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.MemberSelectionGroup'
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_memberSelection
    @memberSelectionGroup_ID INT
AS
   SELECT memberSelection_ID
      FROM Olap_MemberSelectionGroupReferencesMemberSelections
      WHERE memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_memberSelection
    @memberSelectionGroup_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelection @memberSelectionGroup_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_memberSelection
    @memberSelectionGroup_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelectionGroup_ID = @memberSelectionGroup_ID, @memberSelection_ID = @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_memberSelection
    @memberSelectionGroup_ID INT
   ,@memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelectionGroup_ID = @memberSelectionGroup_ID, @memberSelection_ID = @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_memberSelection
   @memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberSelection_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Mem_CD7DDA4D9306
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT memberSelection_ID
            FROM Olap_MemberSelectionGroupReferencesMemberSelections
            WHERE memberSelectionGroup_ID = @memberSelectionGroup_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @memberSelection_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelectionGroup_ID, @memberSelection_ID
         FETCH NEXT FROM @_Cursor INTO @memberSelection_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Mem_CD7DDA4D9306
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_cubeRegion
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_CubeRegionOwnsMemberSelectionGroups_cubeRegion @memberSelectionGroup_ID, @cubeRegion_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_cubeRegion
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_CubeRegionOwnsMemberSelectionGroups @memberSelectionGroup_ID = @memberSelectionGroup_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_cubeRegion
    @memberSelectionGroup_ID INT
   ,@cubeRegion_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_CubeRegionOwnsMemberSelectionGroups @memberSelectionGroup_ID = @memberSelectionGroup_ID, @cubeRegion_ID = @cubeRegion_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_cubeRegion
   @memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   DECLARE @cubeRegion_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Mem_5592D1C942FB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT cubeRegion_ID
            FROM Olap_MemberSelectionGroup
            WHERE _ID = @memberSelectionGroup_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_CubeRegionOwnsMemberSelectionGroups @memberSelectionGroup_ID, @cubeRegion_ID
         FETCH NEXT FROM @_Cursor INTO @cubeRegion_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Mem_5592D1C942FB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelectionGroup_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelectionGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelectionGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelectionGroup_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelectionGroup_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.MemberSelection'
GO

CREATE PROCEDURE Get_Olap_MemberSelection_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionOwnsMemberSelections_dimension @memberSelection_ID, @dimension_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionOwnsMemberSelections @memberSelection_ID = @memberSelection_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionOwnsMemberSelections @memberSelection_ID = @memberSelection_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_dimension
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_MemberSelection
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimension_ID
            FROM Olap_MemberSelection
            WHERE _ID = @memberSelection_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionOwnsMemberSelections @memberSelection_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_MemberSelection
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_memberSelectionGroup
    @memberSelection_ID INT
AS
   SELECT memberSelectionGroup_ID
      FROM Olap_MemberSelectionGroupReferencesMemberSelections
      WHERE memberSelection_ID = @memberSelection_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_memberSelectionGroup
    @memberSelection_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_MemberSelectionGroupReferencesMemberSelections_memberSelectionGroup @memberSelection_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelection_ID = @memberSelection_ID, @memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelection_ID = @memberSelection_ID, @memberSelectionGroup_ID = @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_memberSelectionGroup
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   DECLARE @memberSelectionGroup_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_MemberSelection
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT memberSelectionGroup_ID
            FROM Olap_MemberSelectionGroupReferencesMemberSelections
            WHERE memberSelection_ID = @memberSelection_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @memberSelectionGroup_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_MemberSelectionGroupReferencesMemberSelections @memberSelection_ID, @memberSelectionGroup_ID
         FETCH NEXT FROM @_Cursor INTO @memberSelectionGroup_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_MemberSelection
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_MemberSelection_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_MemberSelection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_MemberSelection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_MemberSelection_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_MemberSelection_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.Schema'
GO

CREATE PROCEDURE Get_Olap_Schema_cube
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_Cube
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_cube
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_SchemaOwnsCubes_cube @schema_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_cube
    @schema_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsCubes @schema_ID = @schema_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_cube
    @schema_ID INT
   ,@cube_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsCubes @schema_ID = @schema_ID, @cube_ID = @cube_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_cube
   @schema_ID INT
AS
   DECLARE @Error INT
   DECLARE @cube_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_Cube
            WHERE schema_ID = @schema_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @cube_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsCubes @schema_ID, @cube_ID
         FETCH NEXT FROM @_Cursor INTO @cube_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_dimension
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_Dimension
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_dimension
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_SchemaOwnsDimensions_dimension @schema_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_dimension
    @schema_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsDimensions @schema_ID = @schema_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_dimension
    @schema_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsDimensions @schema_ID = @schema_ID, @dimension_ID = @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_dimension
   @schema_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimension_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_Dimension
            WHERE schema_ID = @schema_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimension_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsDimensions @schema_ID, @dimension_ID
         FETCH NEXT FROM @_Cursor INTO @dimension_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_deploymentGroup
    @schema_ID INT
AS
   SELECT _ID
      FROM Olap_DeploymentGroup
      WHERE schema_ID = @schema_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_deploymentGroup
    @schema_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_SchemaOwnsDeploymentGroups_deploymentGroup @schema_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_deploymentGroup
    @schema_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_SchemaOwnsDeploymentGroups @schema_ID = @schema_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_deploymentGroup
    @schema_ID INT
   ,@deploymentGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_SchemaOwnsDeploymentGroups @schema_ID = @schema_ID, @deploymentGroup_ID = @deploymentGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_deploymentGroup
   @schema_ID INT
AS
   DECLARE @Error INT
   DECLARE @deploymentGroup_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Schema
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_DeploymentGroup
            WHERE schema_ID = @schema_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_SchemaOwnsDeploymentGroups @schema_ID, @deploymentGroup_ID
         FETCH NEXT FROM @_Cursor INTO @deploymentGroup_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Schema
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Schema_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Schema_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Schema_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.ValueBasedHierarchy'
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_dimensionDeployment
    @valueBasedHierarchy_ID INT
AS
   SELECT dimensionDeployment_ID
      FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
      WHERE valueBasedHierarchy_ID = @valueBasedHierarchy_ID
      ORDER BY dimensionDeployment_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_dimensionDeployment
    @valueBasedHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_ValueBasedHierarchyOwnsDimensionDeployments_dimensionDeployment @valueBasedHierarchy_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_dimensionDeployment
    @valueBasedHierarchy_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_ValueBasedHierarchyOwnsDimensionDeployments @valueBasedHierarchy_ID = @valueBasedHierarchy_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_dimensionDeployment
    @valueBasedHierarchy_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments @valueBasedHierarchy_ID = @valueBasedHierarchy_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_dimensionDeployment
   @valueBasedHierarchy_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Val_2AE91617F99F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimensionDeployment_ID
            FROM Olap_ValueBasedHierarchyOwnsDimensionDeployments
            WHERE valueBasedHierarchy_ID = @valueBasedHierarchy_ID
            ORDER BY dimensionDeployment_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_ValueBasedHierarchyOwnsDimensionDeployments @valueBasedHierarchy_ID, @dimensionDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Val_2AE91617F99F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_dimension @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_dimension @hierarchy_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_dimension
    @hierarchy_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_dimension @hierarchy_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_dimension
   @hierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_dimension @hierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_cubeDimensionAssociation
    @calcHierarchy_ID INT
   ,@cubeDimensionAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID, @cubeDimensionAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_cubeDimensionAssociation
   @calcHierarchy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_cubeDimensionAssociation @calcHierarchy_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_defaultedDimension @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Hierarchy_defaultedDimension @displayDefault_ID, @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_defaultedDimension
    @displayDefault_ID INT
   ,@defaultedDimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Hierarchy_defaultedDimension @displayDefault_ID, @defaultedDimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_defaultedDimension
   @displayDefault_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Hierarchy_defaultedDimension @displayDefault_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_ValueBasedHierarchy_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_ValueBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_ValueBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_ValueBasedHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_ValueBasedHierarchy_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.Level'
GO

CREATE PROCEDURE Get_Olap_Level_hierarchyLevelAssociation
    @currentLevel_ID INT
AS
   SELECT _ID
      FROM Olap_HierarchyLevelAssociation
      WHERE currentLevel_ID = @currentLevel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_HierarchyLevelAssocsReferenceLevel_hierarchyLevelAssociation @currentLevel_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_HierarchyLevelAssocsReferenceLevel @currentLevel_ID = @currentLevel_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_HierarchyLevelAssocsReferenceLevel @currentLevel_ID = @currentLevel_ID, @hierarchyLevelAssociation_ID = @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_hierarchyLevelAssociation
   @currentLevel_ID INT
AS
   DECLARE @Error INT
   DECLARE @hierarchyLevelAssociation_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_Level
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_HierarchyLevelAssociation
            WHERE currentLevel_ID = @currentLevel_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_HierarchyLevelAssocsReferenceLevel @currentLevel_ID, @hierarchyLevelAssociation_ID
         FETCH NEXT FROM @_Cursor INTO @hierarchyLevelAssociation_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_Level
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_dimension @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_MemberSelection_dimension @memberSelection_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_MemberSelection_dimension @memberSelection_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_dimension
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_dimension @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_memberSelectionGroup
    @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_memberSelectionGroup
    @memberSelection_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_memberSelectionGroup
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Level_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Level_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Level_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Level_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Level_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Level_hierarchyLevelAssociation @currentLevel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_Level_hierarchyLevelAssociation @currentLevel_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_Level_hierarchyLevelAssociation @currentLevel_ID, @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_hierarchyLevelAssociation
    @currentLevel_ID INT
   ,@hierarchyLevelAssociation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_Level_hierarchyLevelAssociation @currentLevel_ID, @hierarchyLevelAssociation_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_hierarchyLevelAssociation
   @currentLevel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_Level_hierarchyLevelAssociation @currentLevel_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_dimension @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_MemberSelection_dimension @memberSelection_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_dimension
    @memberSelection_ID INT
   ,@dimension_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_MemberSelection_dimension @memberSelection_ID, @dimension_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_dimension
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_dimension @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_memberSelectionGroup
    @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_memberSelectionGroup
    @memberSelection_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_memberSelectionGroup
    @memberSelection_ID INT
   ,@memberSelectionGroup_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID, @memberSelectionGroup_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_memberSelectionGroup
   @memberSelection_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Olap_MemberSelection_memberSelectionGroup @memberSelection_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_CodedLevel_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_CodedLevel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_CodedLevel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_CodedLevel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_CodedLevel_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Measure_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Measure_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_Measure_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_Measure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_Measure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_Measure_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_Measure_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References Olap.StructureMap'
GO

CREATE PROCEDURE Get_Olap_StructureMap_dimensionDeployment
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionDeploymentOwnsStructureMaps_dimensionDeployment @structureMap_ID, @dimensionDeployment_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_dimensionDeployment
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentOwnsStructureMaps @structureMap_ID = @structureMap_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_dimensionDeployment
    @structureMap_ID INT
   ,@dimensionDeployment_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentOwnsStructureMaps @structureMap_ID = @structureMap_ID, @dimensionDeployment_ID = @dimensionDeployment_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_dimensionDeployment
   @structureMap_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeployment_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dimensionDeployment_ID
            FROM Olap_StructureMap
            WHERE _ID = @structureMap_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentOwnsStructureMaps @structureMap_ID, @dimensionDeployment_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeployment_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_dimensionDeploymentLV
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionDeploymentHasListOfValues_dimensionDeploymentLV @listOfValues_ID, @dimensionDeploymentLV_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_dimensionDeploymentLV
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentHasListOfValues @listOfValues_ID = @listOfValues_ID, @dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_dimensionDeploymentLV
    @listOfValues_ID INT
   ,@dimensionDeploymentLV_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentHasListOfValues @listOfValues_ID = @listOfValues_ID, @dimensionDeploymentLV_ID = @dimensionDeploymentLV_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_dimensionDeploymentLV
   @listOfValues_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeploymentLV_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_DimensionDeployment
            WHERE listOfValues_ID = @listOfValues_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeploymentLV_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentHasListOfValues @listOfValues_ID, @dimensionDeploymentLV_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeploymentLV_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_dimensionDeploymentIP
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Olap_DimensionDeploymentHasImmediateParent_dimensionDeploymentIP @immediateParent_ID, @dimensionDeploymentIP_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_dimensionDeploymentIP
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Olap_DimensionDeploymentHasImmediateParent @immediateParent_ID = @immediateParent_ID, @dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_dimensionDeploymentIP
    @immediateParent_ID INT
   ,@dimensionDeploymentIP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Olap_DimensionDeploymentHasImmediateParent @immediateParent_ID = @immediateParent_ID, @dimensionDeploymentIP_ID = @dimensionDeploymentIP_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_dimensionDeploymentIP
   @immediateParent_ID INT
AS
   DECLARE @Error INT
   DECLARE @dimensionDeploymentIP_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Olap_StructureMap
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Olap_DimensionDeployment
            WHERE immediateParent_ID = @immediateParent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dimensionDeploymentIP_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Olap_DimensionDeploymentHasImmediateParent @immediateParent_ID, @dimensionDeploymentIP_ID
         FETCH NEXT FROM @_Cursor INTO @dimensionDeploymentIP_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Olap_StructureMap
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_classifierMap
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_TransformationMap_classifierMap @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_classifierMap
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_TransformationMap_classifierMap @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_TransformationMap_classifierMap @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_classifierMap
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_TransformationMap_classifierMap @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_classifierMap
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_TransformationMap_classifierMap @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_source
    @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_source
    @sourceTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_source @sourceTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_source
    @sourceTransformation_ID INT
   ,@source_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_source @sourceTransformation_ID, @source_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_source
   @sourceTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_source @sourceTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_target
    @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_target
    @targetTransformation_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_target @targetTransformation_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_target
    @targetTransformation_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_target @targetTransformation_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_target
   @targetTransformation_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_target @targetTransformation_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_use
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_use
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Transformation_Transformation_use @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_use
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Transformation_Transformation_use @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_use
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Transformation_Transformation_use @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_Olap_StructureMap_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_Olap_StructureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_Olap_StructureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_Olap_StructureMap_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_Olap_StructureMap_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- DataMining References
--


PRINT 'References DataMining.ApplicationInputSpecification'
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_miningModel
    @inputSpec_ID INT
   ,@miningModel_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_MiningModelOwnsInputSpecification_miningModel @inputSpec_ID, @miningModel_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_miningModel
    @inputSpec_ID INT
   ,@miningModel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_MiningModelOwnsInputSpecification @inputSpec_ID = @inputSpec_ID, @miningModel_ID = @miningModel_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_miningModel
    @inputSpec_ID INT
   ,@miningModel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_MiningModelOwnsInputSpecification @inputSpec_ID = @inputSpec_ID, @miningModel_ID = @miningModel_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_miningModel
   @inputSpec_ID INT
AS
   DECLARE @Error INT
   DECLARE @miningModel_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_14D522414806
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT miningModel_ID
            FROM DataMining_ApplicationInputSpecification
            WHERE _ID = @inputSpec_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @miningModel_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_MiningModelOwnsInputSpecification @inputSpec_ID, @miningModel_ID
         FETCH NEXT FROM @_Cursor INTO @miningModel_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_14D522414806
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_inputAttribute
    @inputSpec_ID INT
AS
   SELECT _ID
      FROM DataMining_ApplicationAttribute
      WHERE inputSpec_ID = @inputSpec_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_inputAttribute
    @inputSpec_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_InputSpecOwnsAttributes_inputAttribute @inputSpec_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_inputAttribute
    @inputSpec_ID INT
   ,@inputAttribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_InputSpecOwnsAttributes @inputSpec_ID = @inputSpec_ID, @inputAttribute_ID = @inputAttribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_inputAttribute
    @inputSpec_ID INT
   ,@inputAttribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_InputSpecOwnsAttributes @inputSpec_ID = @inputSpec_ID, @inputAttribute_ID = @inputAttribute_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_inputAttribute
   @inputSpec_ID INT
AS
   DECLARE @Error INT
   DECLARE @inputAttribute_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_85C3BCDEB709
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_ApplicationAttribute
            WHERE inputSpec_ID = @inputSpec_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @inputAttribute_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_InputSpecOwnsAttributes @inputSpec_ID, @inputAttribute_ID
         FETCH NEXT FROM @_Cursor INTO @inputAttribute_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_85C3BCDEB709
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationInputSpecification_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationInputSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationInputSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationInputSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationInputSpecification_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.AttributeUsageRelation'
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_attribute
    @attributeUsage_ID INT
   ,@attribute_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_PertainsToAttribute_attribute @attributeUsage_ID, @attribute_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AttributeUsageRelation_attribute
    @attributeUsage_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_PertainsToAttribute @attributeUsage_ID = @attributeUsage_ID, @attribute_ID = @attribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AttributeUsageRelation_attribute
    @attributeUsage_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_PertainsToAttribute @attributeUsage_ID = @attributeUsage_ID, @attribute_ID = @attribute_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AttributeUsageRelation_attribute
   @attributeUsage_ID INT
AS
   DECLARE @Error INT
   DECLARE @attribute_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_A4FA83095449
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT attribute_ID
            FROM DataMining_AttributeUsageRelation
            WHERE _ID = @attributeUsage_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @attribute_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_PertainsToAttribute @attributeUsage_ID, @attribute_ID
         FETCH NEXT FROM @_Cursor INTO @attribute_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_A4FA83095449
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AttributeUsageRelation_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AttributeUsageRelation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AttributeUsageRelation_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AttributeUsageRelation_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AttributeUsageRelation_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AttributeUsageRelation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AttributeUsageRelation_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AttributeUsageRelation_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AttributeUsageRelation_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AttributeUsageRelation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AttributeUsageRelation_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AttributeUsageRelation_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AttributeUsageRelation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AttributeUsageRelation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AttributeUsageRelation_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AttributeUsageRelation_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_Category_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_Category_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_Category_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_Category_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_Category_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_Category_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_Category_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_Category_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_Category_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_Category_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_Category_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_Category_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_Category_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_Category_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_Category_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_Category_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoryHierarchy_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoryHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoryHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoryHierarchy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoryHierarchy_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CostMatrix_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CostMatrix_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CostMatrix_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CostMatrix_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CostMatrix_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningAttribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningAttribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningAttribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningAttribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.MiningDataSpecification'
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_attribute
    @dataSpecification_ID INT
AS
   SELECT _ID
      FROM DataMining_MiningAttribute
      WHERE dataSpecification_ID = @dataSpecification_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_attribute
    @dataSpecification_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_HasAttribute_attribute @dataSpecification_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_attribute
    @dataSpecification_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_HasAttribute @dataSpecification_ID = @dataSpecification_ID, @attribute_ID = @attribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_attribute
    @dataSpecification_ID INT
   ,@attribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_HasAttribute @dataSpecification_ID = @dataSpecification_ID, @attribute_ID = @attribute_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_attribute
   @dataSpecification_ID INT
AS
   DECLARE @Error INT
   DECLARE @attribute_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_3B948EB3DEEF
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_MiningAttribute
            WHERE dataSpecification_ID = @dataSpecification_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @attribute_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_HasAttribute @dataSpecification_ID, @attribute_ID
         FETCH NEXT FROM @_Cursor INTO @attribute_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_3B948EB3DEEF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningDataSpecification_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningDataSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningDataSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningDataSpecification_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningDataSpecification_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.MiningModel'
GO

CREATE PROCEDURE Get_DataMining_MiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_DerivedFromSettings_settings @miningModel_ID, @settings_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_DerivedFromSettings @miningModel_ID = @miningModel_ID, @settings_ID = @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_DerivedFromSettings @miningModel_ID = @miningModel_ID, @settings_ID = @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_settings
   @miningModel_ID INT
AS
   DECLARE @Error INT
   DECLARE @settings_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_F6818E05404A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_MiningSettings
            WHERE miningModel_ID = @miningModel_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @settings_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_DerivedFromSettings @miningModel_ID, @settings_ID
         FETCH NEXT FROM @_Cursor INTO @settings_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_F6818E05404A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_inputSpec
    @miningModel_ID INT
AS
   SELECT _ID
      FROM DataMining_ApplicationInputSpecification
      WHERE miningModel_ID = @miningModel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_inputSpec
    @miningModel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningModelOwnsInputSpecification_inputSpec @miningModel_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_inputSpec
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_MiningModelOwnsInputSpecification @miningModel_ID = @miningModel_ID, @inputSpec_ID = @inputSpec_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_inputSpec
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_MiningModelOwnsInputSpecification @miningModel_ID = @miningModel_ID, @inputSpec_ID = @inputSpec_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_inputSpec
   @miningModel_ID INT
AS
   DECLARE @Error INT
   DECLARE @inputSpec_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_F97D7D589882
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_ApplicationInputSpecification
            WHERE miningModel_ID = @miningModel_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @inputSpec_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_MiningModelOwnsInputSpecification @miningModel_ID, @inputSpec_ID
         FETCH NEXT FROM @_Cursor INTO @inputSpec_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_F97D7D589882
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModel_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModel_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.MiningModelResult'
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_model
    @miningResult_ID INT
   ,@model_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_ProducedByModel_model @miningResult_ID, @model_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_model
    @miningResult_ID INT
   ,@model_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_ProducedByModel @miningResult_ID = @miningResult_ID, @model_ID = @model_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_model
    @miningResult_ID INT
   ,@model_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_ProducedByModel @miningResult_ID = @miningResult_ID, @model_ID = @model_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_model
   @miningResult_ID INT
AS
   DECLARE @Error INT
   DECLARE @model_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_4A13E16F3B03
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT model_ID
            FROM DataMining_MiningModelResult
            WHERE _ID = @miningResult_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @model_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_ProducedByModel @miningResult_ID, @model_ID
         FETCH NEXT FROM @_Cursor INTO @model_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_4A13E16F3B03
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningModelResult_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningModelResult_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningModelResult_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningModelResult_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningModelResult_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_NumericAttribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_NumericAttribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_NumericAttribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_NumericAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_NumericAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_NumericAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_NumericAttribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.SupervisedMiningModel'
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_target
    @supervisedMiningModel_ID INT
   ,@target_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_SupervisedMiningModelReferencesTargetAttribute_target @supervisedMiningModel_ID, @target_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_target
    @supervisedMiningModel_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_SupervisedMiningModelReferencesTargetAttribute @supervisedMiningModel_ID = @supervisedMiningModel_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_target
    @supervisedMiningModel_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_SupervisedMiningModelReferencesTargetAttribute @supervisedMiningModel_ID = @supervisedMiningModel_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_target
   @supervisedMiningModel_ID INT
AS
   DECLARE @Error INT
   DECLARE @target_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_8F9154F31C0E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT target_ID
            FROM DataMining_SupervisedMiningModel
            WHERE _ID = @supervisedMiningModel_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @target_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_SupervisedMiningModelReferencesTargetAttribute @supervisedMiningModel_ID, @target_ID
         FETCH NEXT FROM @_Cursor INTO @target_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_8F9154F31C0E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningModel_settings @miningModel_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningModel_settings @miningModel_ID, @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_settings
    @miningModel_ID INT
   ,@settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningModel_settings @miningModel_ID, @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_settings
   @miningModel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningModel_settings @miningModel_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_inputSpec
    @miningModel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningModel_inputSpec @miningModel_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_inputSpec
    @miningModel_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningModel_inputSpec @miningModel_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_inputSpec
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningModel_inputSpec @miningModel_ID, @inputSpec_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_inputSpec
    @miningModel_ID INT
   ,@inputSpec_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningModel_inputSpec @miningModel_ID, @inputSpec_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_inputSpec
   @miningModel_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningModel_inputSpec @miningModel_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningModel_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningModel_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningModel_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.CategoricalAttribute'
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesAsTaxonomy_taxonomy @categoricalAttribute_ID, @taxonomy_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesAsTaxonomy @categoricalAttribute_ID = @categoricalAttribute_ID, @taxonomy_ID = @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesAsTaxonomy @categoricalAttribute_ID = @categoricalAttribute_ID, @taxonomy_ID = @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_taxonomy
   @categoricalAttribute_ID INT
AS
   DECLARE @Error INT
   DECLARE @taxonomy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_EF395FD4E016
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT taxonomy_ID
            FROM DataMining_CategoricalAttribute
            WHERE _ID = @categoricalAttribute_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @taxonomy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesAsTaxonomy @categoricalAttribute_ID, @taxonomy_ID
         FETCH NEXT FROM @_Cursor INTO @taxonomy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_EF395FD4E016
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_category
    @categoricalAttribute_ID INT
AS
   SELECT _ID
      FROM DataMining_Category
      WHERE categoricalAttribute_ID = @categoricalAttribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoricalAttribute_category
    @categoricalAttribute_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_ContainsCategory_category @categoricalAttribute_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_category
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_ContainsCategory @categoricalAttribute_ID = @categoricalAttribute_ID, @category_ID = @category_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_category
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_ContainsCategory @categoricalAttribute_ID = @categoricalAttribute_ID, @category_ID = @category_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_category
   @categoricalAttribute_ID INT
AS
   DECLARE @Error INT
   DECLARE @category_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_B45567F1C34A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_Category
            WHERE categoricalAttribute_ID = @categoricalAttribute_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @category_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_ContainsCategory @categoricalAttribute_ID, @category_ID
         FETCH NEXT FROM @_Cursor INTO @category_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_B45567F1C34A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoricalAttribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoricalAttribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_CategoricalAttribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_CategoricalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_CategoricalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_CategoricalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_CategoricalAttribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_CategoricalAttribute_taxonomy @categoricalAttribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_CategoricalAttribute_taxonomy @categoricalAttribute_ID, @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_taxonomy
    @categoricalAttribute_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_CategoricalAttribute_taxonomy @categoricalAttribute_ID, @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_taxonomy
   @categoricalAttribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_CategoricalAttribute_taxonomy @categoricalAttribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_category
    @categoricalAttribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_CategoricalAttribute_category @categoricalAttribute_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdinalAttribute_category
    @categoricalAttribute_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_CategoricalAttribute_category @categoricalAttribute_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_category
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_CategoricalAttribute_category @categoricalAttribute_ID, @category_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_category
    @categoricalAttribute_ID INT
   ,@category_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_CategoricalAttribute_category @categoricalAttribute_ID, @category_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_category
   @categoricalAttribute_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_CategoricalAttribute_category @categoricalAttribute_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdinalAttribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdinalAttribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_OrdinalAttribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_OrdinalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_OrdinalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_OrdinalAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_OrdinalAttribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.MiningSettings'
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_attributeUsage
    @settings_ID INT
AS
   SELECT _ID
      FROM DataMining_AttributeUsageRelation
      WHERE settings_ID = @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_ContainsAttributeUsage_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_ContainsAttributeUsage @settings_ID = @settings_ID, @attributeUsage_ID = @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_ContainsAttributeUsage @settings_ID = @settings_ID, @attributeUsage_ID = @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @attributeUsage_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_58D9B532E65D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM DataMining_AttributeUsageRelation
            WHERE settings_ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @attributeUsage_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_ContainsAttributeUsage @settings_ID, @attributeUsage_ID
         FETCH NEXT FROM @_Cursor INTO @attributeUsage_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_58D9B532E65D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesAsInput_dataSpecification @settings_ID, @dataSpecification_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesAsInput @settings_ID = @settings_ID, @dataSpecification_ID = @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesAsInput @settings_ID = @settings_ID, @dataSpecification_ID = @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @dataSpecification_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_AB832560D641
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT dataSpecification_ID
            FROM DataMining_MiningSettings
            WHERE _ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @dataSpecification_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesAsInput @settings_ID, @dataSpecification_ID
         FETCH NEXT FROM @_Cursor INTO @dataSpecification_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_AB832560D641
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_MiningSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_MiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_MiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_MiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_MiningSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClusteringSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClusteringSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClusteringSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClusteringSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClusteringSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_StatisticsSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_StatisticsSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_StatisticsSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_StatisticsSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_StatisticsSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.SupervisedMiningSettings'
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_target
    @settings_ID INT
   ,@target_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesAsTarget_target @settings_ID, @target_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesAsTarget @settings_ID = @settings_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesAsTarget @settings_ID = @settings_ID, @target_ID = @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_target
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @target_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_A93FC74FD42E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT target_ID
            FROM DataMining_SupervisedMiningSettings
            WHERE _ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @target_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesAsTarget @settings_ID, @target_ID
         FETCH NEXT FROM @_Cursor INTO @target_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_A93FC74FD42E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_SupervisedMiningSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_SupervisedMiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_SupervisedMiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_SupervisedMiningSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_SupervisedMiningSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.ClassificationSettings'
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_costMatrix
    @settings_ID INT
   ,@costMatrix_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesCostMatrix_costMatrix @settings_ID, @costMatrix_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_costMatrix
    @settings_ID INT
   ,@costMatrix_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesCostMatrix @settings_ID = @settings_ID, @costMatrix_ID = @costMatrix_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_costMatrix
    @settings_ID INT
   ,@costMatrix_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesCostMatrix @settings_ID = @settings_ID, @costMatrix_ID = @costMatrix_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_costMatrix
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @costMatrix_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_22CF2CE33F18
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT costMatrix_ID
            FROM DataMining_ClassificationSettings
            WHERE _ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @costMatrix_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesCostMatrix @settings_ID, @costMatrix_ID
         FETCH NEXT FROM @_Cursor INTO @costMatrix_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_22CF2CE33F18
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_target
    @settings_ID INT
   ,@target_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_SupervisedMiningSettings_target @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_SupervisedMiningSettings_target @settings_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_SupervisedMiningSettings_target @settings_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_target
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_SupervisedMiningSettings_target @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ClassificationSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ClassificationSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ClassificationSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ClassificationSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ClassificationSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_target
    @settings_ID INT
   ,@target_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_SupervisedMiningSettings_target @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_SupervisedMiningSettings_target @settings_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_target
    @settings_ID INT
   ,@target_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_SupervisedMiningSettings_target @settings_ID, @target_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_target
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_SupervisedMiningSettings_target @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_RegressionSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_RegressionSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_RegressionSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_RegressionSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_RegressionSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References DataMining.AssociationRulesSettings'
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_itemId
    @settings_ID INT
   ,@itemId_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesItemId_itemId @settings_ID, @itemId_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_itemId
    @settings_ID INT
   ,@itemId_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesItemId @settings_ID = @settings_ID, @itemId_ID = @itemId_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_itemId
    @settings_ID INT
   ,@itemId_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesItemId @settings_ID = @settings_ID, @itemId_ID = @itemId_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_itemId
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @itemId_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_22C393E4BC68
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT itemId_ID
            FROM DataMining_AssociationRulesSettings
            WHERE _ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @itemId_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesItemId @settings_ID, @itemId_ID
         FETCH NEXT FROM @_Cursor INTO @itemId_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_22C393E4BC68
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_transactionId
    @settings_ID INT
   ,@transactionId_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_DataMining_UsesTransactionId_transactionId @settings_ID, @transactionId_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_transactionId
    @settings_ID INT
   ,@transactionId_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_DataMining_UsesTransactionId @settings_ID = @settings_ID, @transactionId_ID = @transactionId_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_transactionId
    @settings_ID INT
   ,@transactionId_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_DataMining_UsesTransactionId @settings_ID = @settings_ID, @transactionId_ID = @transactionId_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_transactionId
   @settings_ID INT
AS
   DECLARE @Error INT
   DECLARE @transactionId_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_DataMini_1B1710D59B6A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transactionId_ID
            FROM DataMining_AssociationRulesSettings
            WHERE _ID = @settings_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transactionId_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_DataMining_UsesTransactionId @settings_ID, @transactionId_ID
         FETCH NEXT FROM @_Cursor INTO @transactionId_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_DataMini_1B1710D59B6A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_attributeUsage
    @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_attributeUsage
    @settings_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_DataMining_MiningSettings_attributeUsage @settings_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_attributeUsage
    @settings_ID INT
   ,@attributeUsage_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_attributeUsage @settings_ID, @attributeUsage_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_attributeUsage
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_attributeUsage @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_dataSpecification
    @settings_ID INT
   ,@dataSpecification_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_DataMining_MiningSettings_dataSpecification @settings_ID, @dataSpecification_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_dataSpecification
   @settings_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_DataMining_MiningSettings_dataSpecification @settings_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_AssociationRulesSettings_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_AssociationRulesSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_AssociationRulesSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_AssociationRulesSettings_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_AssociationRulesSettings_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_type
    @structuralFeature_ID INT
   ,@type_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_StructuralFeature_type @structuralFeature_ID, @type_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_type
   @structuralFeature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_StructuralFeature_type @structuralFeature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationAttribute_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationAttribute_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_DataMining_ApplicationAttribute_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_DataMining_ApplicationAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_DataMining_ApplicationAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_DataMining_ApplicationAttribute_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_DataMining_ApplicationAttribute_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- InformationVisualization References
--


PRINT 'References InformationVisualization.RenderedObject'
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_rendering
    @renderedObject_ID INT
AS
   SELECT rendering_ID
      FROM InformationVisualization_RenderedObjectsReferenceRenderings
      WHERE renderedObject_ID = @renderedObject_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_rendering
    @renderedObject_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_rendering @renderedObject_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_rendering
    @renderedObject_ID INT
   ,@rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectsReferenceRenderings @renderedObject_ID = @renderedObject_ID, @rendering_ID = @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_rendering
    @renderedObject_ID INT
   ,@rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceRenderings @renderedObject_ID = @renderedObject_ID, @rendering_ID = @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_rendering
   @renderedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @rendering_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_3E695920FE20
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT rendering_ID
            FROM InformationVisualization_RenderedObjectsReferenceRenderings
            WHERE renderedObject_ID = @renderedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @rendering_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceRenderings @renderedObject_ID, @rendering_ID
         FETCH NEXT FROM @_Cursor INTO @rendering_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_3E695920FE20
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_defaultRendering
    @defaultedRenderedObject_ID INT
   ,@defaultRendering_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultRendering @defaultedRenderedObject_ID, @defaultRendering_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_defaultRendering
    @defaultedRenderedObject_ID INT
   ,@defaultRendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultedRenderedObject_ID = @defaultedRenderedObject_ID, @defaultRendering_ID = @defaultRendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_defaultRendering
    @defaultedRenderedObject_ID INT
   ,@defaultRendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultedRenderedObject_ID = @defaultedRenderedObject_ID, @defaultRendering_ID = @defaultRendering_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_defaultRendering
   @defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @defaultRendering_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_42E43360FAC9
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT defaultRendering_ID
            FROM InformationVisualization_RenderedObject
            WHERE _ID = @defaultedRenderedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @defaultRendering_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultedRenderedObject_ID, @defaultRendering_ID
         FETCH NEXT FROM @_Cursor INTO @defaultRendering_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_42E43360FAC9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_component
    @composite_ID INT
AS
   SELECT component_ID
      FROM InformationVisualization_CompositesReferenceComponents
      WHERE composite_ID = @composite_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_component
    @composite_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_CompositesReferenceComponents_component @composite_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_component
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_CompositesReferenceComponents @composite_ID = @composite_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_component
    @composite_ID INT
   ,@component_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_CompositesReferenceComponents @composite_ID = @composite_ID, @component_ID = @component_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_component
   @composite_ID INT
AS
   DECLARE @Error INT
   DECLARE @component_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_E70FEFBC62FB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT component_ID
            FROM InformationVisualization_CompositesReferenceComponents
            WHERE composite_ID = @composite_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @component_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_CompositesReferenceComponents @composite_ID, @component_ID
         FETCH NEXT FROM @_Cursor INTO @component_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_E70FEFBC62FB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_composite
    @component_ID INT
AS
   SELECT composite_ID
      FROM InformationVisualization_CompositesReferenceComponents
      WHERE component_ID = @component_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_composite
    @component_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_CompositesReferenceComponents_composite @component_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_composite
    @component_ID INT
   ,@composite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_CompositesReferenceComponents @component_ID = @component_ID, @composite_ID = @composite_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_composite
    @component_ID INT
   ,@composite_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_CompositesReferenceComponents @component_ID = @component_ID, @composite_ID = @composite_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_composite
   @component_ID INT
AS
   DECLARE @Error INT
   DECLARE @composite_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_6C7E55D00B94
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT composite_ID
            FROM InformationVisualization_CompositesReferenceComponents
            WHERE component_ID = @component_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @composite_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_CompositesReferenceComponents @component_ID, @composite_ID
         FETCH NEXT FROM @_Cursor INTO @composite_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_6C7E55D00B94
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_neighbor
    @referencingNeighbor_ID INT
AS
   SELECT neighbor_ID
      FROM InformationVisualization_NeighborsReferenceNeighbors
      WHERE referencingNeighbor_ID = @referencingNeighbor_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_neighbor
    @referencingNeighbor_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_NeighborsReferenceNeighbors_neighbor @referencingNeighbor_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_neighbor
    @referencingNeighbor_ID INT
   ,@neighbor_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_NeighborsReferenceNeighbors @referencingNeighbor_ID = @referencingNeighbor_ID, @neighbor_ID = @neighbor_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_neighbor
    @referencingNeighbor_ID INT
   ,@neighbor_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_NeighborsReferenceNeighbors @referencingNeighbor_ID = @referencingNeighbor_ID, @neighbor_ID = @neighbor_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_neighbor
   @referencingNeighbor_ID INT
AS
   DECLARE @Error INT
   DECLARE @neighbor_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_9CD390A6458F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT neighbor_ID
            FROM InformationVisualization_NeighborsReferenceNeighbors
            WHERE referencingNeighbor_ID = @referencingNeighbor_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @neighbor_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_NeighborsReferenceNeighbors @referencingNeighbor_ID, @neighbor_ID
         FETCH NEXT FROM @_Cursor INTO @neighbor_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_9CD390A6458F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_referencingNeighbor
    @neighbor_ID INT
AS
   SELECT referencingNeighbor_ID
      FROM InformationVisualization_NeighborsReferenceNeighbors
      WHERE neighbor_ID = @neighbor_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_referencingNeighbor
    @neighbor_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_NeighborsReferenceNeighbors_referencingNeighbor @neighbor_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_referencingNeighbor
    @neighbor_ID INT
   ,@referencingNeighbor_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_NeighborsReferenceNeighbors @neighbor_ID = @neighbor_ID, @referencingNeighbor_ID = @referencingNeighbor_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_referencingNeighbor
    @neighbor_ID INT
   ,@referencingNeighbor_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_NeighborsReferenceNeighbors @neighbor_ID = @neighbor_ID, @referencingNeighbor_ID = @referencingNeighbor_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_referencingNeighbor
   @neighbor_ID INT
AS
   DECLARE @Error INT
   DECLARE @referencingNeighbor_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_970E83D90807
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT referencingNeighbor_ID
            FROM InformationVisualization_NeighborsReferenceNeighbors
            WHERE neighbor_ID = @neighbor_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @referencingNeighbor_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_NeighborsReferenceNeighbors @neighbor_ID, @referencingNeighbor_ID
         FETCH NEXT FROM @_Cursor INTO @referencingNeighbor_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_970E83D90807
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_modelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_RenderedObjectsReferenceModelElement_modelElement @renderedObject_ID, @modelElement_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_modelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectsReferenceModelElement @renderedObject_ID = @renderedObject_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_modelElement
    @renderedObject_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceModelElement @renderedObject_ID = @renderedObject_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_modelElement
   @renderedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_605FDD6AA32C
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM InformationVisualization_RenderedObject
            WHERE _ID = @renderedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceModelElement @renderedObject_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_605FDD6AA32C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_renderedObjectSet
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObjectSet @renderedObject_ID, @renderedObjectSet_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_renderedObjectSet
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObject_ID = @renderedObject_ID, @renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_renderedObjectSet
    @renderedObject_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObject_ID = @renderedObject_ID, @renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_renderedObjectSet
   @renderedObject_ID INT
AS
   DECLARE @Error INT
   DECLARE @renderedObjectSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_D1FFAC589899
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT renderedObjectSet_ID
            FROM InformationVisualization_RenderedObject
            WHERE _ID = @renderedObject_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @renderedObjectSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObject_ID, @renderedObjectSet_ID
         FETCH NEXT FROM @_Cursor INTO @renderedObjectSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_D1FFAC589899
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_feature
    @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_feature
    @owner_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Classifier_feature @owner_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_feature
    @owner_ID INT
   ,@feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Classifier_feature @owner_ID, @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_feature
   @owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Classifier_feature @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObject_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObject_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObject_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References InformationVisualization.RenderedObjectSet'
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_renderedObject
    @renderedObjectSet_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_RenderedObject
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_renderedObject
    @renderedObjectSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderedObjects_renderedObject @renderedObjectSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_renderedObject
    @renderedObjectSet_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObjectSet_ID = @renderedObjectSet_ID, @renderedObject_ID = @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_renderedObject
    @renderedObjectSet_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObjectSet_ID = @renderedObjectSet_ID, @renderedObject_ID = @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_renderedObject
   @renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @renderedObject_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_D2302A49373E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM InformationVisualization_RenderedObject
            WHERE renderedObjectSet_ID = @renderedObjectSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @renderedObject_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderedObjects @renderedObjectSet_ID, @renderedObject_ID
         FETCH NEXT FROM @_Cursor INTO @renderedObject_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_D2302A49373E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_rendering
    @renderedObjectSet_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_Rendering
      WHERE renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_rendering
    @renderedObjectSet_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_RenderedObjectSetOwnsRenderings_rendering @renderedObjectSet_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_rendering
    @renderedObjectSet_ID INT
   ,@rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectSetOwnsRenderings @renderedObjectSet_ID = @renderedObjectSet_ID, @rendering_ID = @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_rendering
    @renderedObjectSet_ID INT
   ,@rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderings @renderedObjectSet_ID = @renderedObjectSet_ID, @rendering_ID = @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_rendering
   @renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   DECLARE @rendering_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_5DC10AD8DE70
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM InformationVisualization_Rendering
            WHERE renderedObjectSet_ID = @renderedObjectSet_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @rendering_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderings @renderedObjectSet_ID, @rendering_ID
         FETCH NEXT FROM @_Cursor INTO @rendering_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_5DC10AD8DE70
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_RenderedObjectSet_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_RenderedObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_RenderedObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_RenderedObjectSet_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_RenderedObjectSet_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References InformationVisualization.Rendering'
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_renderedObject
    @rendering_ID INT
AS
   SELECT renderedObject_ID
      FROM InformationVisualization_RenderedObjectsReferenceRenderings
      WHERE rendering_ID = @rendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering_renderedObject
    @rendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_RenderedObjectsReferenceRenderings_renderedObject @rendering_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_renderedObject
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectsReferenceRenderings @rendering_ID = @rendering_ID, @renderedObject_ID = @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_renderedObject
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceRenderings @rendering_ID = @rendering_ID, @renderedObject_ID = @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_renderedObject
   @rendering_ID INT
AS
   DECLARE @Error INT
   DECLARE @renderedObject_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_E9EFD9408B93
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT renderedObject_ID
            FROM InformationVisualization_RenderedObjectsReferenceRenderings
            WHERE rendering_ID = @rendering_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @renderedObject_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceRenderings @rendering_ID, @renderedObject_ID
         FETCH NEXT FROM @_Cursor INTO @renderedObject_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_E9EFD9408B93
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_defaultedRenderedObject
    @defaultRendering_ID INT
AS
   SELECT _ID
      FROM InformationVisualization_RenderedObject
      WHERE defaultRendering_ID = @defaultRendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_RenderedObjectsReferenceDefaultRendering_defaultedRenderedObject @defaultRendering_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultRendering_ID = @defaultRendering_ID, @defaultedRenderedObject_ID = @defaultedRenderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultRendering_ID = @defaultRendering_ID, @defaultedRenderedObject_ID = @defaultedRenderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_defaultedRenderedObject
   @defaultRendering_ID INT
AS
   DECLARE @Error INT
   DECLARE @defaultedRenderedObject_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_2CF02ACC14F7
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM InformationVisualization_RenderedObject
            WHERE defaultRendering_ID = @defaultRendering_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @defaultedRenderedObject_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectsReferenceDefaultRendering @defaultRendering_ID, @defaultedRenderedObject_ID
         FETCH NEXT FROM @_Cursor INTO @defaultedRenderedObject_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_2CF02ACC14F7
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_InformationVisualization_RenderedObjectSetOwnsRenderings_renderedObjectSet @rendering_ID, @renderedObjectSet_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_InformationVisualization_RenderedObjectSetOwnsRenderings @rendering_ID = @rendering_ID, @renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderings @rendering_ID = @rendering_ID, @renderedObjectSet_ID = @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_renderedObjectSet
   @rendering_ID INT
AS
   DECLARE @Error INT
   DECLARE @renderedObjectSet_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Informat_A47AA9DE1CEF
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT renderedObjectSet_ID
            FROM InformationVisualization_Rendering
            WHERE _ID = @rendering_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @renderedObjectSet_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_InformationVisualization_RenderedObjectSetOwnsRenderings @rendering_ID, @renderedObjectSet_ID
         FETCH NEXT FROM @_Cursor INTO @renderedObjectSet_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Informat_A47AA9DE1CEF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_Rendering_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_Rendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_Rendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_Rendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_Rendering_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_renderedObject
    @rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_renderedObject @rendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering_renderedObject
    @rendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_Rendering_renderedObject @rendering_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_renderedObject
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_InformationVisualization_Rendering_renderedObject @rendering_ID, @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_renderedObject
    @rendering_ID INT
   ,@renderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_InformationVisualization_Rendering_renderedObject @rendering_ID, @renderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_renderedObject
   @rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_renderedObject @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_defaultedRenderedObject
    @defaultRendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_defaultedRenderedObject @defaultRendering_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_InformationVisualization_Rendering_defaultedRenderedObject @defaultRendering_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_InformationVisualization_Rendering_defaultedRenderedObject @defaultRendering_ID, @defaultedRenderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_defaultedRenderedObject
    @defaultRendering_ID INT
   ,@defaultedRenderedObject_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_InformationVisualization_Rendering_defaultedRenderedObject @defaultRendering_ID, @defaultedRenderedObject_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_defaultedRenderedObject
   @defaultRendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_defaultedRenderedObject @defaultRendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_renderedObjectSet @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_InformationVisualization_Rendering_renderedObjectSet @rendering_ID, @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_renderedObjectSet
    @rendering_ID INT
   ,@renderedObjectSet_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_InformationVisualization_Rendering_renderedObjectSet @rendering_ID, @renderedObjectSet_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_renderedObjectSet
   @rendering_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_InformationVisualization_Rendering_renderedObjectSet @rendering_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_owner
    @feature_ID INT
   ,@owner_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_owner
    @feature_ID INT
   ,@owner_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Feature_owner @feature_ID, @owner_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_owner
   @feature_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Feature_owner @feature_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_InformationVisualization_XSLRendering_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_InformationVisualization_XSLRendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_InformationVisualization_XSLRendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_InformationVisualization_XSLRendering_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_InformationVisualization_XSLRendering_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- BusinessNomenclature References
--


PRINT 'References BusinessNomenclature.VocabularyElement'
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_modelElement
    @vocabularyElement_ID INT
AS
   SELECT modelElement_ID
      FROM BusinessNomenclature_VocabularyElementToModelElement
      WHERE vocabularyElement_ID = @vocabularyElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElement_modelElement
    @vocabularyElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_VocabularyElementToModelElement_modelElement @vocabularyElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_VocabularyElement_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_VocabularyElementToModelElement @vocabularyElement_ID = @vocabularyElement_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_VocabularyElement_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_VocabularyElementToModelElement @vocabularyElement_ID = @vocabularyElement_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_VocabularyElement_modelElement
   @vocabularyElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_16C5099D1055
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM BusinessNomenclature_VocabularyElementToModelElement
            WHERE vocabularyElement_ID = @vocabularyElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_VocabularyElementToModelElement @vocabularyElement_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_16C5099D1055
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElement_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_VocabularyElement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_VocabularyElement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_VocabularyElement_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElement_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_VocabularyElement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_VocabularyElement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_VocabularyElement_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_VocabularyElement_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_VocabularyElement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_VocabularyElement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_VocabularyElement_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_VocabularyElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_VocabularyElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_VocabularyElement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_VocabularyElement_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Nomenclature_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Nomenclature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Nomenclature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Nomenclature_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Nomenclature_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessNomenclature.Taxonomy'
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_domain
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_domain
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_domain
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_domain
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_B4CD132022AD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_B4CD132022AD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_concept
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_concept
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_concept
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_concept
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_concept
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_6FB4873094FB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_6FB4873094FB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_subtaxonomy
    @parent_ID INT
AS
   SELECT _ID
      FROM BusinessNomenclature_Nomenclature
      WHERE parent_ID = @parent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_subtaxonomy
    @parent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_NomenclatureHierarchy_child @parent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_subtaxonomy
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_NomenclatureHierarchy @parent_ID = @parent_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_subtaxonomy
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_NomenclatureHierarchy @parent_ID = @parent_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_subtaxonomy
   @parent_ID INT
AS
   DECLARE @Error INT
   DECLARE @child_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_BB4537A9F910
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT child_ID
            FROM BusinessNomenclature_NomenclatureHierarchy
            WHERE parent_ID = @parent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @child_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_NomenclatureHierarchy @parent_ID, @child_ID
         FETCH NEXT FROM @_Cursor INTO @child_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_BB4537A9F910
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Taxonomy_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Taxonomy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Taxonomy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Taxonomy_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Taxonomy_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessNomenclature.Glossary'
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_taxonomy
    @glossary_ID INT
AS
   SELECT taxonomy_ID
      FROM BusinessNomenclature_GlossaryToTaxonomy
      WHERE glossary_ID = @glossary_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_taxonomy
    @glossary_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_GlossaryToTaxonomy_taxonomy @glossary_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_taxonomy
    @glossary_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_GlossaryToTaxonomy @glossary_ID = @glossary_ID, @taxonomy_ID = @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_taxonomy
    @glossary_ID INT
   ,@taxonomy_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_GlossaryToTaxonomy @glossary_ID = @glossary_ID, @taxonomy_ID = @taxonomy_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_taxonomy
   @glossary_ID INT
AS
   DECLARE @Error INT
   DECLARE @taxonomy_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_B8CA307903F8
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT taxonomy_ID
            FROM BusinessNomenclature_GlossaryToTaxonomy
            WHERE glossary_ID = @glossary_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @taxonomy_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_GlossaryToTaxonomy @glossary_ID, @taxonomy_ID
         FETCH NEXT FROM @_Cursor INTO @taxonomy_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_B8CA307903F8
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_term
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_term
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_term
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_term
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_term
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_00591D0DCE00
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_00591D0DCE00
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_subglossary
    @parent_ID INT
AS
   SELECT _ID
      FROM BusinessNomenclature_Nomenclature
      WHERE parent_ID = @parent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_subglossary
    @parent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_NomenclatureHierarchy_child @parent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_subglossary
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_NomenclatureHierarchy @parent_ID = @parent_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_subglossary
    @parent_ID INT
   ,@child_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_NomenclatureHierarchy @parent_ID = @parent_ID, @child_ID = @child_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_subglossary
   @parent_ID INT
AS
   DECLARE @Error INT
   DECLARE @child_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_DE1749E94805
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT child_ID
            FROM BusinessNomenclature_NomenclatureHierarchy
            WHERE parent_ID = @parent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @child_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_NomenclatureHierarchy @parent_ID, @child_ID
         FETCH NEXT FROM @_Cursor INTO @child_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_DE1749E94805
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Glossary_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Glossary_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Glossary_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Glossary_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Glossary_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessNomenclature.BusinessDomain'
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_taxonomy
    @namespace_ID INT
AS
   SELECT _ID
      FROM Core_ModelElement
      WHERE namespace_ID = @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_taxonomy
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ElementOwnership_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_taxonomy
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_taxonomy
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID = @namespace_ID, @ownedElement_ID = @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_taxonomy
   @namespace_ID INT
AS
   DECLARE @Error INT
   DECLARE @ownedElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_CBE5A60FD154
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM Core_ModelElement
            WHERE namespace_ID = @namespace_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @namespace_ID, @ownedElement_ID
         FETCH NEXT FROM @_Cursor INTO @ownedElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_CBE5A60FD154
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_BusinessDomain_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_BusinessDomain_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_BusinessDomain_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_BusinessDomain_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_BusinessDomain_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessNomenclature.Concept'
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_taxonomy
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_taxonomy
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_taxonomy
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_taxonomy
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_FFCDD2646F8B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_FFCDD2646F8B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_relatedConcept
    @concept_ID INT
AS
   SELECT relatedConcept_ID
      FROM BusinessNomenclature_RelatedConcepts
      WHERE concept_ID = @concept_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept_relatedConcept
    @concept_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_RelatedConcepts_relatedConcept @concept_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_relatedConcept
    @concept_ID INT
   ,@relatedConcept_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_RelatedConcepts @concept_ID = @concept_ID, @relatedConcept_ID = @relatedConcept_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_relatedConcept
    @concept_ID INT
   ,@relatedConcept_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_RelatedConcepts @concept_ID = @concept_ID, @relatedConcept_ID = @relatedConcept_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_relatedConcept
   @concept_ID INT
AS
   DECLARE @Error INT
   DECLARE @relatedConcept_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_A4E8AAE71F9D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT relatedConcept_ID
            FROM BusinessNomenclature_RelatedConcepts
            WHERE concept_ID = @concept_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @relatedConcept_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_RelatedConcepts @concept_ID, @relatedConcept_ID
         FETCH NEXT FROM @_Cursor INTO @relatedConcept_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_A4E8AAE71F9D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_modelElement
    @vocabularyElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept_modelElement
    @vocabularyElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_modelElement
   @vocabularyElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Concept_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Concept_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Concept_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Concept_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Concept_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References BusinessNomenclature.Term'
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_glossary
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_Core_ElementOwnership_namespace @ownedElement_ID, @namespace_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_glossary
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_glossary
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID = @ownedElement_ID, @namespace_ID = @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_glossary
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   DECLARE @namespace_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_BCC537A795FD
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT namespace_ID
            FROM Core_ModelElement
            WHERE _ID = @ownedElement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @namespace_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_Core_ElementOwnership @ownedElement_ID, @namespace_ID
         FETCH NEXT FROM @_Cursor INTO @namespace_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_BCC537A795FD
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_concept
    @term_ID INT
AS
   SELECT concept_ID
      FROM BusinessNomenclature_TermToConcept
      WHERE term_ID = @term_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_concept
    @term_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_TermToConcept_concept @term_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_concept
    @term_ID INT
   ,@concept_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_TermToConcept @term_ID = @term_ID, @concept_ID = @concept_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_concept
    @term_ID INT
   ,@concept_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_TermToConcept @term_ID = @term_ID, @concept_ID = @concept_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_concept
   @term_ID INT
AS
   DECLARE @Error INT
   DECLARE @concept_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_950C6340FA78
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT concept_ID
            FROM BusinessNomenclature_TermToConcept
            WHERE term_ID = @term_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @concept_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_TermToConcept @term_ID, @concept_ID
         FETCH NEXT FROM @_Cursor INTO @concept_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_950C6340FA78
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_relatedTerm
    @term_ID INT
AS
   SELECT relatedTerm_ID
      FROM BusinessNomenclature_RelatedTerms
      WHERE term_ID = @term_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_relatedTerm
    @term_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_RelatedTerms_relatedTerm @term_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_relatedTerm
    @term_ID INT
   ,@relatedTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_RelatedTerms @term_ID = @term_ID, @relatedTerm_ID = @relatedTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_relatedTerm
    @term_ID INT
   ,@relatedTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_RelatedTerms @term_ID = @term_ID, @relatedTerm_ID = @relatedTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_relatedTerm
   @term_ID INT
AS
   DECLARE @Error INT
   DECLARE @relatedTerm_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_2FC9BC068F5F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT relatedTerm_ID
            FROM BusinessNomenclature_RelatedTerms
            WHERE term_ID = @term_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @relatedTerm_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_RelatedTerms @term_ID, @relatedTerm_ID
         FETCH NEXT FROM @_Cursor INTO @relatedTerm_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_2FC9BC068F5F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_preferredTerm
    @synonym_ID INT
   ,@preferredTerm_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_BusinessNomenclature_SynonymToPreferredTerm_preferredTerm @synonym_ID, @preferredTerm_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_preferredTerm
    @synonym_ID INT
   ,@preferredTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_SynonymToPreferredTerm @synonym_ID = @synonym_ID, @preferredTerm_ID = @preferredTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_preferredTerm
    @synonym_ID INT
   ,@preferredTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_SynonymToPreferredTerm @synonym_ID = @synonym_ID, @preferredTerm_ID = @preferredTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_preferredTerm
   @synonym_ID INT
AS
   DECLARE @Error INT
   DECLARE @preferredTerm_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_43BD201EBD5A
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT preferredTerm_ID
            FROM BusinessNomenclature_SynonymToPreferredTerm
            WHERE synonym_ID = @synonym_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @preferredTerm_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_SynonymToPreferredTerm @synonym_ID, @preferredTerm_ID
         FETCH NEXT FROM @_Cursor INTO @preferredTerm_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_43BD201EBD5A
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_narrowerTerm
    @widerTerm_ID INT
AS
   SELECT narrowerTerm_ID
      FROM BusinessNomenclature_WiderToNarrowerTerm
      WHERE widerTerm_ID = @widerTerm_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_narrowerTerm
    @widerTerm_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_WiderToNarrowerTerm_narrowerTerm @widerTerm_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_narrowerTerm
    @widerTerm_ID INT
   ,@narrowerTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_BusinessNomenclature_WiderToNarrowerTerm @widerTerm_ID = @widerTerm_ID, @narrowerTerm_ID = @narrowerTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_narrowerTerm
    @widerTerm_ID INT
   ,@narrowerTerm_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_BusinessNomenclature_WiderToNarrowerTerm @widerTerm_ID = @widerTerm_ID, @narrowerTerm_ID = @narrowerTerm_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_narrowerTerm
   @widerTerm_ID INT
AS
   DECLARE @Error INT
   DECLARE @narrowerTerm_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Business_009ED899974F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT narrowerTerm_ID
            FROM BusinessNomenclature_WiderToNarrowerTerm
            WHERE widerTerm_ID = @widerTerm_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @narrowerTerm_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_BusinessNomenclature_WiderToNarrowerTerm @widerTerm_ID, @narrowerTerm_ID
         FETCH NEXT FROM @_Cursor INTO @narrowerTerm_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Business_009ED899974F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_modelElement
    @vocabularyElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_modelElement
    @vocabularyElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_modelElement
    @vocabularyElement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID, @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_modelElement
   @vocabularyElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_BusinessNomenclature_VocabularyElement_modelElement @vocabularyElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_BusinessNomenclature_Term_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_BusinessNomenclature_Term_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_BusinessNomenclature_Term_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_BusinessNomenclature_Term_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_BusinessNomenclature_Term_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- WarehouseProcess.Events References
--


PRINT 'References WarehouseProcess.Events.WarehouseEvent'
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_Event_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_Event @warehouseEvent_ID = @warehouseEvent_ID, @warehouseProcess_ID = @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_Event @warehouseEvent_ID = @warehouseEvent_ID, @warehouseProcess_ID = @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   DECLARE @warehouseProcess_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_DC4805027BDB
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT warehouseProcess_ID
            FROM WarehouseProcess_Events_WarehouseEvent
            WHERE _ID = @warehouseEvent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @warehouseProcess_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_Event @warehouseEvent_ID, @warehouseProcess_ID
         FETCH NEXT FROM @_Cursor INTO @warehouseProcess_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_DC4805027BDB
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_WarehouseEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_WarehouseEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_WarehouseEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_WarehouseEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_WarehouseEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_WarehouseEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_WarehouseEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_WarehouseEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ScheduleEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ScheduleEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ScheduleEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ScheduleEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ScheduleEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ScheduleEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ScheduleEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ScheduleEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_PointInTimeEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_PointInTimeEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_PointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_PointInTimeEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_PointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_PointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_PointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_PointInTimeEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.Events.CustomCalendarEvent'
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_customCalendar
    @customCalendarEvent_ID INT
   ,@customCalendar_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_EventUsesCustomCalendar_customCalendar @customCalendarEvent_ID, @customCalendar_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_customCalendar
    @customCalendarEvent_ID INT
   ,@customCalendar_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_EventUsesCustomCalendar @customCalendarEvent_ID = @customCalendarEvent_ID, @customCalendar_ID = @customCalendar_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_customCalendar
    @customCalendarEvent_ID INT
   ,@customCalendar_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_EventUsesCustomCalendar @customCalendarEvent_ID = @customCalendarEvent_ID, @customCalendar_ID = @customCalendar_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_customCalendar
   @customCalendarEvent_ID INT
AS
   DECLARE @Error INT
   DECLARE @customCalendar_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_1B3DAEC34655
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT customCalendar_ID
            FROM WarehouseProcess_Events_CustomCalendarEvent
            WHERE _ID = @customCalendarEvent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @customCalendar_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_EventUsesCustomCalendar @customCalendarEvent_ID, @customCalendar_ID
         FETCH NEXT FROM @_Cursor INTO @customCalendar_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_1B3DAEC34655
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendarEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendarEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendarEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendarEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendarEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendarEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendarEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendarEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.Events.CustomCalendar'
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_customCalendarEvent
    @customCalendar_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_Events_CustomCalendarEvent
      WHERE customCalendar_ID = @customCalendar_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_customCalendarEvent
    @customCalendar_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_EventUsesCustomCalendar_customCalendarEvent @customCalendar_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_customCalendarEvent
    @customCalendar_ID INT
   ,@customCalendarEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_EventUsesCustomCalendar @customCalendar_ID = @customCalendar_ID, @customCalendarEvent_ID = @customCalendarEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_customCalendarEvent
    @customCalendar_ID INT
   ,@customCalendarEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_EventUsesCustomCalendar @customCalendar_ID = @customCalendar_ID, @customCalendarEvent_ID = @customCalendarEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_customCalendarEvent
   @customCalendar_ID INT
AS
   DECLARE @Error INT
   DECLARE @customCalendarEvent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_0BC911593807
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM WarehouseProcess_Events_CustomCalendarEvent
            WHERE customCalendar_ID = @customCalendar_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @customCalendarEvent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_EventUsesCustomCalendar @customCalendar_ID, @customCalendarEvent_ID
         FETCH NEXT FROM @_Cursor INTO @customCalendarEvent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_0BC911593807
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CustomCalendar_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CustomCalendar_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CustomCalendar_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CustomCalendar_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CustomCalendar_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CalendarDate_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CalendarDate_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CalendarDate_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CalendarDate_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CalendarDate_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CalendarDate_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CalendarDate_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CalendarDate_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CalendarDate_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CalendarDate_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CalendarDate_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CalendarDate_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CalendarDate_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CalendarDate_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CalendarDate_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CalendarDate_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_IntervalEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_IntervalEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_IntervalEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_IntervalEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_IntervalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_IntervalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_IntervalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_IntervalEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ExternalEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ExternalEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ExternalEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_ExternalEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_ExternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_ExternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_ExternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_ExternalEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.Events.InternalEvent'
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_triggeringWP
    @internalEvent_ID INT
AS
   SELECT triggeringWP_ID
      FROM WarehouseProcess_TriggeringProcess
      WHERE internalEvent_ID = @internalEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent_triggeringWP
    @internalEvent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_TriggeringProcess_triggeringWP @internalEvent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_TriggeringProcess @internalEvent_ID = @internalEvent_ID, @triggeringWP_ID = @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_TriggeringProcess @internalEvent_ID = @internalEvent_ID, @triggeringWP_ID = @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_triggeringWP
   @internalEvent_ID INT
AS
   DECLARE @Error INT
   DECLARE @triggeringWP_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_F3C4CD06BD4C
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT triggeringWP_ID
            FROM WarehouseProcess_TriggeringProcess
            WHERE internalEvent_ID = @internalEvent_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @triggeringWP_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_TriggeringProcess @internalEvent_ID, @triggeringWP_ID
         FETCH NEXT FROM @_Cursor INTO @triggeringWP_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_F3C4CD06BD4C
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_InternalEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_InternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_InternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_InternalEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_InternalEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_triggeringWP
    @internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent_triggeringWP
    @internalEvent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_triggeringWP
   @internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_CascadeEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_CascadeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_CascadeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_CascadeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_CascadeEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_triggeringWP
    @internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent_triggeringWP
    @internalEvent_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_triggeringWP
    @internalEvent_ID INT
   ,@triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID, @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_triggeringWP
   @internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_InternalEvent_triggeringWP @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RetryEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RetryEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RetryEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RetryEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RetryEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_warehouseProcess
    @warehouseEvent_ID INT
   ,@warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID, @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_warehouseProcess
   @warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_Events_WarehouseEvent_warehouseProcess @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_parameter
    @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RecurringPointInTimeEvent_parameter
    @event_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Behavioral_Event_parameter @event_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_parameter
    @event_ID INT
   ,@parameter_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Behavioral_Event_parameter @event_ID, @parameter_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_parameter
   @event_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Behavioral_Event_parameter @event_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RecurringPointInTimeEvent_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RecurringPointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_Events_RecurringPointInTimeEvent_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_Events_RecurringPointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_Events_RecurringPointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_Events_RecurringPointInTimeEvent_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_Events_RecurringPointInTimeEvent_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.WarehouseProcess'
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_warehouseEvent
    @warehouseProcess_ID INT
AS
   SELECT _ID
      FROM WarehouseProcess_Events_WarehouseEvent
      WHERE warehouseProcess_ID = @warehouseProcess_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess_warehouseEvent
    @warehouseProcess_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_Event_warehouseEvent @warehouseProcess_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_Event @warehouseProcess_ID = @warehouseProcess_ID, @warehouseEvent_ID = @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_Event @warehouseProcess_ID = @warehouseProcess_ID, @warehouseEvent_ID = @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_warehouseEvent
   @warehouseProcess_ID INT
AS
   DECLARE @Error INT
   DECLARE @warehouseEvent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_46913FA39B3B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM WarehouseProcess_Events_WarehouseEvent
            WHERE warehouseProcess_ID = @warehouseProcess_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @warehouseEvent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_Event @warehouseProcess_ID, @warehouseEvent_ID
         FETCH NEXT FROM @_Cursor INTO @warehouseEvent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_46913FA39B3B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_internalEvent
    @triggeringWP_ID INT
AS
   SELECT internalEvent_ID
      FROM WarehouseProcess_TriggeringProcess
      WHERE triggeringWP_ID = @triggeringWP_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess_internalEvent
    @triggeringWP_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_TriggeringProcess_internalEvent @triggeringWP_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_TriggeringProcess @triggeringWP_ID = @triggeringWP_ID, @internalEvent_ID = @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_TriggeringProcess @triggeringWP_ID = @triggeringWP_ID, @internalEvent_ID = @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_internalEvent
   @triggeringWP_ID INT
AS
   DECLARE @Error INT
   DECLARE @internalEvent_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_5B1EC09DBB52
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT internalEvent_ID
            FROM WarehouseProcess_TriggeringProcess
            WHERE triggeringWP_ID = @triggeringWP_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @internalEvent_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_TriggeringProcess @triggeringWP_ID, @internalEvent_ID
         FETCH NEXT FROM @_Cursor INTO @internalEvent_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_5B1EC09DBB52
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseProcess_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseProcess_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseProcess_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseProcess_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseProcess_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.WarehouseStep'
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_transformationStep
    @warehouseStep_ID INT
   ,@transformationStep_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseStepRunsTransformationStep_transformationStep @warehouseStep_ID, @transformationStep_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_transformationStep
    @warehouseStep_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_WarehouseStepRunsTransformationStep @warehouseStep_ID = @warehouseStep_ID, @transformationStep_ID = @transformationStep_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_transformationStep
    @warehouseStep_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_WarehouseStepRunsTransformationStep @warehouseStep_ID = @warehouseStep_ID, @transformationStep_ID = @transformationStep_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_transformationStep
   @warehouseStep_ID INT
AS
   DECLARE @Error INT
   DECLARE @transformationStep_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_9EC42CD5F94D
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transformationStep_ID
            FROM WarehouseProcess_WarehouseStep
            WHERE _ID = @warehouseStep_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transformationStep_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_WarehouseStepRunsTransformationStep @warehouseStep_ID, @transformationStep_ID
         FETCH NEXT FROM @_Cursor INTO @transformationStep_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_9EC42CD5F94D
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_warehouseActivity
    @warehouseStep_ID INT
   ,@warehouseActivity_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseActivityStep_warehouseActivity @warehouseStep_ID, @warehouseActivity_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_warehouseActivity
    @warehouseStep_ID INT
   ,@warehouseActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_WarehouseActivityStep @warehouseStep_ID = @warehouseStep_ID, @warehouseActivity_ID = @warehouseActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_warehouseActivity
    @warehouseStep_ID INT
   ,@warehouseActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityStep @warehouseStep_ID = @warehouseStep_ID, @warehouseActivity_ID = @warehouseActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_warehouseActivity
   @warehouseStep_ID INT
AS
   DECLARE @Error INT
   DECLARE @warehouseActivity_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_9F784EA7F4D2
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT warehouseActivity_ID
            FROM WarehouseProcess_WarehouseActivityStep
            WHERE warehouseStep_ID = @warehouseStep_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @warehouseActivity_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityStep @warehouseStep_ID, @warehouseActivity_ID
         FETCH NEXT FROM @_Cursor INTO @warehouseActivity_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_9F784EA7F4D2
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_warehouseEvent
    @warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep_warehouseEvent
    @warehouseProcess_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_warehouseEvent
   @warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_internalEvent
    @triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep_internalEvent
    @triggeringWP_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_internalEvent
   @triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseStep_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseStep_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseStep_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_importedElement
    @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage_importedElement
    @importer_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Package_importedElement @importer_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_importedElement
    @importer_ID INT
   ,@importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Package_importedElement @importer_ID, @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_importedElement
   @importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Package_importedElement @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_ownedElement
    @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage_ownedElement
    @namespace_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_Namespace_ownedElement @namespace_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_ownedElement
    @namespace_ID INT
   ,@ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_Namespace_ownedElement @namespace_ID, @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_ownedElement
   @namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_Namespace_ownedElement @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_ProcessPackage_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_ProcessPackage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_ProcessPackage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_ProcessPackage_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_ProcessPackage_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseProcess.WarehouseActivity'
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_transformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseProcess_WarehouseActivityRunsTransformationActivity_transformationActivity @warehouseActivity_ID, @transformationActivity_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_transformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_WarehouseActivityRunsTransformationActivity @warehouseActivity_ID = @warehouseActivity_ID, @transformationActivity_ID = @transformationActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_transformationActivity
    @warehouseActivity_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityRunsTransformationActivity @warehouseActivity_ID = @warehouseActivity_ID, @transformationActivity_ID = @transformationActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_transformationActivity
   @warehouseActivity_ID INT
AS
   DECLARE @Error INT
   DECLARE @transformationActivity_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_A6911466061F
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transformationActivity_ID
            FROM WarehouseProcess_WarehouseActivity
            WHERE _ID = @warehouseActivity_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transformationActivity_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityRunsTransformationActivity @warehouseActivity_ID, @transformationActivity_ID
         FETCH NEXT FROM @_Cursor INTO @transformationActivity_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_A6911466061F
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_warehouseStep
    @warehouseActivity_ID INT
AS
   SELECT warehouseStep_ID
      FROM WarehouseProcess_WarehouseActivityStep
      WHERE warehouseActivity_ID = @warehouseActivity_ID
      ORDER BY warehouseStep_Ordinal
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_warehouseStep
    @warehouseActivity_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_WarehouseActivityStep_warehouseStep @warehouseActivity_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_warehouseStep
    @warehouseActivity_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseProcess_WarehouseActivityStep @warehouseActivity_ID = @warehouseActivity_ID, @warehouseStep_ID = @warehouseStep_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_warehouseStep
    @warehouseActivity_ID INT
   ,@warehouseStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityStep @warehouseActivity_ID = @warehouseActivity_ID, @warehouseStep_ID = @warehouseStep_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_warehouseStep
   @warehouseActivity_ID INT
AS
   DECLARE @Error INT
   DECLARE @warehouseStep_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_D2680C52999E
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT warehouseStep_ID
            FROM WarehouseProcess_WarehouseActivityStep
            WHERE warehouseActivity_ID = @warehouseActivity_ID
            ORDER BY warehouseStep_Ordinal
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @warehouseStep_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseProcess_WarehouseActivityStep @warehouseActivity_ID, @warehouseStep_ID
         FETCH NEXT FROM @_Cursor INTO @warehouseStep_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_D2680C52999E
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_warehouseEvent
    @warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_warehouseEvent
    @warehouseProcess_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_warehouseEvent
    @warehouseProcess_ID INT
   ,@warehouseEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID, @warehouseEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_warehouseEvent
   @warehouseProcess_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_warehouseEvent @warehouseProcess_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_internalEvent
    @triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_internalEvent
    @triggeringWP_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_internalEvent
    @triggeringWP_ID INT
   ,@internalEvent_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID, @internalEvent_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_internalEvent
   @triggeringWP_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_WarehouseProcess_WarehouseProcess_internalEvent @triggeringWP_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseProcess_WarehouseActivity_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseProcess_WarehouseActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseProcess_WarehouseActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseProcess_WarehouseActivity_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseProcess_WarehouseActivity_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


--
-- WarehouseOperation References
--


PRINT 'References WarehouseOperation.Measurement'
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_modelElement
    @measurement_ID INT
   ,@modelElement_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_ModelElementMeasurement_modelElement @measurement_ID, @modelElement_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_Measurement_modelElement
    @measurement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_ModelElementMeasurement @measurement_ID = @measurement_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_Measurement_modelElement
    @measurement_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_ModelElementMeasurement @measurement_ID = @measurement_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_Measurement_modelElement
   @measurement_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_38F8240B8B17
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM WarehouseOperation_ModelElementMeasurement
            WHERE measurement_ID = @measurement_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_ModelElementMeasurement @measurement_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_38F8240B8B17
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_Measurement_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_Measurement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_Measurement_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_Measurement_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_Measurement_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_Measurement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_Measurement_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_Measurement_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_Measurement_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_Measurement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_Measurement_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_Measurement_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_Measurement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_Measurement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_Measurement_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_Measurement_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseOperation.ChangeRequest'
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_modelElement
    @changeRequest_ID INT
AS
   SELECT modelElement_ID
      FROM WarehouseOperation_ModelElementChangeRequest
      WHERE changeRequest_ID = @changeRequest_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ChangeRequest_modelElement
    @changeRequest_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseOperation_ModelElementChangeRequest_modelElement @changeRequest_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ChangeRequest_modelElement
    @changeRequest_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_ModelElementChangeRequest @changeRequest_ID = @changeRequest_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ChangeRequest_modelElement
    @changeRequest_ID INT
   ,@modelElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_ModelElementChangeRequest @changeRequest_ID = @changeRequest_ID, @modelElement_ID = @modelElement_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ChangeRequest_modelElement
   @changeRequest_ID INT
AS
   DECLARE @Error INT
   DECLARE @modelElement_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_0CF944FBBF7B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT modelElement_ID
            FROM WarehouseOperation_ModelElementChangeRequest
            WHERE changeRequest_ID = @changeRequest_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_ModelElementChangeRequest @changeRequest_ID, @modelElement_ID
         FETCH NEXT FROM @_Cursor INTO @modelElement_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_0CF944FBBF7B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ChangeRequest_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ChangeRequest_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ChangeRequest_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ChangeRequest_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ChangeRequest_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ChangeRequest_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ChangeRequest_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ChangeRequest_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ChangeRequest_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ChangeRequest_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ChangeRequest_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ChangeRequest_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ChangeRequest_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ChangeRequest_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ChangeRequest_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ChangeRequest_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationExecution_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_TransformationExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_TransformationExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_TransformationExecution_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationExecution_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_TransformationExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_TransformationExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_TransformationExecution_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_TransformationExecution_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_TransformationExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_TransformationExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_TransformationExecution_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_TransformationExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_TransformationExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_TransformationExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_TransformationExecution_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseOperation.ActivityExecution'
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_transformationActivity
    @execution_ID INT
   ,@transformationActivity_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationActivityExecutions_transformationActivity @execution_ID, @transformationActivity_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_transformationActivity
    @execution_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_TransformationActivityExecutions @execution_ID = @execution_ID, @transformationActivity_ID = @transformationActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_transformationActivity
    @execution_ID INT
   ,@transformationActivity_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_TransformationActivityExecutions @execution_ID = @execution_ID, @transformationActivity_ID = @transformationActivity_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_transformationActivity
   @execution_ID INT
AS
   DECLARE @Error INT
   DECLARE @transformationActivity_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_49320DBA997B
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transformationActivity_ID
            FROM WarehouseOperation_ActivityExecution
            WHERE _ID = @execution_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transformationActivity_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_TransformationActivityExecutions @execution_ID, @transformationActivity_ID
         FETCH NEXT FROM @_Cursor INTO @transformationActivity_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_49320DBA997B
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_stepExecution
    @activityExecution_ID INT
AS
   SELECT _ID
      FROM WarehouseOperation_StepExecution
      WHERE activityExecution_ID = @activityExecution_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityExecution_stepExecution
    @activityExecution_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_WarehouseOperation_ActivityStepExecutions_stepExecution @activityExecution_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_stepExecution
    @activityExecution_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_ActivityStepExecutions @activityExecution_ID = @activityExecution_ID, @stepExecution_ID = @stepExecution_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_stepExecution
    @activityExecution_ID INT
   ,@stepExecution_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_ActivityStepExecutions @activityExecution_ID = @activityExecution_ID, @stepExecution_ID = @stepExecution_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_stepExecution
   @activityExecution_ID INT
AS
   DECLARE @Error INT
   DECLARE @stepExecution_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_5DBFC800D378
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT _ID
            FROM WarehouseOperation_StepExecution
            WHERE activityExecution_ID = @activityExecution_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @stepExecution_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_ActivityStepExecutions @activityExecution_ID, @stepExecution_ID
         FETCH NEXT FROM @_Cursor INTO @stepExecution_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_5DBFC800D378
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityExecution_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityExecution_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_ActivityExecution_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_ActivityExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_ActivityExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_ActivityExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_ActivityExecution_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


PRINT 'References WarehouseOperation.StepExecution'
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_transformationStep
    @execution_ID INT
   ,@transformationStep_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_TransformationStepExecutions_transformationStep @execution_ID, @transformationStep_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_transformationStep
    @execution_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_TransformationStepExecutions @execution_ID = @execution_ID, @transformationStep_ID = @transformationStep_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_transformationStep
    @execution_ID INT
   ,@transformationStep_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_TransformationStepExecutions @execution_ID = @execution_ID, @transformationStep_ID = @transformationStep_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_transformationStep
   @execution_ID INT
AS
   DECLARE @Error INT
   DECLARE @transformationStep_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_3E0891223AEF
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT transformationStep_ID
            FROM WarehouseOperation_StepExecution
            WHERE _ID = @execution_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @transformationStep_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_TransformationStepExecutions @execution_ID, @transformationStep_ID
         FETCH NEXT FROM @_Cursor INTO @transformationStep_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_3E0891223AEF
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_activityExecution
    @stepExecution_ID INT
   ,@activityExecution_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_ActivityStepExecutions_activityExecution @stepExecution_ID, @activityExecution_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_activityExecution
    @stepExecution_ID INT
   ,@activityExecution_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_ActivityStepExecutions @stepExecution_ID = @stepExecution_ID, @activityExecution_ID = @activityExecution_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_activityExecution
    @stepExecution_ID INT
   ,@activityExecution_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_ActivityStepExecutions @stepExecution_ID = @stepExecution_ID, @activityExecution_ID = @activityExecution_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_activityExecution
   @stepExecution_ID INT
AS
   DECLARE @Error INT
   DECLARE @activityExecution_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_40C32358D6C9
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT activityExecution_ID
            FROM WarehouseOperation_StepExecution
            WHERE _ID = @stepExecution_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @activityExecution_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_ActivityStepExecutions @stepExecution_ID, @activityExecution_ID
         FETCH NEXT FROM @_Cursor INTO @activityExecution_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_40C32358D6C9
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_callAction
    @stepExecution_ID INT
   ,@callAction_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = Get_WarehouseOperation_StepExecutionCallAction_callAction @stepExecution_ID, @callAction_ID OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_callAction
    @stepExecution_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Create_WarehouseOperation_StepExecutionCallAction @stepExecution_ID = @stepExecution_ID, @callAction_ID = @callAction_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_callAction
    @stepExecution_ID INT
   ,@callAction_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Delete_WarehouseOperation_StepExecutionCallAction @stepExecution_ID = @stepExecution_ID, @callAction_ID = @callAction_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_callAction
   @stepExecution_ID INT
AS
   DECLARE @Error INT
   DECLARE @callAction_ID INT
   DECLARE @_Cursor CURSOR
   BEGIN TRANSACTION ExcludeAll_Warehous_DFC6DE9A8401
   SELECT @Error = @@Error
   IF @Error = 0
   BEGIN
      SET @_Cursor = CURSOR FORWARD_ONLY STATIC FOR 
         SELECT callAction_ID
            FROM WarehouseOperation_StepExecution
            WHERE _ID = @stepExecution_ID
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      OPEN @_Cursor
      SELECT @Error = @@Error
   END
   IF @Error = 0
   BEGIN
      FETCH NEXT FROM @_Cursor INTO @callAction_ID
      WHILE @@Fetch_Status = 0 and @Error = 0
      BEGIN
         EXECUTE @Error = Delete_WarehouseOperation_StepExecutionCallAction @stepExecution_ID, @callAction_ID
         FETCH NEXT FROM @_Cursor INTO @callAction_ID
      END
   END
   CLOSE @_Cursor
   DEALLOCATE @_Cursor
   IF @Error = 0
      COMMIT TRANSACTION ExcludeAll_Warehous_DFC6DE9A8401
   ELSE
      ROLLBACK TRANSACTION
   IF @@Error <> 0
      SELECT @Error = @@Error
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_clientDependency
    @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_StepExecution_clientDependency
    @client_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_clientDependency @client_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_clientDependency
    @client_ID INT
   ,@clientDependency_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_clientDependency @client_ID, @clientDependency_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_clientDependency
   @client_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_clientDependency @client_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_constraint
    @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_StepExecution_constraint
    @constrainedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_constraint @constrainedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_constraint
    @constrainedElement_ID INT
   ,@constraint_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_constraint @constrainedElement_ID, @constraint_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_constraint
   @constrainedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_constraint @constrainedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_importer
    @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @@Error
GO

CREATE PROCEDURE GetCursor_WarehouseOperation_StepExecution_importer
    @importedElement_ID INT
   ,@_Cursor CURSOR VARYING OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = GetCursor_Core_ModelElement_importer @importedElement_ID, @_Cursor OUTPUT
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_importer
    @importedElement_ID INT
   ,@importer_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_importer @importedElement_ID, @importer_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_importer
   @importedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_importer @importedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Get_WarehouseOperation_StepExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT OUTPUT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO

CREATE PROCEDURE Include_WarehouseOperation_StepExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Include_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE Exclude_WarehouseOperation_StepExecution_namespace
    @ownedElement_ID INT
   ,@namespace_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = Exclude_Core_ModelElement_namespace @ownedElement_ID, @namespace_ID
   RETURN @Error
GO

CREATE PROCEDURE ExcludeAll_WarehouseOperation_StepExecution_namespace
   @ownedElement_ID INT
AS
   DECLARE @Error INT
   EXECUTE @Error = ExcludeAll_Core_ModelElement_namespace @ownedElement_ID
   RETURN @Error
GO


SET NOCOUNT OFF
GO

PRINT ''
PRINT 'End of [CWM 1.0]'

-- CWM 1.0 Generation Summary
--
-- Object constructs:
--       21	top-level packages
--      204	classes
--      221	attributes
--      154	associations
--       25	data types
--      252	references
--        0	operations (suppressed)
--
-- Relational constructs:
--      295	tables
--      705	columns
--        2	indices
--    10802	procedures
--
-- Warnings: 	0
-- Errors: 	0
